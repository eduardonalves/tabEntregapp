{"version":3,"sources":["assets/images/pedra.png","assets/images/papel.png","assets/images/tesoura.png","assets/images/jokenpo.png","assets/images/logo_mini.jpg","src/actions/ActionTypes.js","src/reducers/AppReducer.js","src/reducers/DishesReducer.js","src/reducers/MyGiftsReducer.js","src/reducers/index.js","constants/Colors.js","components/TabBarIcon.js","screens/LinksScreen.js","src/Settings.js","src/actions/AppActions.js","src/components/RestaurantItem.js","src/components/common/CartButton.js","src/components/Restaurants.js","src/components/ListOrder.js","src/components/Orders.js","src/components/Profile.js","src/components/Escolha.js","src/components/IconeJokenpo.js","src/components/MenuReward.js","navigation/MainTabNavigator.js","src/actions/DishesActions.js","src/components/common/CustomModal.js","src/components/ListItem.js","src/components/ListItemIos.js","src/components/Dishes.js","src/components/DishesAdc.js","src/components/common/EmptyCart.js","src/components/ListCart.js","src/components/Checkout.js","src/components/Billing.js","src/components/FooterCheckout.js","src/components/Cart.js","src/components/FormLogin.js","src/components/Jokenpo.js","src/components/FormCadastro.js","src/components/FormRecover.js","src/components/ItemOrder.js","src/components/ViewOrder.js","src/actions/MyGiftsActions.js","src/components/MyGifts.js","NavigationService.js","navigation/AppNavigator.web.js","src/components/Notifications.js","App.js","web-build/register-service-worker.js","assets/shopping-bag.png","assets/images/PngItem_5107354.png","assets/empty-bag.png","assets/images/robot-dev.png","assets/images/robot-prod.png","assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","SHOW_LOADER","INITIAL_STATE","adiciona_contato_email","msgErroCadastroUsuario","cadastroResultadoUsuario","categorias","mensagem","carrinho","qtd_carrinho","item_id","total_carrinho","qtd","info_modal","show_modal","obs_pedido","troco_pedido","forma_pagamento","status_envio_pedido","tipos_pagamento","tipo_pagamento_falha","pode_enviar_pedido","show_loader","show_loader_categoria","show_loader_produto","categoria_carregada_falha","meus_pedidos","meus_pedidos_carregados_falha","pedido","pedido_carregado_falha","produto_carregado_falha","msgErroLogin","loadingLogin","nome","email","senha","cep","endereco","numero","complemento","ponto_referencia","estado","cidade","bairro","telefone","username","lista_estados","lista_cidades","lista_bairros","cadastro_usuario","cadastro_usuario_falha","confirma_senha","usuario","carrega_cidade_falha","carrega_bairro_falha","carrega_estado_falha","cadastro_usuario_sucesso","usuario_id","senha_antiga","usuario_atualizou_cadastro","estado_nome","bairro_nome","cidade_nome","is_valid_token","iniciou_partida","dados_partida","dados_premio","resultado","txtColor","escolhaDoComputador","escolhaUsuario","showImage","imagemComputador","require","imagemUsuario","n_vitorias","n_derrotas","resultado_final","saldo","notification","messageText","token_notificacao","estado_do_app","valor_frete","produtos","combineReducers","AppReducer","state","action","type","payload","console","log","length","toFixed","DishesReducer","MyGiftsReducer","TabBarIcon","props","Ionicons","name","size","style","marginBottom","Platform","OS","color","focused","Colors","StyleSheet","create","container","flex","paddingTop","backgroundColor","APP_URL","SEM_DESCRICAO","SALT","modificaTokenNotificacao","txt","dispatch","modificaNotificacao","notofication","cadastraUsuario","axios","post","then","res","data","ultimocliente","Alert","alert","text","cancelable","dadosUsuario","Cliente","password","salt","empresa","empresa_id","filial","filial_id","ultimopedido","catch","error","estadosFetch","interval","loadError","passouOk","clearInterval","get","resultados","setInterval","estadosFetchInterval","cidadesFetch","cidadesFetchInterval","bairroFetch","bairroFetchInterval","limpaListaCidades","limpaListaBairros","limpaListaEstados","pedidosViewFetch","cliente","token","atendimento","pedidosViewFetchInterval","pedidosFetch","pedidosFetchInverval","categoriasFetch","categoriasFetchInterval","freteFetch","id","frete","pagamentos","tiposPagamentoFetch","addToCart","produto","push","total","updateCart","updateItemId","removeFromCart","newItem","map","item","parseFloat","preco_venda","setModalVisible","status","content","atualizaTroco","troco","atualizaObs","obs","atualizaFormaDePagamento","pagamento","enviaPedido","meuPedido","montaPedido","onPress","limpaCarrinho","Pedido","validaToken","users","entrarJokenpo","dados","fp","toString","lj","clt","Partida","moedas","ultima_parcial","escolha_computador","escolha_usuario","restultado","jogarJokenpo","modificaSaldo","verificasaldo","showMyLoader","showMyLoaderCategory","setStatusEnvioPedido","setStatusCadastroUsuario","novoPedido","a","status_novo","cliente_id","pagamento_id","trocovalor","trocoresposta","entrega_valor","logradouro","bairro_id","cidad_id","estado_id","ptk","Itensdepedido","v","k","p_total","produto_id","qtde","valor_unit","valor_total","obs_sis","partida_id","modificaEmail","texto","modificaUsuario","modificaSenha","modificaConfirmaSenha","modificaNome","modificaCep","modificaEndereco","modificaNumero","modificaComplemento","modificaPontoReferencia","modificaEstado","modificaCidade","modificaBairro","modificaTelefone","modificaUsername","limpaFormularioCadastro","modificaIniciouPartida","RestaurantItem","handleClick","setState","isClicked","handleNaviagation","TouchableOpacity","this","View","marginHorizontal","marginVertical","borderRadius","height","Image","Color","position","width","justifyContent","source","uri","image","replace","padding","bottom","Text","fontSize","fontWeight","React","Component","connect","bindActionCreators","CartButton","handleNavigate","bind","marginRight","right","top","textAlign","lineHeight","Restaurants","navigation","navigate","categoria_id","handleBackButtonClick","BackHandler","addEventListener","removeEventListener","exitApp","styles","opacity","alignItems","flexDirection","FlatList","keyExtractor","Categoria","renderItem","foto","cuisine","location","isVegetarian","marginTop","ActivityIndicator","animating","hidesWhenStopped","navigationOptions","headerTitle","headerStyle","elevation","shadowOpacity","headerTitleStyle","headerRight","ListOrder","handleRemoveFromCart","linha","Atendimento","hora","value","valor","displayType","renderText","thousandSeparator","decimalScale","fixedDecimalScale","prefix","decimalSeparator","Orders","Atendimento_id","getToken","nextProps","storeToken","user","AsyncStorage","setItem","JSON","stringify","getItem","userData","parse","index","Perfil","modificaCarregaEstadoFalha","modificaIdUsuario","modificaSenhaAntiga","uf","modificaUsuarioModificouCadastro","params","_isValidUser","passwordcconfirm","cadastraUsuarioEditComSenha","cadastraUsuarioEdit","estates","Picker","Item","label","Estado","key","cities","Cidad","neigborhood","Bairro","enableAutomaticScroll","extraScrollHeight","enableOnAndroid","resetScrollToCoords","x","y","extraHeight","select","android","contentContainerStyle","grid","ScrollView","contentBody","containerStyle","_bodyInputText","onChangeText","selectedValue","onValueChange","itemValue","itemIndex","_handleModificaEstado","_handleModificaCidade","disabled","secureTextEntry","stylcontainerStylee","txtMsgErro","msgErroCadastro","Button","title","_handleCadastraUsuario","alignSelf","marginLeft","alignContent","headerTintColor","loadingCadastro","contentFooter","BtnEscolha","styleBtn","jokenpo","btnEscolha","painelAcoes","palco","txtResultado","MenuReward","resp","handleGotoJokenpo","user_id","paddingLeft","paddingRight","e","gotoJokenpo","paddingBottom","gotoMyGifts","config","web","headerMode","default","HomeStack","createStackNavigator","Home","tabBarLabel","tabBarIcon","path","MenuRewardStack","LinksStack","Links","tintColor","SettingsStack","Settings","Profile","tabBarOptions","inactiveTintColor","activeTintColor","tabNavigator","createBottomTabNavigator","labelStyle","produtosFetch","adicionalFetch","showMyLoaderProduct","CustomModal","Modal","setAppElement","visible","animationType","transparent","modalContent","button","margin","borderColor","bottomModal","ListItem","handleAddToCart","price","descricao","description","parte_compre_ganhe","frete_cadastro","tem_adicional","handleGoToDishesAdc","handleGoToLogin","showAlert","hideAlert","modalVisible","preco","show","showProgress","message","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","cancelText","confirmText","confirmButtonColor","onCancelPressed","onConfirmPressed","shadowRadius","shadowOffset","disponivel","data_validade","ListItemIos","Dishes","getParam","Produto","id_sec","headerLeft","HeaderBackButton","DishesAdc","handleGoToDishes","EmptyCart","ListCart","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","Checkout","Billing","atendimento_id","event","payments","Pagamento","tipo","placeholder","handleAtualizatroco","editable","handleSendOrder","FooterCheckout","valorFrete","multiline","numberOfLines","textAlignVertical","borderWidth","Cart","formLogin","autenticarUsuario","_autenticarUsuario","contentHeader","_txtMsgErroLogin","_bodyText","TouchableHighlight","_LinkText","renderBtnEntrar","contVezesErrou","background","_headerTitle","Jokenpo","test","btnDisabled","styleImage","FormCadastro","ativo","blurOnSubmit","onSubmitEditing","Keyboard","dismiss","FormRecover","recuperarSenha","_recuperarSenha","ItemOrder","produtonome","ViewOrder","container1","formadepagamento","container2","container3","motivocancela","Filial","tempo_atendimento","telefone1","telefone2","telefone3","produtosByRecFetch","datatosend","MyGifts","_navigator","Routes","screen","initialRouteName","defaultNavigationOptions","RoutesLogin","FormLogin","createAppContainer","createSwitchNavigator","Main","MainTabNavigator","routeName","NavigationActions","setTopLevelNavigator","navigatorRef","Notification","registerForPushNotificationsAsync","async","Constants","isDevice","Permissions","existingStatus","finalStatus","Notifications","getExpoPushTokenAsync","_handleNotification","Vibration","vibrate","origin","NavigationService","sendPushNotification","_notificationSubscription","addListener","App","useState","isLoadingComplete","setLoadingComplete","skipLoadingScreen","store","createStore","reducers","applyMiddleware","ReduxThunk","StatusBar","barStyle","ref","AppLoading","startAsync","loadResourcesAsync","onError","handleLoadingError","onFinish","handleFinishLoading","Promise","all","Asset","loadAsync","Font","font","warn","navigator","window","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.34b60fb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pedra.9377872f.png\";","module.exports = __webpack_public_path__ + \"static/media/papel.a807d18c.png\";","module.exports = __webpack_public_path__ + \"static/media/tesoura.1d0a18be.png\";","module.exports = __webpack_public_path__ + \"static/media/jokenpo.af716617.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_mini.05ce5d6f.jpg\";","export const CONFIRMA_SENHA='confirma_senha';\r\nexport const MODIFICA_EMAIL = 'modifica_email';\r\nexport const MODIFICA_SENHA = 'modifica_senha';\r\nexport const MODIFICA_NOME = 'modifica_nome';\r\nexport const MODIFICA_CEP = 'modifica_cep';\r\nexport const MODIFICA_ENDERECO = 'modifica_endereco';\r\nexport const MODIFICA_NUMERO = 'modifica_numero';\r\nexport const MODIFICA_COMPLEMENTO = 'modifica_complemento';\r\nexport const MODIFICA_PONTO_REFERENCIA = 'modifica_ponto_referencia';\r\nexport const MODIFICA_ESTADO ='modifica_estado';\r\nexport const MODIFICA_CIDADE ='modifica_cidade';\r\nexport const MODIFICA_BAIRRO ='modifica_bairro';\r\nexport const MODIFICA_TELEFONE ='modifica_telefone';\r\nexport const CADASTRO_USUARIO = 'cadastro_usuario';\r\nexport const MODIFICA_CONFIRMA_SENHA = 'modifica_confirma_senha';\r\nexport const MODIFICA_USERNAME = 'modifica_username';\r\nexport const MODIFICA_SENHA_ANTIGA='modifica_senha_antiga';\r\nexport const MODIFICA_ID_USUARIO= 'modifica_id_usuario';\r\nexport const USUARIO_ATUALIZOU_CADASTRO = 'usuario_atualizou_cadastro';\r\n\r\nexport const MODIFICA_NOME_ESTADO= 'modifica_nome_estado';\r\nexport const MODIFICA_NOME_CIDADE= 'modifica_nome_cidade';\r\nexport const MODIFICA_NOME_BAIRRO= 'modifica_nome_bairro';\r\n\r\nexport const CADASTRO_USUARIO_SUCESSO = 'cadastro_usuario_sucesso';\r\nexport const CADASTRO_USUARIO_ERRO = 'cadastro_usuario_erro';\r\nexport const CADASTRO_EM_ANDAMENTO = 'cadastro_em_andamento';\r\nexport const LOGIN_USUARIO_SUCESSO = 'login_usuario_sucesso';\r\nexport const LOGIN_USUARIO_ERRO = 'login_usuario_erro';\r\nexport const LOGIN_EM_ANDAMENTO = 'login_em_andamento';\r\nexport const ATUALIZA_USUARIO = 'atualiza_usuario';\r\n\r\n// App Actions\r\nexport const MODIFICA_ADICIONA_CONTATO_EMAIL = 'modifica_adiciona_contato_email';\r\nexport const ADICIONA_CONTATO = 'adiciona_contato';\r\nexport const ADICIONA_CONTATO_ERRO = 'adiciona_contato_erro';\r\nexport const ADICIONA_CONTATO_SUCESSO = 'adiciona_contato_sucesso';\r\nexport const LISTA_CONTATO_USUARIO = 'lista_contato_usuario';\r\n\r\n\r\n// Conversas\r\nexport const MODIFICA_MENSAGEM = 'modifica_mensagem';\r\nexport const LISTA_CONVERSA_USUARIO = 'lista_conversa_usuario';\r\nexport const ENVIA_MENSAGEM_SUCESSO = 'envia_mensagem_sucesso';\r\nexport const LISTA_CONVERSAS_USUARIO = 'lista_conversas_usuario';\r\n\r\n//categorias\r\nexport const CARREGA_CATEGORIAS = 'carrega_categorias';\r\nexport const CATEGORIA_CARREGADA_OK = 'categoria_carregada_ok';\r\nexport const CATEGORIA_CARREGADA_FALHA = 'categoria_carregada_falha';\r\n\r\n//produtos\r\nexport const CARREGA_PRODUTOS = 'carrega_protutos';\r\nexport const PRODUTO_CARREGADO_OK = 'produto_carregado_ok';\r\nexport const PRODUTO_CARREGADO_FALHA = 'produto_carregado_falha';\r\n\r\n\r\n//produtos\r\nexport const CARREGA_PEDIDOS = 'carrega_pedidos';\r\nexport const PEDIDO_CARREGADO_OK = 'pedido_carregado_ok';\r\nexport const PEDIDO_CARREGADO_FALHA = 'pedido_carregado_falha';\r\nexport const MEUS_PEDIDOS_CARREGADOS_OK = 'meus_pedidos_carregados_ok';\r\nexport const MEUS_PEDIDOS_CARREGADOS_FALHA = 'meus_pedidos_carregados_falha';\r\n\r\n\r\n//carrinho\r\nexport const ADICIONA_PRODUTO ='adiciona_produto';\r\nexport const REMOVE_PRODUTO = 'remove_produto';\r\nexport const LIMPA_CARRINHO =  'limpa_carrinho';\r\nexport const LIMPA_TOTAL_CARRINHO= 'limpa_total_carrinho';\r\nexport const LIMPA_QTD_CARRINHO = 'limpa_qtd_carrinho';\r\nexport const ATUALIZA_ITEM_ID =  'atualiza_item_id';\r\nexport const ATUALIZA_TOTAL_CARRINHO =  'atualiza_total_carrinho';\r\nexport const ATUALIZA_QTD =  'atualiza_qtd';\r\nexport const ATUALIZA_OBS= 'atualiza_obs';\r\nexport const ATUALIZA_FORMA_PAGAMENTO= 'atualiza_forma_pagamento';\r\nexport const ATUALIZA_TROCO= 'atualiza_troco';\r\nexport const FINALIZA_PEDIDO= 'finaliza_pedido';\r\nexport const PEDIDO_OK = 'pedido_ok';\r\nexport const STATUS_ENVIO_PEDIDO = 'status_envio_pedido';\r\nexport const PEDIDO_NAO_OK = 'pedido_nao_ok';\r\nexport const VALOR_FRETE = 'valor_frete';\r\n\r\n//tipos de pagamento\r\nexport const CARREGA_TIPOS_PAGAMENTO_OK = 'carrega_tipos_pagamento_ok';\r\nexport const CARREGA_TIPOS_PAGAMENTO_FALHA = 'carrega_tipos_pagamento_falha';\r\nexport const PODE_ENVIAR_PEDIDO = 'pode_enviar_pedido';\r\n\r\n//estado\r\nexport const CARREGA_ESTADO = 'carrega_estado';\r\nexport const CARREGA_ESTADO_FALHA = 'carrega_estado_falha';\r\nexport const LIMPA_ESTADO = 'limpa_estado';\r\n\r\n//cidade\r\nexport const CARREGA_CIDADE = 'carrega_cidade';\r\nexport const CARREGA_CIDADE_FALHA = 'carrega_cidade_falha';\r\nexport const LIMPA_CIDADE = 'limpa_cidade';\r\n\r\n//bairro\r\nexport const CARREGA_BAIRRO = 'carrega_bairro';\r\nexport const CARREGA_BAIRRO_FALHA = 'carrega_bairro_falha';\r\nexport const LIMPA_BAIRRO= 'limpa_bairro';\r\n\r\n\r\n//Modal\r\nexport const SHOW_MODAL =  'show_modal';\r\nexport const CARREGA_INFO_MODAL =  'carrega_info_modal';\r\n\r\n//Loader\r\nexport const SHOW_LOADER = 'show_loader';\r\nexport const SHOW_LOADER_CATEGORIA ='show_loader_categoria';\r\nexport const SHOW_LOADER_PRODUTO ='show_loader_produto';\r\n\r\n\r\n//Loader\r\nexport const IS_VALID_TOKEN = 'is_valid_token';\r\n\r\n\r\n//recompensas\r\nexport const DADOS_PARTIDA = 'dados_partida';\r\nexport const INICIOU_PARTIDA = 'iniciou_partida';\r\nexport const DADOS_PREMIO = 'dados_premio';\r\n\r\n//jokenpo\r\nexport const RESULTADO ='resultado';\r\nexport const TXTCOLOR ='txtcolor';\r\nexport const ESCOLHA_DO_COMPUTADOR  ='escolha_do_computador';\r\nexport const ESCOLHA_DO_USUARIO ='escolha_do_usuario';\r\nexport const SHOW_IMAGE ='show_image';\r\nexport const IMAGEM_COMPUTADOR ='imagem_computador';\r\nexport const IMAGEM_USUARIO ='imagem_usuario';\r\n\r\nexport const N_VITORIAS ='n_vitorias';\r\nexport const N_DERROTAS ='n_derrotas';\r\nexport const RESULTADO_FINAL ='resultado_final';\r\nexport const SALDO ='saldo';\r\nexport const MESSAGE_TEXT = 'message_text';\r\nexport const NOTIFICATION='notification';\r\nexport const TOKEN_NOTIFICACAO='token_notificacao';\r\nexport const REDIRECIONAR_NOTIFICACAO = 'redirecionar_notificacao';","const INITIAL_STATE = {\r\n    adiciona_contato_email: '',\r\n    msgErroCadastroUsuario: '',\r\n    cadastroResultadoUsuario: false,\r\n    categorias: '',\r\n    mensagem: '',\r\n    carrinho: [],\r\n    qtd_carrinho: 0,\r\n    item_id: 1,\r\n    total_carrinho: 0,\r\n    qtd: 1,\r\n    info_modal: 'Sem descrição disponível',\r\n    show_modal: false,\r\n    obs_pedido: '',\r\n    troco_pedido: '',\r\n    forma_pagamento: '',\r\n    status_envio_pedido: false,\r\n    tipos_pagamento: [],\r\n    tipo_pagamento_falha: '',\r\n    pode_enviar_pedido: true,\r\n    show_loader: false,\r\n    show_loader_categoria:false,\r\n    show_loader_produto:false,\r\n    categoria_carregada_falha:false,\r\n    meus_pedidos: [],\r\n    meus_pedidos_carregados_falha:false,\r\n    pedido:[],\r\n    pedido_carregado_falha:false,\r\n    produto_carregado_falha:false,\r\n    msgErroLogin: '',\r\n    loadingLogin: '',\r\n    nome: '',\r\n    email:'',\r\n    senha: '',\r\n    cep:'',\r\n    endereco:'',\r\n    numero:'',\r\n    complemento:'',\r\n    ponto_referencia:'',\r\n    estado:'',\r\n    cidade:'',\r\n    bairro:'',\r\n    telefone:'',\r\n    username:'',\r\n    lista_estados:[],\r\n    lista_cidades:[],\r\n    lista_bairros:[],\r\n    cadastro_usuario:'',\r\n    cadastro_usuario_falha:false,\r\n    confirma_senha:'',\r\n    usuario:'',\r\n    carrega_cidade_falha:false,\r\n    carrega_bairro_falha: false,\r\n    carrega_estado_falha:false,\r\n    cadastro_usuario_sucesso:false,\r\n    usuario_id:'',\r\n    senha_antiga:'',\r\n    usuario_atualizou_cadastro:false,\r\n    estado_nome:'',\r\n    bairro_nome:'',\r\n    cidade_nome:'',\r\n    is_valid_token:'',\r\n    iniciou_partida: false,\r\n    dados_partida: '',\r\n    dados_premio:'',\r\n    resultado: '', \r\n    txtColor: 'red', \r\n    escolhaDoComputador: '', \r\n    escolhaUsuario: '', \r\n    showImage: false, \r\n    imagemComputador: require('../../assets/images/pedra.png'), \r\n    imagemUsuario: require('../../assets/images/pedra.png'),\r\n    n_vitorias:0,\r\n    n_derrotas:0,\r\n    resultado_final:'',\r\n    saldo:0,\r\n    notification:null,\r\n    messageText: '',\r\n    token_notificacao:'',\r\n    estado_do_app:'',\r\n    valor_frete: 0,\r\n};\r\n\r\nimport {\r\n    MODIFICA_ADICIONA_CONTATO_EMAIL,\r\n    ADICIONA_CONTATO_ERRO,\r\n    ADICIONA_CONTATO_SUCESSO,\r\n    MODIFICA_MENSAGEM,\r\n    ENVIA_MENSAGEM_SUCESSO,\r\n    CATEGORIA_CARREGADA_OK,\r\n    ADICIONA_PRODUTO,\r\n    REMOVE_PRODUTO,\r\n    ATUALIZA_ITEM_ID,\r\n    ATUALIZA_TOTAL_CARRINHO,\r\n    ATUALIZA_QTD,\r\n    CARREGA_INFO_MODAL,\r\n    SHOW_MODAL,\r\n    ATUALIZA_FORMA_PAGAMENTO,\r\n    ATUALIZA_OBS,\r\n    ATUALIZA_TROCO,\r\n    PEDIDO_NAO_OK,\r\n    PEDIDO_OK,\r\n    STATUS_ENVIO_PEDIDO,\r\n    CARREGA_TIPOS_PAGAMENTO_OK,\r\n    CARREGA_TIPOS_PAGAMENTO_FALHA,\r\n    PODE_ENVIAR_PEDIDO,\r\n    SHOW_LOADER,\r\n    LIMPA_CARRINHO,\r\n    LIMPA_QTD_CARRINHO,\r\n    LIMPA_TOTAL_CARRINHO,\r\n    SHOW_LOADER_CATEGORIA,\r\n    SHOW_LOADER_PRODUTO,\r\n    CATEGORIA_CARREGADA_FALHA,\r\n    PEDIDO_CARREGADO_FALHA,\r\n    PEDIDO_CARREGADO_OK,\r\n    MEUS_PEDIDOS_CARREGADOS_OK,\r\n    MEUS_PEDIDOS_CARREGADOS_FALHA,\r\n    MODIFICA_NOME,\r\n    MODIFICA_EMAIL,\r\n    MODIFICA_CEP, \r\n    MODIFICA_SENHA,\r\n    MODIFICA_ENDERECO,\r\n    MODIFICA_NUMERO,\r\n    MODIFICA_COMPLEMENTO,\r\n    MODIFICA_PONTO_REFERENCIA,\r\n    MODIFICA_ESTADO,\r\n    MODIFICA_CIDADE,\r\n    MODIFICA_BAIRRO,\r\n    MODIFICA_TELEFONE,\r\n    MODIFICA_CONFIRMA_SENHA,\r\n    CADASTRO_USUARIO,\r\n    CADASTRO_USUARIO_ERRO,\r\n    CONFIRMA_SENHA,\r\n    MODIFICA_CONFIR,\r\n    CARREGA_CIDADE,\r\n    CARREGA_BAIRRO,\r\n    CARREGA_BAIRRO_FALHA,\r\n    CARREGA_CIDADE_FALHA,\r\n    CARREGA_ESTADO,\r\n    CARREGA_ESTADO_FALHA,\r\n    LIMPA_BAIRRO,\r\n    LIMPA_CIDADE,\r\n    LIMPA_ESTADO,\r\n    CADASTRO_USUARIO_SUCESSO,\r\n    ATUALIZA_USUARIO,\r\n    MODIFICA_USERNAME,\r\n    MODIFICA_SENHA_ANTIGA,\r\n    MODIFICA_ID_USUARIO,\r\n    USUARIO_ATUALIZOU_CADASTRO,\r\n    MODIFICA_NOME_ESTADO,\r\n    MODIFICA_NOME_CIDADE,\r\n    MODIFICA_NOME_BAIRRO,\r\n    IS_VALID_TOKEN,\r\n    INICIOU_PARTIDA,\r\n    DADOS_PARTIDA,\r\n    DADOS_PREMIO,\r\n    RESULTADO,\r\n    TXTCOLOR,\r\n    ESCOLHA_DO_COMPUTADOR,\r\n    ESCOLHA_DO_USUARIO,\r\n    SHOW_IMAGE,\r\n    IMAGEM_COMPUTADOR,\r\n    IMAGEM_USUARIO,\r\n    N_VITORIAS,\r\n    N_DERROTAS,\r\n    RESULTADO_FINAL,\r\n    SALDO,\r\n    NOTIFICATION,\r\n    MESSAGE_TEXT,\r\n    TOKEN_NOTIFICACAO,\r\n    VALOR_FRETE,\r\n} from '../actions/ActionTypes';\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n   \r\n    switch (action.type) {\r\n        case TOKEN_NOTIFICACAO:\r\n            return { ...state, token_notificacao: action.payload };\r\n        case VALOR_FRETE:\r\n            console.log('passou aqui')\r\n            return { ...state, valor_frete: action.payload };    \r\n        case NOTIFICATION:\r\n            return { ...state, notification: action.payload };\r\n        case MESSAGE_TEXT:\r\n            return { ...state, messageText: action.payload };    \r\n        case SALDO:\r\n            return { ...state, saldo: action.payload };\r\n        case N_VITORIAS:\r\n            return { ...state, n_vitorias: action.payload };\r\n        case N_DERROTAS:\r\n            return { ...state, n_derrotas: action.payload };\r\n\r\n        case RESULTADO_FINAL:\r\n            return { ...state, resultado_final: action.payload };\r\n\r\n        case RESULTADO:\r\n            return { ...state, resultado: action.payload };\r\n        \r\n        case RESULTADO:\r\n            return { ...state, resultado: action.payload };\r\n        \r\n        case RESULTADO:\r\n            return { ...state, resultado: action.payload };    \r\n            \r\n        case TXTCOLOR:\r\n            return { ...state, txtColor: action.payload };   \r\n        case ESCOLHA_DO_COMPUTADOR:\r\n            return { ...state, escolhaDoComputador: action.payload };\r\n        case ESCOLHA_DO_USUARIO:\r\n            return { ...state, escolhaUsuario: action.payload };  \r\n        case SHOW_IMAGE:\r\n            return { ...state, showImage: action.payload };   \r\n        case IMAGEM_COMPUTADOR:\r\n            return { ...state, imagemComputador: action.payload };\r\n        case IMAGEM_USUARIO:\r\n            return { ...state, imagemUsuario: action.payload };    \r\n        case DADOS_PREMIO:\r\n            return { ...state, dados_premio: action.payload };\r\n        case INICIOU_PARTIDA:\r\n            return { ...state, iniciou_partida: action.payload };\r\n        case DADOS_PARTIDA:\r\n            return { ...state, dados_partida: action.payload };    \r\n\r\n        case MODIFICA_SENHA_ANTIGA:\r\n            return { ...state, senha_antiga: action.payload };\r\n        case IS_VALID_TOKEN:\r\n            return { ...state, is_valid_token: action.payload };\r\n        case USUARIO_ATUALIZOU_CADASTRO:\r\n            return { ...state, usuario_atualizou_cadastro: action.payload };\r\n        case MODIFICA_ID_USUARIO:\r\n            return { ...state, usuario_id: action.payload };\r\n        case MODIFICA_NOME_ESTADO:\r\n            return { ...state, estado_nome: action.payload };\r\n        case MODIFICA_NOME_CIDADE:\r\n            return { ...state, cidade_nome: action.payload };\r\n        case MODIFICA_NOME_BAIRRO:\r\n            return { ...state, bairro_nome: action.payload };   \r\n        case MODIFICA_ADICIONA_CONTATO_EMAIL:\r\n            return { ...state, adiciona_contato_email: action.payload };\r\n        case MODIFICA_USERNAME:\r\n            return { ...state, username: action.payload };\r\n        case MEUS_PEDIDOS_CARREGADOS_OK:\r\n            return { ...state, meus_pedidos: action.payload };\r\n        case MEUS_PEDIDOS_CARREGADOS_FALHA:\r\n                return { ...state, meus_pedidos_carregados_falha: action.payload };\r\n        case PEDIDO_CARREGADO_OK:\r\n            return { ...state, pedido: action.payload };\r\n        case PEDIDO_CARREGADO_FALHA:\r\n                return { ...state, pedido_carregado_falha: action.payload };\r\n        case CATEGORIA_CARREGADA_OK:\r\n            return { ...state, categorias: action.payload };\r\n        case CATEGORIA_CARREGADA_FALHA:\r\n                return { ...state, categoria_carregada_falha: action.payload };\r\n        case ADICIONA_CONTATO_ERRO:\r\n            return { ...state, msgErroCadastroUsuario: action.payload };\r\n        case ADICIONA_CONTATO_SUCESSO:\r\n            return { ...state, cadastroResultadoUsuario: action.payload, adiciona_contato_email: '' };\r\n        case MODIFICA_MENSAGEM:\r\n            return { ...state, mensagem: action.payload };\r\n        case ENVIA_MENSAGEM_SUCESSO:\r\n            return { ...state, mensagem: '' };\r\n        case ADICIONA_PRODUTO:\r\n            return { ...state, carrinho: action.payload, qtd_carrinho: action.payload.length };\r\n        case REMOVE_PRODUTO:\r\n            return { ...state, carrinho: action.payload, qtd_carrinho: action.payload.length };\r\n        case ATUALIZA_ITEM_ID:\r\n            return { ...state, item_id: action.payload };\r\n        case CARREGA_INFO_MODAL:\r\n            return { ...state, info_modal: action.payload };\r\n        case SHOW_MODAL:\r\n            return { ...state, show_modal: action.payload };\r\n        case ATUALIZA_TOTAL_CARRINHO:\r\n            return { ...state, total_carrinho: action.payload.toFixed(2) };\r\n        case ATUALIZA_QTD:\r\n            return { ...state, qtd: action.payload };\r\n        case ATUALIZA_FORMA_PAGAMENTO:\r\n            return { ...state, forma_pagamento: action.payload };\r\n        case ATUALIZA_OBS:\r\n            return { ...state, obs_pedido: action.payload };\r\n        case STATUS_ENVIO_PEDIDO:\r\n            return { ...state, status_envio_pedido: action.payload };\r\n        case ATUALIZA_TROCO:\r\n            return { ...state, troco_pedido: action.payload };\r\n        case PEDIDO_OK:\r\n            return { ...state, status_envio_pedido: true };\r\n        case PEDIDO_NAO_OK:\r\n            return { ...state, status_envio_pedido: false };\r\n        case LIMPA_CARRINHO:\r\n            return { ...state, carrinho: action.payload };\r\n        case LIMPA_QTD_CARRINHO:\r\n                return { ...state, qtd_carrinho: action.payload };\r\n        case LIMPA_TOTAL_CARRINHO:\r\n                return { ...state, total_carrinho: action.payload };      \r\n        case CARREGA_TIPOS_PAGAMENTO_OK:\r\n            return { ...state, tipos_pagamento: action.payload };\r\n        case CARREGA_TIPOS_PAGAMENTO_FALHA:\r\n            return { ...state, tipo_pagamento_falha: action.payload };\r\n        case SHOW_LOADER:      \r\n            return { ...state, show_loader: action.payload }; \r\n        case SHOW_LOADER_CATEGORIA:      \r\n            return { ...state, show_loader_categoria: action.payload }; \r\n        case SHOW_LOADER_PRODUTO:      \r\n            return { ...state, show_loader_produto: action.payload }; \r\n        case PODE_ENVIAR_PEDIDO:\r\n                return { ...state, pode_enviar_pedido: action.payload };\r\n        case MODIFICA_NOME:\r\n                return { ...state, nome: action.payload };\r\n        case MODIFICA_EMAIL:\r\n                return { ...state, email: action.payload };\r\n        case MODIFICA_CEP:\r\n                return { ...state, cep: action.payload };\r\n        case MODIFICA_CONFIRMA_SENHA:\r\n                return { ...state, confirma_senha: action.payload };        \r\n         case MODIFICA_SENHA:\r\n                return { ...state, senha: action.payload };\r\n        case MODIFICA_ENDERECO:\r\n                return { ...state, endereco: action.payload };\r\n        case MODIFICA_NUMERO:\r\n                return { ...state, numero: action.payload };\r\n        case MODIFICA_COMPLEMENTO:\r\n                return { ...state, complemento: action.payload };\r\n        case MODIFICA_PONTO_REFERENCIA:\r\n            return { ...state, ponto_referencia: action.payload };\r\n        case MODIFICA_ESTADO:\r\n            return { ...state, estado: action.payload };\r\n        case MODIFICA_CIDADE:\r\n            return { ...state, cidade: action.payload };\r\n        case MODIFICA_BAIRRO:\r\n            return { ...state, bairro: action.payload };\r\n        case MODIFICA_TELEFONE:\r\n            return { ...state, telefone: action.payload };\r\n        case CADASTRO_USUARIO:\r\n            return { ...state, usuario: action.payload };\r\n        \r\n        case CADASTRO_USUARIO_ERRO:\r\n            return { ...state, cadastro_usuario_falha: action.payload };\r\n        case CADASTRO_USUARIO_SUCESSO:\r\n            return { ...state, usuario: action.payload };\r\n        case CONFIRMA_SENHA:\r\n            return { ...state, confirma_senha: action.payload };\r\n        case CARREGA_ESTADO:\r\n            return { ...state, lista_estados: action.payload };\r\n        case CARREGA_ESTADO_FALHA:\r\n            return { ...state, carrega_estado_falha: action.payload };  \r\n        case CARREGA_CIDADE:\r\n            return { ...state, lista_cidades: action.payload };\r\n        case CARREGA_CIDADE_FALHA:\r\n            return { ...state, carrega_cidade_falha: action.payload };\r\n        case LIMPA_CIDADE:\r\n            return { ...state, lista_cidades: action.payload };\r\n        case CARREGA_BAIRRO:\r\n            return { ...state, lista_bairros: action.payload };\r\n        case LIMPA_BAIRRO:\r\n                return { ...state, lista_bairros: action.payload };\r\n        case LIMPA_ESTADO:\r\n            return { ...state, lista_estados: action.payload };\r\n        case CARREGA_BAIRRO_FALHA:\r\n            return { ...state, carrega_bairro_falha: action.payload };\r\n        case ATUALIZA_USUARIO:\r\n            return { ...state, usuario: action.payload };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","const INITIAL_STATE = {\n    adiciona_contato_email: '',\n    msgErroCadastroUsuario: '',\n    cadastroResultadoUsuario: false,\n    produtos:'',\n    mensagem: '',\n    show_loader_produto:true,\n    produto_carregado_falha:false\n};\n\nimport {\n    PRODUTO_CARREGADO_OK,\n    SHOW_LOADER_PRODUTO,\n    PRODUTO_CARREGADO_FALHA\n} from '../actions/ActionTypes';\n\nexport default (state = INITIAL_STATE, action) => {\n    //console.log(action);\n    switch(action.type) {\n        case PRODUTO_CARREGADO_OK:\n            return { ...state, produtos: action.payload };\n        case SHOW_LOADER_PRODUTO:\n            return { ...state, show_loader_produto: action.payload };\n        case PRODUTO_CARREGADO_FALHA:\n                return { ...state, produto_carregado_falha: action.payload };\n        default:\n            return state;\n    }\n}","const INITIAL_STATE = {\r\n    adiciona_contato_email: '',\r\n    msgErroCadastroUsuario: '',\r\n    cadastroResultadoUsuario: false,\r\n    produtos:'',\r\n    mensagem: '',\r\n    show_loader_produto:true,\r\n    produto_carregado_falha:false\r\n};\r\n\r\nimport {\r\n    PRODUTO_CARREGADO_OK,\r\n    SHOW_LOADER_PRODUTO,\r\n    PRODUTO_CARREGADO_FALHA\r\n} from '../actions/ActionTypes';\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    //console.log(action);\r\n    switch(action.type) {\r\n        case PRODUTO_CARREGADO_OK:\r\n            return { ...state, produtos: action.payload };\r\n        case SHOW_LOADER_PRODUTO:\r\n            return { ...state, show_loader_produto: action.payload };\r\n        case PRODUTO_CARREGADO_FALHA:\r\n                return { ...state, produto_carregado_falha: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AppReducer from './AppReducer';\r\nimport DishesReducer from './DishesReducer';\r\nimport MyGiftsReducer from './MyGiftsReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    AppReducer,\r\n    DishesReducer,\r\n    MyGiftsReducer    \r\n});","//const tintColor = '#ef6136';\r\n\r\n/*export default {\r\n  tintColor,\r\n  tabIconDefault: '#ccc',\r\n  tabIconSelected: tintColor,\r\n  tabBar: '#fefefe',\r\n  errorBackground: 'red',\r\n  errorText: '#fff',\r\n  warningBackground: '#EAEB5E',\r\n  warningText: '#666804',\r\n  noticeBackground: tintColor,\r\n  noticeText: '#fff',\r\n};*/\r\nconst tintColor = '#ef6136';\r\nexport default {\r\n  tintColor:'#ef6136',\r\n  tabActive:'#ef6136',\r\n  numbersIcons:'#ef6136',\r\n  tabInactive:'#ccc',\r\n  tabIconDefault: '#ccc',\r\n  tabIconSelected: tintColor,\r\n  tabBar: '#323232',\r\n  headerBar: '#323232',\r\n  headerBarTitle:'#fff',\r\n  errorBackground: 'red',\r\n  errorText: '#fff',\r\n  warningBackground: '#EAEB5E',\r\n  warningText: '#666804',\r\n  noticeBackground: tintColor,\r\n  noticeText: '#fff',\r\n  style:{\r\n    backgroundColor:'#323232'\r\n  },\r\n  links:\"#ef6136\",\r\n  button:\"#323232\",\r\n  buttonIos: \"#ef6136\",\r\n  buttonText: '#fff',\r\n  text:\"#323232\",\r\n  textFormaPagamento:'#333',\r\n  ActivityIndicator:'#4099ff',\r\n  checkoutContainerBackground:'#ffffff',\r\n  checkoutConteinerTextColor:'#000000',\r\n  formCadastroSelect:'#7b7b7b',\r\n  itemBackgroudColorimpar:'#d2d2d2',\r\n  itemBackgroudColorpar:'#ffffff',\r\n  jokenpoEscolhaText:'#E1AD01',\r\n};","import React from 'react';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport Colors from '../constants/Colors';\r\nimport { Platform } from 'react-native';\r\n\r\nexport default function TabBarIcon(props) {\r\n  return (\r\n    <Ionicons\r\n      name={props.name}\r\n      size={26}\r\n      style={{ \r\n        marginBottom: Platform.OS === 'ios' ? 0 : -3 ,\r\n        \r\n      }}\r\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { ExpoLinksView } from '@expo/samples';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container}>\n      {/**\n       * Go ahead and delete ExpoLinksView and replace it with your content;\n       * we just wanted to provide you with some helpful links.\n       */}\n      <ExpoLinksView />\n    </ScrollView>\n  );\n}\n\nLinksScreen.navigationOptions = {\n  title: 'Links',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: '#fff',\n  },\n});\n","//export const APP_URL = 'http://10.0.2.2/entregapp_sistema';\r\nexport const APP_URL = 'https://sistema.rudo.com.br';\r\nexport const FILIAL = 1;\r\nexport const EMPRESA = 1;\r\nexport const SEM_DESCRICAO= \"Sem descrição disponível\";\r\nexport const SALT = \"jmgl33mg1221kjgruyky232ho2l3437mhljio90hueemmgjktjmmmgko2tut35ymmmh221eenngl4y73kkkj\";\r\nexport const PUSH_REGISTRATION_ENDPOINT = 'http://generated-ngrok-url/token';\r\nexport const MESSAGE_ENPOINT = 'http://generated-ngrok-url/message';","import _ from 'lodash';\r\nimport axios from 'react-native-axios';\r\n\r\nimport { Actions } from 'react-redux';\r\nimport { Alert } from 'react-native';\r\nimport { NavigationActions } from 'react-navigation';\r\n\r\nimport {\r\n    CATEGORIA_CARREGADA_OK,\r\n    CATEGORIA_CARREGADA_FALHA,\r\n    ADICIONA_PRODUTO,\r\n    ATUALIZA_ITEM_ID,\r\n    REMOVE_PRODUTO,\r\n    ATUALIZA_TOTAL_CARRINHO,\r\n    ATUALIZA_QTD,\r\n    CARREGA_INFO_MODAL,\r\n    SHOW_MODAL,\r\n    ATUALIZA_OBS,\r\n    ATUALIZA_FORMA_PAGAMENTO,\r\n    ATUALIZA_TROCO,\r\n    PEDIDO_NAO_OK,\r\n    PEDIDO_OK,\r\n    CARREGA_TIPOS_PAGAMENTO_OK,\r\n    CARREGA_TIPOS_PAGAMENTO_FALHA,\r\n    PODE_ENVIAR_PEDIDO,\r\n    STATUS_ENVIO_PEDIDO,\r\n    SHOW_LOADER,\r\n    LIMPA_CARRINHO,\r\n    LIMPA_QTD_CARRINHO,\r\n    LIMPA_TOTAL_CARRINHO,\r\n    SHOW_LOADER_CATEGORIA,\r\n    SHOW_LOADER_PRODUTO,\r\n    PEDIDO_CARREGADO_OK,\r\n    PEDIDO_CARREGADO_FALHA,\r\n    MEUS_PEDIDOS_CARREGADOS_OK,\r\n    MEUS_PEDIDOS_CARREGADOS_FALHA,\r\n    MODIFICA_EMAIL,\r\n    MODIFICA_SENHA,\r\n    MODIFICA_CONFIRMA_SENHA,\r\n    MODIFICA_NOME,\r\n    MODIFICA_CEP,\r\n    MODIFICA_ENDERECO,\r\n    MODIFICA_NUMERO,\r\n    MODIFICA_COMPLEMENTO,\r\n    MODIFICA_PONTO_REFERENCIA,\r\n    MODIFICA_ESTADO,\r\n    MODIFICA_CIDADE,\r\n    MODIFICA_BAIRRO,\r\n    MODIFICA_TELEFONE,\r\n    CADASTRO_USUARIO,\r\n    CADASTRO_USUARIO_ERRO,\r\n    CADASTRO_USUARIO_SUCESSO,\r\n    CARREGA_ESTADO,\r\n    CARREGA_ESTADO_FALHA,\r\n    CARREGA_CIDADE,\r\n    CARREGA_CIDADE_FALHA,\r\n    CARREGA_BAIRRO,\r\n    CARREGA_BAIRRO_FALHA,\r\n    LIMPA_CIDADE,\r\n    LIMPA_BAIRRO,\r\n    LIMPA_ESTADO,\r\n    MODIFICA_USERNAME,\r\n    MODIFICA_SENHA_ANTIGA,\r\n    MODIFICA_ID_USUARIO,\r\n    USUARIO_ATUALIZOU_CADASTRO,\r\n    MODIFICA_NOME_ESTADO,\r\n    MODIFICA_NOME_CIDADE,\r\n    MODIFICA_NOME_BAIRRO,\r\n    IS_VALID_TOKEN,\r\n    DADOS_PREMIO,\r\n    INICIOU_PARTIDA,\r\n    DADOS_PARTIDA,\r\n    RESULTADO,\r\n    TXTCOLOR,\r\n    ESCOLHA_DO_COMPUTADOR,\r\n    ESCOLHA_DO_USUARIO,\r\n    SHOW_IMAGE,\r\n    IMAGEM_COMPUTADOR,\r\n    IMAGEM_USUARIO,\r\n    N_VITORIAS,\r\n    N_DERROTAS,\r\n    RESULTADO_FINAL,\r\n    SALDO,\r\n    NOTIFICATION,\r\n    MESSAGE_TEXT,\r\n    TOKEN_NOTIFICACAO,\r\n    VALOR_FRETE\r\n} from './ActionTypes';\r\n\r\nimport {\r\n    APP_URL,\r\n    FILIAL,\r\n    EMPRESA,\r\n    SEM_DESCRICAO,\r\n    SALT\r\n} from '../Settings'\r\n\r\nexport const modificaTokenNotificacao = (txt) => {\r\n    return dispatch => {\r\n        dispatch({ type: TOKEN_NOTIFICACAO, payload: txt })\r\n    }\r\n}\r\n\r\nexport const modificaMensagem = (txt) => {\r\n    return dispatch => {\r\n        dispatch({ type: MESSAGE_TEXT, payload: txt })\r\n    }\r\n}\r\n\r\nexport const modificaNotificacao = (notofication) => {\r\n    return dispatch => {\r\n        dispatch({ type: NOTIFICATION, payload: notofication })\r\n    }\r\n}\r\n\r\nexport const autenticarUsuario = (usuario) => {\r\n\r\n\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n\r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n\r\n\r\n        axios.post(`${APP_URL}/RestClientes/loginmobile.json`, usuario)\r\n            .then(res => {\r\n\r\n                loadError = false;\r\n                if (typeof res.data.ultimopedido != 'undefined') {\r\n                    if (res.data.ultimopedido == 'ErroLogin') {\r\n\r\n                        clearInterval(interval);\r\n                        \r\n                        Alert.alert(\r\n                            'Mensagem',\r\n                            `Ops, houve um erro ao tentar te autenticar, provalvelmente seu usuário ou senha estão errados, por favor tente novamente!`,\r\n                            [\r\n                                {\r\n                                    text: 'OK',\r\n                                    style: 'OK',\r\n                                },\r\n                            ],\r\n                            { cancelable: false },\r\n                        );\r\n                    } else {\r\n\r\n                        clearInterval(interval);\r\n                        dispatch({ type: CADASTRO_USUARIO_SUCESSO, payload: res.data.ultimopedido.Cliente });\r\n                        dispatch({ type: IS_VALID_TOKEN, payload: 'OK' });\r\n                    }\r\n\r\n                }\r\n                //console.log('res');\r\n                //console.log(res);\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n                dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                passouOk = true;\r\n            }).catch(error => {\r\n                loadError = true;\r\n                passouOk = true;\r\n                //console.log('error');\r\n                //console.log(error);\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n\r\n                        autenticarUsuario(usuario);\r\n                    }, 10000);\r\n                }\r\n\r\n            });\r\n\r\n        if (passouOk == false) {\r\n            let contVezesErrou = 0;\r\n            interval = setInterval(() => {\r\n                contVezesErrou += 1;\r\n\r\n\r\n                if (contVezesErrou < 5) {\r\n                    axios.post(`${APP_URL}/RestClientes/loginmobile.json`, usuario)\r\n                        .then(res => {\r\n                            //console.log('res');\r\n                           // console.log(res);\r\n                            loadError = false;\r\n                            if (typeof res.data.ultimopedido != 'undefined') {\r\n                                if (res.data.ultimopedido == 'ErroLogin') {\r\n\r\n                                    clearInterval(interval);\r\n                                    clearInterval(interval);\r\n                                    Alert.alert(\r\n                                        'Mensagem',\r\n                                        `Ops, houve um erro ao tentar autenticar seu usuário, provalvelmente seu usuário ou senha estão errados, por favor tente novamente!`,\r\n                                        [\r\n                                            {\r\n                                                text: 'OK',\r\n                                                style: 'OK',\r\n                                            },\r\n                                        ],\r\n                                        { cancelable: false },\r\n                                    );\r\n                                } else {\r\n\r\n                                    clearInterval(interval);\r\n                                    dispatch({ type: CADASTRO_USUARIO_SUCESSO, payload: res.data.ultimopedido.Cliente });\r\n                                }\r\n\r\n                            }\r\n                            dispatch({ type: SHOW_LOADER, payload: false });\r\n                            dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                            passouOk = true;\r\n                        });\r\n                } else {\r\n                    //console.log()\r\n                    clearInterval(interval);\r\n                    passouOk = true;\r\n                    loadError = false;\r\n                    clearInterval(interval);\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, houve um erro ao tentar ao tentar autenticar seu usuário, por favor, verifique sua internet e tente novamente, caso isto não funcione, por favor entre em contato com a loja! Obrigado ;-D`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n            }, 10000);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const recuperarSenha = (usuario) => {\r\n\r\n\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n\r\n        axios.post(`${APP_URL}/RestClientes/recuperarsenha.json`, usuario)\r\n            .then(res => {\r\n                loadError = false;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (typeof res.data.ultimocliente != 'undefined') {\r\n                    if (res.data.ultimocliente == 'ok') {\r\n                        Alert.alert(\r\n                            'Mensagem',\r\n                            `Sucesso, enviamos um link de recuperação de senha para seu e-mail cadastrado `,\r\n                            [\r\n                                {\r\n                                    text: 'OK',\r\n                                    style: 'OK',\r\n                                },\r\n                            ],\r\n                            { cancelable: false },\r\n                        );\r\n                    } else {\r\n                        Alert.alert(\r\n                            'Mensagem',\r\n                            `Ops, não encontramos seu usuário`,\r\n                            [\r\n                                {\r\n                                    text: 'OK',\r\n                                    style: 'OK',\r\n                                },\r\n                            ],\r\n                            { cancelable: false },\r\n                        );\r\n                    }\r\n\r\n                }\r\n\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                passouOk = true;\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n\r\n                        recuperarSenha(usuario);\r\n                    }, 10000);\r\n                }\r\n\r\n            });\r\n\r\n        if (passouOk == false) {\r\n            let contVezesErrou = 0;\r\n            interval = setInterval(() => {\r\n                contVezesErrou += 1;\r\n\r\n\r\n                if (contVezesErrou < 5) {\r\n                    axios.post(`${APP_URL}/RestClientes/recuperarsenha.json`, usuario)\r\n                        .then(res => {\r\n                            loadError = false;\r\n                            passouOk = true;\r\n                            clearInterval(interval);\r\n\r\n                            if (typeof res.data.ultimocliente != 'undefined') {\r\n                                if (res.data.ultimocliente == 'ok') {\r\n                                    Alert.alert(\r\n                                        'Mensagem',\r\n                                        `Sucesso, enviamos um link de recuperação de senha para seu e-mail cadastrado `,\r\n                                        [\r\n                                            {\r\n                                                text: 'OK',\r\n                                                style: 'OK',\r\n                                            },\r\n                                        ],\r\n                                        { cancelable: false },\r\n                                    );\r\n                                } else {\r\n                                    Alert.alert(\r\n                                        'Mensagem',\r\n                                        `Ops, não encontramos seu usuário`,\r\n                                        [\r\n                                            {\r\n                                                text: 'OK',\r\n                                                style: 'OK',\r\n                                            },\r\n                                        ],\r\n                                        { cancelable: false },\r\n                                    );\r\n                                }\r\n\r\n                            }\r\n                            dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                        }).catch(error => {\r\n\r\n                            //dispatch({ type: SHOW_LOADER, payload: false });\r\n                            loadError = true;\r\n                            passouOk = true;\r\n                            if (loadError == true) {\r\n                                interval = setInterval(() => {\r\n\r\n                                    recuperarSenha(usuario);\r\n                                }, 10000);\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    clearInterval(interval);\r\n                    passouOk = true;\r\n                    loadError = false;\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n                    clearInterval(interval);\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, houve um erro ao tentar ao tentar recuperar sua senha, por favor, verifique sua internet e tente novamente, caso isto não funcione, por favor entre em contato com a loja! Obrigado ;-D`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }\r\n\r\n            }, 10000);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const cadastraUsuarioEdit = (usuario) => {\r\n\r\n\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        dispatch({ type: USUARIO_ATUALIZOU_CADASTRO, payload: false });\r\n        dispatch({ type: CARREGA_ESTADO_FALHA, payload: false });\r\n\r\n\r\n\r\n        axios.post(`${APP_URL}/RestClientes/addmobile.json`, usuario)\r\n            .then(res => {\r\n\r\n                if (res.data.ultimocliente == \"ErroUsuarioDuplo\") {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, este nome de usuário já não está mais disponível, por favor, escolha outro nome de usuário!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                } else if (res.data.ultimocliente == \"Erro\") {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, houve um erro ao tentar te cadastrar, por favor, tente novamente mais tarde!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                } else {\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n                    dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                    dispatch({ type: CADASTRO_USUARIO_SUCESSO, payload: res.data.ultimocliente.Cliente });\r\n                    dispatch({ type: USUARIO_ATUALIZOU_CADASTRO, payload: true });\r\n\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Parabéns, seu  cadastro foi atualizado!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }\r\n\r\n            }).catch(error => {\r\n\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n                dispatch({ type: CADASTRO_USUARIO_ERRO, payload: true });\r\n\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const cadastraUsuarioEditComSenha = (usuario) => {\r\n\r\n\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        dispatch({ type: USUARIO_ATUALIZOU_CADASTRO, payload: false });\r\n        dispatch({ type: CARREGA_ESTADO_FALHA, payload: false });\r\n\r\n        axios.post(`${APP_URL}/RestClientes/addmobile.json`, usuario)\r\n            .then(res => {\r\n\r\n                if (res.data.ultimocliente == \"ErroUsuarioDuplo\") {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, este nome de usuário já não está mais disponível, por favor, escolha outro nome de usuário!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                } else if (res.data.ultimocliente == \"Erro\") {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, houve um erro ao tentar te cadastrar, por favor, tente novamente mais tarde!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                } else {\r\n\r\n                    let dadosUsuario = {\r\n                        username: usuario.Cliente.username,\r\n                        password: usuario.Cliente.password,\r\n                        salt: usuario.Cliente.salt,\r\n                        empresa: usuario.Cliente.empresa_id,\r\n                        filial: usuario.Cliente.filial_id\r\n                    };\r\n                    axios.post(`${APP_URL}/RestClientes/loginmobile.json`, dadosUsuario)\r\n                        .then(res => {\r\n\r\n                            if (typeof res.data.ultimopedido != 'undefined') {\r\n                                dispatch({ type: CADASTRO_USUARIO_SUCESSO, payload: res.data.ultimopedido.Cliente });\r\n                            }\r\n\r\n                            dispatch({ type: SHOW_LOADER, payload: false });\r\n                            dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                            dispatch({ type: USUARIO_ATUALIZOU_CADASTRO, payload: true });\r\n                        }).catch(error => {\r\n\r\n                            dispatch({ type: SHOW_LOADER, payload: false });\r\n                            dispatch({ type: CADASTRO_USUARIO_ERRO, payload: true });\r\n                        });\r\n\r\n                    //dispatch(NavigationActions.navigate({ routeName: 'RoutesLogin' }));\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Parabéns, \\n Seu cadastro foi atualizado!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }\r\n\r\n\r\n            }).catch(error => {\r\n\r\n\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n                dispatch({ type: CADASTRO_USUARIO_ERRO, payload: true });\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const cadastraUsuario = (usuario) => {\r\n\r\n\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n\r\n\r\n        axios.post(`${APP_URL}/RestClientes/addmobile.json`, usuario)\r\n            .then(res => {\r\n\r\n                if (res.data.ultimocliente == \"ErroUsuarioDuplo\") {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, este nome de usuário já não está mais disponível, por favor, escolha outro nome de usuário!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                } else if (res.data.ultimocliente == \"Erro\") {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, houve um erro ao tentar te cadastrar, por favor, tente novamente mais tarde!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                    dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                } else {\r\n\r\n                    let dadosUsuario = {\r\n                        username: usuario.Cliente.username,\r\n                        password: usuario.Cliente.password,\r\n                        salt: usuario.Cliente.salt,\r\n                        empresa: usuario.Cliente.empresa_id,\r\n                        filial: usuario.Cliente.filial_id\r\n                    };\r\n                    axios.post(`${APP_URL}/RestClientes/loginmobile.json`, dadosUsuario)\r\n                        .then(res => {\r\n\r\n                            if (typeof res.data.ultimopedido != 'undefined') {\r\n                                dispatch({ type: CADASTRO_USUARIO_SUCESSO, payload: res.data.ultimopedido.Cliente });\r\n                            }\r\n\r\n                            dispatch({ type: SHOW_LOADER, payload: false });\r\n                            dispatch({ type: CADASTRO_USUARIO_ERRO, payload: false });\r\n                        }).catch(error => {\r\n\r\n                            dispatch({ type: SHOW_LOADER, payload: false });\r\n                            dispatch({ type: CADASTRO_USUARIO_ERRO, payload: true });\r\n                        });\r\n\r\n                    //dispatch(NavigationActions.navigate({ routeName: 'RoutesLogin' }));\r\n                    /*Alert.alert(\r\n                        'Mensagem',\r\n                        `Parabéns, \\n Seu cadastro foi efetuado com sucesso! Agora você já pode fazer seus pedidos.`,\r\n                        [\r\n                        {\r\n                            text: 'OK',\r\n                            style: 'OK',\r\n                        },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );*/\r\n                }\r\n\r\n\r\n            }).catch(error => {\r\n\r\n\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n                dispatch({ type: CADASTRO_USUARIO_ERRO, payload: true });\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const estadosFetch = () => {\r\n    return dispatch => {\r\n        dispatch({ type: CARREGA_ESTADO, payload: [] });\r\n        dispatch({ type: CARREGA_CIDADE, payload: [] });\r\n        dispatch({ type: CARREGA_BAIRRO, payload: [] });\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n        clearInterval(interval);\r\n\r\n        axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=e`)\r\n            .then(res => {\r\n                loadError = false;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: CARREGA_ESTADO, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: CARREGA_ESTADO_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: CARREGA_ESTADO_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n\r\n                        estadosFetchInterval();\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (passouOk == false) {\r\n            interval = setInterval(() => {\r\n\r\n                axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=e`)\r\n                    .then(res => {\r\n                        loadError = false;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n\r\n                        if (typeof res.data.resultados != 'undefined') {\r\n                            dispatch({ type: CARREGA_ESTADO, payload: res.data.resultados });\r\n                        } else {\r\n\r\n                            dispatch({ type: CARREGA_ESTADO_FALHA, payload: false });\r\n                        }\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    }).catch(error => {\r\n                        //dispatch({ type: CARREGA_ESTADO_FALHA, payload: true });\r\n                        //dispatch({ type: SHOW_LOADER, payload: false });\r\n                        loadError = true;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n\r\n                                estadosFetchInterval();\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n            }, 10000);\r\n        }\r\n        //console.log('continuou');\r\n    }\r\n}\r\nexport const estadosFetchInterval = () => {\r\n    return dispatch => {\r\n        \r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n        clearInterval(interval);\r\n\r\n        axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=e`)\r\n            .then(res => {\r\n                loadError = false;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: CARREGA_ESTADO, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: CARREGA_ESTADO_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: CARREGA_ESTADO_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n\r\n                        estadosFetchInterval();\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (passouOk == false) {\r\n            interval = setInterval(() => {\r\n\r\n                axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=e`)\r\n                    .then(res => {\r\n                        loadError = false;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n\r\n                        if (typeof res.data.resultados != 'undefined') {\r\n                            dispatch({ type: CARREGA_ESTADO, payload: res.data.resultados });\r\n                        } else {\r\n\r\n                            dispatch({ type: CARREGA_ESTADO_FALHA, payload: false });\r\n                        }\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    }).catch(error => {\r\n                        //dispatch({ type: CARREGA_ESTADO_FALHA, payload: true });\r\n                        //dispatch({ type: SHOW_LOADER, payload: false });\r\n                        loadError = true;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n\r\n                                estadosFetchInterval();\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n            }, 10000);\r\n        }\r\n        //console.log('continuou');\r\n    }\r\n}\r\nexport const cidadesFetch = (estado) => {\r\n    return dispatch => {\r\n        dispatch({ type: CARREGA_CIDADE, payload: [] });\r\n        dispatch({ type: CARREGA_BAIRRO, payload: [] });\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n        clearInterval(interval);\r\n\r\n        axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=c&e=${estado}`)\r\n            .then(res => {\r\n                loadError = false;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: CARREGA_CIDADE, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: CARREGA_CIDADE_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: CARREGA_CIDADE_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n\r\n                        cidadesFetchInterval(estado);\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (passouOk == false) {\r\n            interval = setInterval(() => {\r\n                axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=c&e=${estado}`)\r\n                    .then(res => {\r\n                        loadError = false;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (typeof res.data.resultados != 'undefined') {\r\n                            dispatch({ type: CARREGA_CIDADE, payload: res.data.resultados });\r\n                        } else {\r\n\r\n                            dispatch({ type: CARREGA_CIDADE_FALHA, payload: false });\r\n                        }\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    }).catch(error => {\r\n                        //dispatch({ type: CARREGA_CIDADE_FALHA, payload: true });\r\n                        //dispatch({ type: SHOW_LOADER, payload: false });\r\n                        loadError = true;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n\r\n                                cidadesFetchInterval(estado);\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n\r\n            }, 10000);\r\n        }\r\n    }\r\n}\r\n\r\nexport const cidadesFetchInterval = (estado) => {\r\n    return dispatch => {\r\n       \r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n        clearInterval(interval);\r\n\r\n        axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=c&e=${estado}`)\r\n            .then(res => {\r\n                loadError = false;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: CARREGA_CIDADE, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: CARREGA_CIDADE_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: CARREGA_CIDADE_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n\r\n                        cidadesFetchInterval(estado);\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (passouOk == false) {\r\n            interval = setInterval(() => {\r\n                axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=c&e=${estado}`)\r\n                    .then(res => {\r\n                        loadError = false;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (typeof res.data.resultados != 'undefined') {\r\n                            dispatch({ type: CARREGA_CIDADE, payload: res.data.resultados });\r\n                        } else {\r\n\r\n                            dispatch({ type: CARREGA_CIDADE_FALHA, payload: false });\r\n                        }\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    }).catch(error => {\r\n                        //dispatch({ type: CARREGA_CIDADE_FALHA, payload: true });\r\n                        //dispatch({ type: SHOW_LOADER, payload: false });\r\n                        loadError = true;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n\r\n                                cidadesFetchInterval(estado);\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n\r\n            }, 10000);\r\n        }\r\n    }\r\n}\r\n\r\nexport const bairroFetch = (cidade) => {\r\n    return dispatch => {\r\n        dispatch({ type: CARREGA_BAIRRO, payload: [] });\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n        clearInterval(interval);\r\n\r\n        axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=b&c=${cidade}`)\r\n            .then(res => {\r\n                loadError = false;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: CARREGA_BAIRRO, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: CARREGA_BAIRRO_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: CARREGA_BAIRRO_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        bairroFetchInterval(cidade);\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (passouOk == false) {\r\n            interval = setInterval(() => {\r\n                axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=b&c=${cidade}`)\r\n                    .then(res => {\r\n                        loadError = false;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (typeof res.data.resultados != 'undefined') {\r\n                            dispatch({ type: CARREGA_BAIRRO, payload: res.data.resultados });\r\n                        } else {\r\n\r\n                            dispatch({ type: CARREGA_BAIRRO_FALHA, payload: false });\r\n                        }\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    }).catch(error => {\r\n                        //dispatch({ type: CARREGA_BAIRRO_FALHA, payload: true });\r\n                        //dispatch({ type: SHOW_LOADER, payload: false });\r\n                        loadError = true;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n                                bairroFetchInterval(cidade);\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n            }, 10000);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const bairroFetchInterval = (cidade) => {\r\n    return dispatch => {\r\n        \r\n        let loadError = false;\r\n        let interval;\r\n        let passouOk = false;\r\n        clearInterval(interval);\r\n\r\n        axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=b&c=${cidade}`)\r\n            .then(res => {\r\n                loadError = false;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: CARREGA_BAIRRO, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: CARREGA_BAIRRO_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: CARREGA_BAIRRO_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                passouOk = true;\r\n                clearInterval(interval);\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        bairroFetchInterval(cidade);\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (passouOk == false) {\r\n            interval = setInterval(() => {\r\n                axios.get(`${APP_URL}/RestPedidos/getLocalidadePedidos.json?fp=${FILIAL}&p=b&c=${cidade}`)\r\n                    .then(res => {\r\n                        loadError = false;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (typeof res.data.resultados != 'undefined') {\r\n                            dispatch({ type: CARREGA_BAIRRO, payload: res.data.resultados });\r\n                        } else {\r\n\r\n                            dispatch({ type: CARREGA_BAIRRO_FALHA, payload: false });\r\n                        }\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                    }).catch(error => {\r\n                        //dispatch({ type: CARREGA_BAIRRO_FALHA, payload: true });\r\n                        //dispatch({ type: SHOW_LOADER, payload: false });\r\n                        loadError = true;\r\n                        passouOk = true;\r\n                        clearInterval(interval);\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n                                bairroFetchInterval(cidade);\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n            }, 10000);\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport const limpaListaCidades = () => {\r\n    return dispatch => {\r\n        dispatch({ type: LIMPA_CIDADE, payload: [] })\r\n    }\r\n}\r\n\r\nexport const limpaListaBairros = () => {\r\n    return dispatch => {\r\n        dispatch({ type: LIMPA_BAIRRO, payload: [] })\r\n    }\r\n}\r\n\r\nexport const limpaListaEstados = () => {\r\n    return dispatch => {\r\n        dispatch({ type: LIMPA_ESTADO, payload: [] })\r\n    }\r\n}\r\n\r\nexport const pedidosViewFetch = (cliente, token, atendimento) => {\r\n    return dispatch => {\r\n        dispatch({ type: PEDIDO_CARREGADO_OK, payload: [] });\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n        axios.get(`${APP_URL}/RestAtendimentos/viewmobile.json?a=${atendimento}&fp=${FILIAL}&lj=${EMPRESA}&b=${cliente}&c=${token}&limit=20`)\r\n            .then(res => {\r\n\r\n\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: PEDIDO_CARREGADO_OK, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: PEDIDO_CARREGADO_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = false;\r\n                clearInterval(interval);\r\n                //console.log('limpouuuuuuu');\r\n\r\n            }).catch(error => {\r\n                loadError = true;\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        //console.log('errou voz do Faustão....');\r\n                        pedidosViewFetch(cliente, token, atendimento);\r\n                    }, 10000);\r\n                }\r\n\r\n                //dispatch({ type: PEDIDO_CARREGADO_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const pedidosViewFetchInterval = (cliente, token, atendimento) => {\r\n    return dispatch => {\r\n        //dispatch({ type: PEDIDO_CARREGADO_OK, payload: [] });\r\n        //dispatch({ type: SHOW_LOADER, payload: true });\r\n        axios.get(`${APP_URL}/RestAtendimentos/viewmobile.json?a=${atendimento}&fp=${FILIAL}&lj=${EMPRESA}&b=${cliente}&c=${token}&limit=20`)\r\n            .then(res => {\r\n\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    dispatch({ type: PEDIDO_CARREGADO_OK, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    //dispatch({ type: PEDIDO_CARREGADO_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n                //console.log('passou no pedidosViewFetchInterval');\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: PEDIDO_CARREGADO_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\nexport const pedidosFetch = (cliente, token) => {\r\n    return dispatch => {\r\n        dispatch({ type: MEUS_PEDIDOS_CARREGADOS_OK, payload: [] });\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n\r\n        axios.get(`${APP_URL}/RestAtendimentos/indexmobile.json?fp=${FILIAL}&lj=${EMPRESA}&clt=${cliente}&token=${token}&limit=20`)\r\n            .then(res => {\r\n\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    //console.log(res.data.resultados);\r\n                    dispatch({ type: MEUS_PEDIDOS_CARREGADOS_OK, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    dispatch({ type: MEUS_PEDIDOS_CARREGADOS_FALHA, payload: false });\r\n                }\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n                loadError = false;\r\n                clearInterval(interval);\r\n            }).catch(error => {\r\n                //dispatch({ type: MEUS_PEDIDOS_CARREGADOS_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                loadError = true;\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        //console.log('errou voz do Faustão....');\r\n                        pedidosFetch(cliente, token);\r\n                    }, 10000);\r\n                }\r\n\r\n            });\r\n    }\r\n}\r\n\r\nexport const pedidosFetchInverval = (cliente, token) => {\r\n    return dispatch => {\r\n        //dispatch({ type: MEUS_PEDIDOS_CARREGADOS_OK, payload: [] });\r\n        //dispatch({ type: SHOW_LOADER, payload: true });\r\n        axios.get(`${APP_URL}/RestAtendimentos/indexmobile.json?fp=${FILIAL}&lj=${EMPRESA}&clt=${cliente}&token=${token}&limit=20`)\r\n            .then(res => {\r\n\r\n                if (typeof res.data.resultados != 'undefined') {\r\n                    //console.log(res.data.resultados);\r\n                    dispatch({ type: MEUS_PEDIDOS_CARREGADOS_OK, payload: res.data.resultados });\r\n                } else {\r\n\r\n                    //dispatch({ type: MEUS_PEDIDOS_CARREGADOS_FALHA, payload: false });\r\n                }\r\n\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n\r\n            }).catch(error => {\r\n                //dispatch({ type: MEUS_PEDIDOS_CARREGADOS_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\nexport const categoriasFetch = () => {\r\n    return dispatch => {\r\n        dispatch({ type: CATEGORIA_CARREGADA_OK, payload: [] });\r\n        dispatch({ type: SHOW_LOADER_CATEGORIA, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n        axios.get(`${APP_URL}/RestCategorias/catsmobile.json?fp=${FILIAL}`)\r\n            .then(res => {\r\n\r\n                if (typeof res.data.categorias != 'undefined') {\r\n                    dispatch({ type: CATEGORIA_CARREGADA_OK, payload: res.data.categorias });\r\n                } else {\r\n                    loadError = true;\r\n                    if (loadError == true) {\r\n                        interval = setInterval(() => {\r\n                            //console.log('errou voz do Faustão....');\r\n                            categoriasFetchInterval();\r\n                        }, 10000);\r\n                    }\r\n                    //dispatch({ type: CATEGORIA_CARREGADA_FALHA, payload: false });\r\n                }\r\n                loadError = false;\r\n                clearInterval(interval);\r\n\r\n                dispatch({ type: SHOW_LOADER_CATEGORIA, payload: false });\r\n\r\n            }).catch(error => {\r\n                loadError = true;\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        //console.log('errou voz do Faustão....');\r\n                        categoriasFetchInterval();\r\n                    }, 10000);\r\n                }\r\n                //dispatch({ type: CATEGORIA_CARREGADA_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER_CATEGORIA, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const categoriasFetchInterval = () => {\r\n    return dispatch => {\r\n        //dispatch({ type: CATEGORIA_CARREGADA_OK, payload: [] });\r\n        //dispatch({ type: SHOW_LOADER_CATEGORIA, payload: true });\r\n        let loadError = false;\r\n        let interval;\r\n        axios.get(`${APP_URL}/RestCategorias/catsmobile.json?fp=${FILIAL}`)\r\n            .then(res => {\r\n\r\n                if (typeof res.data.categorias != 'undefined') {\r\n                    dispatch({ type: CATEGORIA_CARREGADA_OK, payload: res.data.categorias });\r\n                } else {\r\n                    loadError = true;\r\n                    if (loadError == true) {\r\n                        interval = setInterval(() => {\r\n                            //console.log('errou voz do Faustão....');\r\n                            categoriasFetchInterval();\r\n                        }, 10000);\r\n                    }\r\n                    //dispatch({ type: CATEGORIA_CARREGADA_FALHA, payload: false });\r\n                }\r\n                loadError = false;\r\n                clearInterval(interval);\r\n\r\n                dispatch({ type: SHOW_LOADER_CATEGORIA, payload: false });\r\n\r\n            }).catch(error => {\r\n                loadError = true;\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        //console.log('errou voz do Faustão....');\r\n                        categoriasFetchInterval();\r\n                    }, 10000);\r\n                }\r\n                //dispatch({ type: CATEGORIA_CARREGADA_FALHA, payload: true });\r\n                //dispatch({ type: SHOW_LOADER_CATEGORIA, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\nexport const freteFetch = (id) => {\r\n    return dispatch => {\r\n        let loadError = false;\r\n        let interval;\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        axios.get(`${APP_URL}/RestClientes/getfrete.json?fp=${FILIAL}&id=${id}`)\r\n            .then(res => {\r\n                clearInterval(interval);\r\n                console.log(`${APP_URL}/RestClientes/getfrete.json?fp=${FILIAL}&id=${id}`);\r\n               \r\n\r\n                if (typeof res.data.frete != 'undefined') {\r\n                    //console.log('res.data.frete');\r\n                    //console.log(res.data.frete);\r\n                    dispatch({ type: VALOR_FRETE, payload: res.data.frete });\r\n                } else {\r\n\r\n                    dispatch({ type: VALOR_FRETE, payload: 0 });\r\n                }\r\n\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n            }).catch(error => {\r\n                clearInterval(interval);\r\n                loadError = true;\r\n\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        freteFetch();\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (loadError == false) {\r\n            interval = setInterval(() => {\r\n                axios.get(`${APP_URL}/RestClientes/getfrete.json?fp=${FILIAL}&id=${id}`)\r\n                    .then(res => {\r\n                        clearInterval(interval);\r\n                        if (typeof res.data.pagamentos != 'undefined') {\r\n                            dispatch({ type: VALOR_FRETE, payload: res.data.frete });\r\n                        } else {\r\n\r\n                            dispatch({ type: VALOR_FRETE, payload: 0});\r\n                        }\r\n\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n                    }).catch(error => {\r\n                        clearInterval(interval);\r\n                        loadError = true;\r\n\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n                                freteFetch();\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n            }, 10000);\r\n        }\r\n    }\r\n}\r\n\r\nexport const tiposPagamentoFetch = () => {\r\n    return dispatch => {\r\n        let loadError = false;\r\n        let interval;\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        axios.get(`${APP_URL}/RestPagamentos/pagamentosmobile.json?fp=${FILIAL}`)\r\n            .then(res => {\r\n                clearInterval(interval);\r\n                if (typeof res.data.pagamentos != 'undefined') {\r\n                    dispatch({ type: CARREGA_TIPOS_PAGAMENTO_OK, payload: res.data.pagamentos });\r\n                } else {\r\n\r\n                    dispatch({ type: CARREGA_TIPOS_PAGAMENTO_FALHA, payload: false });\r\n                }\r\n\r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n            }).catch(error => {\r\n                clearInterval(interval);\r\n                loadError = true;\r\n\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        tiposPagamentoFetch();\r\n                    }, 10000);\r\n                }\r\n            });\r\n        if (loadError == false) {\r\n            interval = setInterval(() => {\r\n                axios.get(`${APP_URL}/RestPagamentos/pagamentosmobile.json?fp=${FILIAL}`)\r\n                    .then(res => {\r\n                        clearInterval(interval);\r\n                        if (typeof res.data.pagamentos != 'undefined') {\r\n                            dispatch({ type: CARREGA_TIPOS_PAGAMENTO_OK, payload: res.data.pagamentos });\r\n                        } else {\r\n\r\n                            dispatch({ type: CARREGA_TIPOS_PAGAMENTO_FALHA, payload: false });\r\n                        }\r\n\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n                    }).catch(error => {\r\n                        clearInterval(interval);\r\n                        loadError = true;\r\n\r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n                                tiposPagamentoFetch();\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n            }, 10000);\r\n        }\r\n    }\r\n}\r\n\r\nexport const addToCart = (produto, carrinho, frete = 0) => {\r\n    carrinho.push(produto);\r\n    let total = updateCart(carrinho, frete);\r\n    total = total;\r\n    return dispatch => {\r\n        dispatch({ type: ADICIONA_PRODUTO, payload: carrinho })\r\n        dispatch({ type: ATUALIZA_TOTAL_CARRINHO, payload: total })\r\n    }\r\n}\r\n\r\nexport const updateItemId = (item_id) => {\r\n\r\n    return dispatch => {\r\n        return dispatch({ type: ATUALIZA_ITEM_ID, payload: item_id + 1 });\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (item_id, carrinho, frete = 0) => {\r\n    let newItem = [];\r\n    carrinho.map((item) => {\r\n        if (item.item_id != item_id) {\r\n            newItem.push(item);\r\n        }\r\n    });\r\n    let total = updateCart(newItem, frete);\r\n    return dispatch => {\r\n        dispatch({ type: REMOVE_PRODUTO, payload: newItem })\r\n        dispatch({ type: ATUALIZA_TOTAL_CARRINHO, payload: total })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updateCartQtd = (qtd) => {\r\n    return dispatch => {\r\n        dispatch({ type: ATUALIZA_QTD, payload: qtd })\r\n    }\r\n}\r\n\r\n\r\nexport const updateCart = (carrinho, frete) => {\r\n    let total = frete;\r\n    total = parseFloat(total);\r\n\r\n    carrinho.map((item) => {\r\n        total += item.preco_venda * item.qtd;\r\n\r\n    });\r\n    return total;\r\n}\r\n\r\nexport const loadInfoModal = (content) => {\r\n    if (typeof content == 'undefined') {\r\n        content = SEM_DESCRICAO;\r\n    }\r\n    if (content == '') {\r\n        content = SEM_DESCRICAO;\r\n    }\r\n\r\n    return dispatch => {\r\n        return dispatch({ type: CARREGA_INFO_MODAL, payload: content });\r\n    }\r\n}\r\nexport const setModalVisible = (status, content) => {\r\n   \r\n    if (typeof content == 'undefined') {\r\n        content = SEM_DESCRICAO;\r\n    }\r\n    if (content == '') {\r\n        content = SEM_DESCRICAO;\r\n    }\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_MODAL, payload: status });\r\n        dispatch({ type: CARREGA_INFO_MODAL, payload: content });\r\n    }\r\n}\r\n\r\nexport const atualizaTroco = (troco) => {\r\n    return dispatch => {\r\n        dispatch({ type: ATUALIZA_TROCO, payload: troco })\r\n    }\r\n}\r\n\r\nexport const atualizaObs = (obs) => {\r\n    return dispatch => {\r\n        dispatch({ type: ATUALIZA_OBS, payload: obs })\r\n    }\r\n}\r\n\r\nexport const atualizaFormaDePagamento = (pagamento) => {\r\n    return dispatch => {\r\n        dispatch({ type: ATUALIZA_FORMA_PAGAMENTO, payload: pagamento })\r\n    }\r\n}\r\n\r\nexport const enviaPedido = (pedido) => {\r\n\r\n    /*return dispatch => {\r\n        dispatch({ type: PEDIDO_OK, payload: true })\r\n    }*/\r\n    //console.log(pedido);\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER, payload: true });\r\n        let meuPedido = montaPedido(pedido);\r\n        dispatch({ type: PEDIDO_CARREGADO_OK, payload: [] });\r\n        let loadError = false;\r\n        let passouOk= false;\r\n        let interval;\r\n        \r\n        axios.post(`${APP_URL}/RestPedidos/addmobile.json`, meuPedido)\r\n            .then(res => {\r\n                clearInterval(interval);\r\n                loadError = false;\r\n                passouOk= true;\r\n                \r\n               // console.log(res);\r\n\r\n\r\n                if(res.data.resultados== \"errolojafechada\" || res.data.resultados== \"\" || res.data== \"\"){\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, no momento não conseguimos enviar seu pedido porque a loja está fechada.`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                //onPress: () => limpaCarrinho(),\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }else if(res.data.resultados== \"erro\")\r\n                {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Houve um erro ao tentar enviar seu pedido, por favor, tente novamente mais tarde. Caso o erro persista, entre em contato com a loja.`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                //onPress: () => limpaCarrinho(),\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }else if(res.data.resultados == \"erroUsuarioInativo\")\r\n                {\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Houve um erro inesperado ao tentar enviar seu pedido, por favor, tente novamente mais tarde. Caso o erro persista, entre em contato com a loja.`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                //onPress: () => limpaCarrinho(),\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }else{\r\n\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Pedido enviado com sucesso!`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                onPress: () => limpaCarrinho(),\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                    dispatch({ type: PEDIDO_CARREGADO_OK, payload: res.data.resultados.Pedido });\r\n                    dispatch({ type: LIMPA_QTD_CARRINHO, payload: 0 });\r\n                    dispatch({ type: ATUALIZA_FORMA_PAGAMENTO, payload: '' });\r\n                    dispatch({ type: LIMPA_CARRINHO, payload: [] });\r\n                    dispatch({ type: LIMPA_TOTAL_CARRINHO, payload: 0 });\r\n                    dispatch({ type: PEDIDO_OK, payload: true });\r\n\r\n                    \r\n                    \r\n                }\r\n                \r\n                dispatch({ type: SHOW_LOADER, payload: false });\r\n                \r\n                //console.log('res');\r\n                //console.log(res);  \r\n            }).catch(error => {\r\n                //console.log('error');\r\n                //console.log(error);\r\n               // dispatch({ type: PEDIDO_CARREGADO_OK, payload: [] });\r\n                //dispatch({ type: SHOW_LOADER, payload: false });\r\n                //dispatch({ type: PEDIDO_NAO_OK, payload: false });\r\n                clearInterval(interval);\r\n                loadError = true;\r\n                passouOk= true;\r\n\r\n                if (loadError == true) {\r\n                    interval = setInterval(() => {\r\n                        enviaPedido(pedido);\r\n                    }, 10000);\r\n                }\r\n            });\r\n            if(passouOk==false){\r\n                interval = setInterval(() => {\r\n                    axios.post(`${APP_URL}/RestPedidos/addmobile.json`, meuPedido)\r\n                    .then(res => {\r\n                        clearInterval(interval);\r\n                        loadError = false;\r\n                        passouOk= true;\r\n                        dispatch({ type: PEDIDO_CARREGADO_OK, payload: res.data.resultados.Pedido });\r\n        \r\n        \r\n        \r\n                        dispatch({ type: LIMPA_QTD_CARRINHO, payload: 0 });\r\n                        dispatch({ type: ATUALIZA_FORMA_PAGAMENTO, payload: '' });\r\n                        dispatch({ type: LIMPA_CARRINHO, payload: [] });\r\n                        dispatch({ type: LIMPA_TOTAL_CARRINHO, payload: 0 });\r\n                        dispatch({ type: PEDIDO_OK, payload: true });\r\n                        dispatch({ type: SHOW_LOADER, payload: false });\r\n        \r\n        \r\n        \r\n        \r\n                        Alert.alert(\r\n                            'Mensagem',\r\n                            `Pedido enviado com sucesso!`,\r\n                            [\r\n                                {\r\n                                    text: 'OK',\r\n                                    onPress: () => limpaCarrinho(),\r\n                                    style: 'OK',\r\n                                },\r\n                            ],\r\n                            { cancelable: false },\r\n                        );\r\n        \r\n                    }).catch(error => {\r\n                       // dispatch({ type: PEDIDO_CARREGADO_OK, payload: [] });\r\n                        //dispatch({ type: SHOW_LOADER, payload: false });\r\n                        //dispatch({ type: PEDIDO_NAO_OK, payload: false });\r\n                        clearInterval(interval);\r\n                        loadError = true;\r\n                        passouOk= true;\r\n        \r\n                        if (loadError == true) {\r\n                            interval = setInterval(() => {\r\n                                enviaPedido(pedido);\r\n                            }, 10000);\r\n                        }\r\n                    });\r\n                }, 10000);\r\n            }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const validaToken = (usuario,token) => {\r\n    return dispatch => {\r\n        \r\n        axios.get(`${APP_URL}/RestClientes/validatoken.json?fp=${FILIAL}&lj=${EMPRESA}&clt=${usuario}&token=${token}&limit=20`)\r\n        .then(res => {\r\n           \r\n           \r\n            \r\n            dispatch({ type: IS_VALID_TOKEN, payload: res.data.users });\r\n        }).catch(error => {\r\n            //console.log('errou cli');\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport const entrarJokenpo = (usuario,token) => {\r\n    return dispatch => {\r\n        \r\n        let dados= {\r\n            fp: FILIAL.toString(),\r\n            lj: EMPRESA.toString(),\r\n            clt: usuario,\r\n            token: token\r\n        }\r\n        //console.log(dados);\r\n        dispatch({type: SHOW_LOADER, payload: true});\r\n        axios.post(`${APP_URL}/RestClientes/validajogos.json?`, dados)\r\n        .then(res => {\r\n            //console.log('res')\r\n            //console.log(res.data.users)\r\n            if(typeof res.data.users != 'undefined'){\r\n                if(res.data.users.resultado=='OK'){\r\n                    if(res.data.users.Partida == ''){\r\n                        dispatch({type: DADOS_PREMIO, payload: res.data.users});\r\n                        dispatch({type: INICIOU_PARTIDA, payload: true});\r\n                        dispatch({type: SALDO, payload: res.data.users.moedas});\r\n                        dispatch({type: DADOS_PARTIDA, payload: ''});\r\n                        dispatch({type: DADOS_PREMIO, payload: ''});\r\n                        dispatch({type: RESULTADO, payload: ''});\r\n                        dispatch({type: TXTCOLOR, payload: 'red'});\r\n                        dispatch({type: ESCOLHA_DO_USUARIO, payload: ''});\r\n                        dispatch({type: ESCOLHA_DO_COMPUTADOR, payload: ''});\r\n                        dispatch({type: SHOW_IMAGE, payload: false});\r\n                        dispatch({type: IMAGEM_COMPUTADOR, payload: require('../../assets/images/pedra.png')});\r\n                        dispatch({type: IMAGEM_USUARIO , payload: require('../../assets/images/pedra.png')});\r\n                        dispatch({type: N_VITORIAS, payload: 0});\r\n                        dispatch({type: N_DERROTAS, payload: 0});\r\n                        dispatch({type: RESULTADO_FINAL, payload: ''})\r\n                    }else{\r\n                       /* dispatch({type: DADOS_PREMIO, payload: res.data.users});\r\n                        dispatch({type: INICIOU_PARTIDA, payload: true});\r\n                        dispatch({type: SALDO, payload: res.data.users.moedas});\r\n                        //dispatch({type: DADOS_PARTIDA, payload: res.data.users.Partida});\r\n                        //dispatch({type: DADOS_PREMIO, payload: ''});\r\n                        dispatch({type: RESULTADO, payload: res.data.users.ultima_parcial});\r\n                        //dispatch({type: TXTCOLOR, payload: 'red'});\r\n                        dispatch({type: ESCOLHA_DO_USUARIO, payload: res.data.users.escolha_usuario});\r\n                        dispatch({type: ESCOLHA_DO_COMPUTADOR, payload: res.data.users.escolha_computador});\r\n                        dispatch({type: SHOW_IMAGE, payload: true});\r\n                        if(res.data.users.escolha_usuario=='Pedra'){\r\n                            dispatch({type: IMAGEM_USUARIO , payload: require('../../assets/images/pedra.png')});    \r\n                        }else if(res.data.users.escolha_usuario=='Teso'){\r\n\r\n                        }\r\n                        dispatch({type: IMAGEM_COMPUTADOR, payload: require('../../assets/images/pedra.png')});\r\n                        \r\n                        dispatch({type: N_VITORIAS,  payload: res.data.users.n_vitorias});\r\n                        dispatch({type: N_DERROTAS, payload: res.data.users.n_derrotas});\r\n                        dispatch({type: RESULTADO_FINAL, payload: res.data.users.restultado})*/\r\n                        dispatch({type: INICIOU_PARTIDA, payload: true});\r\n\r\n                        let resultado = res.data.users.Partida.ultima_parcial;\r\n                        let imagemComputador = '';\r\n                        let imagemUsuario = '';\r\n                        let txtColor='';\r\n                        \r\n                        if (res.data.users.Partida.escolha_computador == 'Pedra') {\r\n                            imagemComputador = require('../../assets/images/pedra.png');\r\n                        } else if (res.data.users.Partida.escolha_computador == 'Papel') {\r\n                            imagemComputador = require('../../assets/images/papel.png');\r\n                        } else {\r\n                            imagemComputador = require('../../assets/images/tesoura.png');\r\n                        }\r\n\r\n                        if (res.data.users.Partida.escolha_usuario == 'Pedra') {\r\n                            imagemUsuario = require('../../assets/images/pedra.png');\r\n                        } else if (res.data.users.Partida.escolha_usuario == 'Papel') {\r\n                            imagemUsuario = require('../../assets/images/papel.png');\r\n                        } else {\r\n                            imagemUsuario = require('../../assets/images/tesoura.png');\r\n                        }\r\n\r\n                        //this.setState({  showImage: true, imagemComputador: imagemComputador, imagemUsuario: imagemUsuario })\r\n                        \r\n                        if (resultado == 'Você Ganhou') {\r\n                            txtColor = 'green'\r\n                        } else if (resultado == 'Você Empatou') {\r\n                            txtColor = '#E1AD01'\r\n                        } else {\r\n                            txtColor = 'red'\r\n                        }\r\n                        if(res.data.users.Partida.escolha_usuario =='' || res.data.users.Partida.escolha_usuario ==null){\r\n                            dispatch({ type: SHOW_IMAGE, payload: false })\r\n                        }else{\r\n                            dispatch({ type: SHOW_IMAGE, payload: true })\r\n                        }\r\n                        dispatch({ type: RESULTADO, payload: resultado })\r\n                        \r\n                        dispatch({ type: IMAGEM_COMPUTADOR, payload: imagemComputador })\r\n                        dispatch({ type: IMAGEM_USUARIO, payload: imagemUsuario })\r\n                        \r\n                        if(res.data.users.Partida.n_vitorias != '' && res.data.users.Partida.n_vitorias != null ){\r\n                            dispatch({ type: N_VITORIAS, payload: res.data.users.Partida.n_vitorias })\r\n                        }\r\n                        \r\n                        if(res.data.users.Partida.n_derrotas != '' && res.data.users.Partida.n_derrotas != null){\r\n                            dispatch({ type: N_DERROTAS, payload: res.data.users.Partida.n_derrotas })\r\n                        }\r\n\r\n                        if(res.data.users.Partida.restultado != ''&& res.data.users.Partida.restultado != null){\r\n                            dispatch({ type: RESULTADO_FINAL, payload: res.data.users.Partida.restultado })\r\n                            dispatch({ type: INICIOU_PARTIDA, payload: false });\r\n                        }\r\n\r\n                        dispatch({ type: TXTCOLOR, payload: txtColor })\r\n                        dispatch({ type: ESCOLHA_DO_COMPUTADOR, payload: res.data.users.Partida.escolha_computador })\r\n                        dispatch({ type: ESCOLHA_DO_USUARIO, payload: res.data.users.Partida.escolha_usuario })\r\n                    }\r\n                    \r\n                    //dispatch({type: SALDO, payload: 0})\r\n   \r\n    \r\n\r\n                    //dispatch(NavigationActions.navigate({ routeName: 'Jokenpo' }))\r\n                    \r\n                }else {\r\n                    dispatch({type: INICIOU_PARTIDA, payload: false});\r\n                    dispatch({type: DADOS_PREMIO, payload:''});\r\n                    Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, acho que você não tem moedas suficientes para jogar.`,\r\n                        [\r\n                            {\r\n                                text: 'OK',\r\n                                style: 'OK',\r\n                            },\r\n                        ],\r\n                        { cancelable: false },\r\n                    );\r\n                }\r\n                \r\n            }\r\n            dispatch({type: SHOW_LOADER, payload: false});\r\n        }).catch(error => {\r\n            //console.log('errou cli');\r\n           // console.log(error);\r\n            dispatch({type: DADOS_PREMIO, payload: ''});\r\n            dispatch({type: INICIOU_PARTIDA, payload: false});\r\n            dispatch({type: SHOW_LOADER, payload: false});\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport const jogarJokenpo = (usuario,token, escolhaUsuario) => {\r\n    return dispatch => {\r\n        \r\n        let dados= {\r\n            fp: FILIAL.toString(),\r\n            lj: EMPRESA.toString(),\r\n            clt: usuario,\r\n            token: token,\r\n            escolhaUsuario:escolhaUsuario,\r\n        }\r\n        //console.log(dados);\r\n        dispatch({ type: SHOW_LOADER, payload: true })\r\n        axios.post(`${APP_URL}/RestClientes/jogarjokenpo.json?`, dados)\r\n        .then(res => {\r\n            \r\n           //console.log('res');\r\n           //console.log(res);\r\n            if(typeof res.data.users !='undefined'){\r\n                if(res.data.users !=''){\r\n                    \r\n                    \r\n                    let resultado = res.data.users.Partida.ultima_parcial;\r\n                    let imagemComputador = '';\r\n                    let imagemUsuario = '';\r\n                    let txtColor='';\r\n                    \r\n                    if (res.data.users.Partida.escolha_computador == 'Pedra') {\r\n                        imagemComputador = require('../../assets/images/pedra.png');\r\n                    } else if (res.data.users.Partida.escolha_computador == 'Papel') {\r\n                        imagemComputador = require('../../assets/images/papel.png');\r\n                    } else {\r\n                        imagemComputador = require('../../assets/images/tesoura.png');\r\n                    }\r\n\r\n                    if (res.data.users.Partida.escolha_usuario == 'Pedra') {\r\n                        imagemUsuario = require('../../assets/images/pedra.png');\r\n                    } else if (res.data.users.Partida.escolha_usuario == 'Papel') {\r\n                        imagemUsuario = require('../../assets/images/papel.png');\r\n                    } else {\r\n                        imagemUsuario = require('../../assets/images/tesoura.png');\r\n                    }\r\n\r\n                    //this.setState({  showImage: true, imagemComputador: imagemComputador, imagemUsuario: imagemUsuario })\r\n                    \r\n                    if (resultado == 'Você Ganhou') {\r\n                        txtColor = 'green'\r\n                    } else if (resultado == 'Você Empatou') {\r\n                        txtColor = '#E1AD01'\r\n                    } else {\r\n                        txtColor = 'red'\r\n                    }\r\n                 \r\n                    dispatch({ type: RESULTADO, payload: resultado })\r\n                    dispatch({ type: SHOW_IMAGE, payload: true })\r\n                    dispatch({ type: IMAGEM_COMPUTADOR, payload: imagemComputador })\r\n                    dispatch({ type: IMAGEM_USUARIO, payload: imagemUsuario })\r\n                    \r\n                    if(res.data.users.Partida.n_vitorias != '' && res.data.users.Partida.n_vitorias != null ){\r\n                        dispatch({ type: N_VITORIAS, payload: res.data.users.Partida.n_vitorias })\r\n                    }\r\n                    \r\n                    if(res.data.users.Partida.n_derrotas != '' && res.data.users.Partida.n_derrotas != null){\r\n                        dispatch({ type: N_DERROTAS, payload: res.data.users.Partida.n_derrotas })\r\n                    }\r\n\r\n                    if(res.data.users.Partida.restultado != ''&& res.data.users.Partida.restultado != null){\r\n                        dispatch({ type: RESULTADO_FINAL, payload: res.data.users.Partida.restultado })\r\n                        dispatch({ type: INICIOU_PARTIDA, payload: false });\r\n                    }\r\n\r\n                    dispatch({ type: TXTCOLOR, payload: txtColor })\r\n                    dispatch({ type: ESCOLHA_DO_COMPUTADOR, payload: res.data.users.Partida.escolha_computador })\r\n                    dispatch({ type: ESCOLHA_DO_USUARIO, payload: res.data.users.Partida.escolha_usuario })\r\n                }    \r\n            }\r\n            dispatch({ type: SHOW_LOADER, payload: false })\r\n        }).catch(error => {\r\n            dispatch({ type: SHOW_LOADER, payload: false })\r\n        });\r\n    }\r\n    \r\n}\r\nexport const modificaSaldo = (status) => {\r\n    return dispatch => {\r\n        dispatch({ type: SALDO, payload: status })\r\n    }\r\n}\r\nexport const verificasaldo = (usuario,token) => {\r\n    return dispatch => {\r\n        \r\n        let dados= {\r\n            fp: FILIAL.toString(),\r\n            lj: EMPRESA.toString(),\r\n            clt: usuario,\r\n            token: token,\r\n        }\r\n        //console.log(dados);\r\n        dispatch({ type: SHOW_LOADER, payload: true })\r\n        axios.post(`${APP_URL}/RestClientes/verificasaldo.json`, dados)\r\n        .then(res => {\r\n            //console.log('res saldo');\r\n            //console.log(res);\r\n            //console.log(dados);\r\n            if(typeof res.data.users !='undefined'){\r\n                if(res.data.users !=''){\r\n                    \r\n                    dispatch({ type: SALDO, payload: res.data.users })\r\n                }    \r\n            }\r\n            dispatch({ type: SHOW_LOADER, payload: false })\r\n        }).catch(error => {\r\n            dispatch({ type: SHOW_LOADER, payload: false })\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport const showMyLoader = (status) => {\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER, payload: status })\r\n    }\r\n}\r\n\r\nexport const showMyLoaderCategory = (status) => {\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER_CATEGORIA, payload: status })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setStatusEnvioPedido = (status) => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({ type: STATUS_ENVIO_PEDIDO, payload: status });\r\n\r\n    }\r\n}\r\n\r\nexport const setStatusCadastroUsuario = (status) => {\r\n   // console.log('sete cadastro')\r\n    return dispatch => {\r\n\r\n        dispatch({ type: CADASTRO_USUARIO_SUCESSO, payload: status });\r\n\r\n    }\r\n}\r\nexport const montaPedido = (pedido) => {\r\n    \r\n    let novoPedido = {\r\n        Pedido: {\r\n            filial_id: FILIAL,\r\n            a: \"entrega\",\r\n            status_novo: 1,\r\n            cliente_id: pedido.cliente_id,\r\n            empresa_id: EMPRESA,\r\n            pagamento_id: pedido.pagamento_id,\r\n            trocovalor: '',\r\n            trocoresposta: pedido.trocoresposta,\r\n            salt: SALT,\r\n            token: pedido.token,\r\n            obs: pedido.obs,\r\n            entrega_valor: pedido.entrega_valor,\r\n            logradouro: pedido.logradouro,\r\n            numero: pedido.numero,\r\n            ponto_referencia: pedido.ponto_referencia,\r\n            bairro_id: pedido.bairro_id,\r\n            cidad_id: pedido.cidad_id,\r\n            estado_id: pedido.estado_id,\r\n            telefone: pedido.telefone,\r\n            email: pedido.email,\r\n            complemento: pedido.complemento,\r\n            bairro_nome: pedido.bairro_nome,\r\n            cidade_nome: pedido.cidade_nome,\r\n            estado_nome: pedido.estado_nome,\r\n            ponto_referencia: pedido.ponto_referencia,\r\n            ptk: pedido.ptk\r\n        },\r\n        Itensdepedido: [],\r\n        \r\n    }\r\n    let itensPedido = pedido.carrinho.map((v, k) => {\r\n\r\n        let p_total = v.preco_venda * v.qtd;\r\n        novoPedido.Itensdepedido.push({\r\n            produto_id: v.id,\r\n            qtde: v.qtd,\r\n            valor_unit: v.preco_venda,\r\n            valor_total: p_total.toFixed(2),\r\n            obs_sis: \"\",\r\n            partida_id: v.partida_id\r\n        });\r\n        \r\n    });\r\n    //console.log(novoPedido);\r\n    return novoPedido;\r\n}\r\n\r\nexport const limpaCarrinho = () => {\r\n\r\n    return dispatch => {\r\n        dispatch({ type: LIMPA_CARRINHO, payload: [] });\r\n        dispatch({ type: LIMPA_QTD_CARRINHO, payload: 0 });\r\n        dispatch({ type: LIMPA_TOTAL_CARRINHO, payload: 0 });\r\n        dispatch({ type: ATUALIZA_FORMA_PAGAMENTO, payload: '' });\r\n        dispatch({ type: ATUALIZA_TROCO, payload: '' });\r\n    }\r\n}\r\n\r\n\r\nexport const modificaEmail = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_EMAIL, payload: texto });\r\n\r\n    }\r\n}\r\nexport const modificaUsuarioModificouCadastro = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: USUARIO_ATUALIZOU_CADASTRO, payload: texto });\r\n\r\n    }\r\n}\r\n\r\nexport const modificaUsuario = (usuario) => {\r\n    return dispatch => {\r\n        dispatch({ type: CADASTRO_USUARIO, payload: usuario });\r\n\r\n    }\r\n}\r\n\r\nexport const modificaSenha = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_SENHA, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaConfirmaSenha = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_CONFIRMA_SENHA, payload: texto });\r\n    }\r\n}\r\nexport const modificaNome = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_NOME, payload: texto });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const modificaCep = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_CEP, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaEndereco = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_ENDERECO, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaNumero = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_NUMERO, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaComplemento = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_COMPLEMENTO, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaPontoReferencia = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_PONTO_REFERENCIA, payload: texto });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const modificaEstado = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_ESTADO, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaCidade = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_CIDADE, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaBairro = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_BAIRRO, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaTelefone = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_TELEFONE, payload: texto });\r\n    }\r\n}\r\nexport const modificaUsername = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_USERNAME, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaCarregaEstadoFalha = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: CARREGA_ESTADO_FALHA, payload: texto });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const limpaFormularioCadastro = () => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_PONTO_REFERENCIA, payload: '' });\r\n        dispatch({ type: MODIFICA_ESTADO, payload: '' });\r\n        dispatch({ type: MODIFICA_ESTADO, payload: '' });\r\n        dispatch({ type: MODIFICA_CIDADE, payload: '' });\r\n        dispatch({ type: MODIFICA_BAIRRO, payload: '' });\r\n        dispatch({ type: MODIFICA_TELEFONE, payload: '' });\r\n        dispatch({ type: MODIFICA_COMPLEMENTO, payload: '' });\r\n        dispatch({ type: MODIFICA_NUMERO, payload: '' });\r\n        dispatch({ type: MODIFICA_ENDERECO, payload: '' });\r\n        dispatch({ type: MODIFICA_CEP, payload: '' });\r\n        dispatch({ type: MODIFICA_NOME, payload: '' });\r\n        dispatch({ type: MODIFICA_CONFIRMA_SENHA, payload: '' });\r\n        dispatch({ type: MODIFICA_SENHA, payload: '' });\r\n        dispatch({ type: MODIFICA_EMAIL, payload: '' });\r\n        dispatch({ type: MODIFICA_USERNAME, payload: '' });\r\n        dispatch({ type: MODIFICA_NOME, payload: '' });\r\n    }\r\n}\r\n\r\nexport const modificaSenhaAntiga = (senha) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_SENHA_ANTIGA, payload: senha });\r\n    }\r\n}\r\n\r\nexport const modificaIdUsuario = (id) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_ID_USUARIO, payload: id });\r\n    }\r\n}\r\n\r\nexport const modificaNomeEstado = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_NOME_ESTADO, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaNomeCidade = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_NOME_CIDADE, payload: texto });\r\n    }\r\n}\r\nexport const modificaNomeBairro = (texto) => {\r\n    return dispatch => {\r\n        dispatch({ type: MODIFICA_NOME_BAIRRO, payload: texto });\r\n    }\r\n}\r\n\r\nexport const modificaIniciouPartida = (status) => {\r\n    return dispatch => {\r\n        dispatch({ type: INICIOU_PARTIDA, payload: status });\r\n    }\r\n}\r\n\r\nexport const modificaDadosPartida = (txt) => {\r\n    return dispatch => {\r\n        dispatch({ type: DADOS_PARTIDA, payload: txt });\r\n    }\r\n}\r\nexport const modificaDadosJokenpo = (dados) => {\r\n    return dispatch => {\r\n        dispatch({ type: DADOS_PARTIDA, payload: txt });\r\n    }\r\n}\r\n\r\n\r\n    \r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Image,\r\n  Button,\r\n  TouchableOpacity\r\n} from \"react-native\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Color from \"../../constants/Colors\";\r\n//import CustomText from \"../components/common/CustomText\";\r\n//import Constants from \"../utils/constants\";\r\nimport { categoriasFetch } from '../actions/AppActions';\r\n\r\n class RestaurantItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isClicked: false\r\n    };\r\n    \r\n  }\r\n  handleClick = () => {\r\n\r\n    this.setState({\r\n      isClicked: !this.state.isClicked\r\n    });\r\n    this.props.handleNaviagation();\r\n  };\r\n  render() {\r\n  \r\n    \r\n    return (\r\n      <TouchableOpacity onPress={this.handleClick}>\r\n        <View\r\n          style={{\r\n            marginHorizontal: 24,\r\n            marginVertical: 8,\r\n            borderRadius: 6,\r\n            height: 160,\r\n          }}\r\n        >\r\n          <Image\r\n            style={{\r\n              backgroundColor: Color.tabIconDefault,\r\n              flex: 1,\r\n              position: \"absolute\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              justifyContent: \"center\",\r\n              borderRadius: 6\r\n            }}\r\n            source={{ uri: this.props.image.replace('http://localhost/', 'http://10.0.2.2/') }}\r\n            //Local teste\r\n            //source={require('../../assets/download/adayar-anandha-bhavan.jpg')}\r\n            //Internet teste\r\n            //source={{ uri: this.props.image }}\r\n          />\r\n          <View\r\n            style={{\r\n              padding: 16,\r\n              position: \"absolute\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              bottom: 0,\r\n              backgroundColor: \"rgba(0, 0, 0, 0.55)\",\r\n              borderRadius: 6\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: 32,\r\n                fontWeight: \"700\",\r\n                color: Color.checkoutContainerBackground\r\n              }}\r\n            >\r\n              {this.props.name}\r\n            </Text>\r\n           \r\n            <Text\r\n              style={{\r\n                fontSize: 14,\r\n                color: Color.checkoutContainerBackground\r\n              }}\r\n            >\r\n              Categoria\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    categorias: state.AppReducer.categorias,\r\n    carrinho: state.AppReducer.carrinho,\r\n    total_carrinho: state.AppReducer.total_carrinho,\r\n    qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n    forma_pagamento: state.AppReducer.forma_pagamento,\r\n    tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n    troco_pedido: state.AppReducer.troco_pedido,\r\n    obs_pedido: state.AppReducer.obs_pedido,\r\n    show_loader: state.AppReducer.show_loader,\r\n    status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({categoriasFetch}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RestaurantItem);","import React, { Component } from \"react\";\r\nimport { Image, Text, View, TouchableOpacity } from \"react-native\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addToCart } from '../../actions/AppActions';\r\nimport Color from '../../../constants/Colors';\r\n\r\nclass CartButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNavigate = this.handleNavigate.bind(this);\r\n    \r\n  }\r\n\r\n  handleNavigate = () => {\r\n    this.props.onPress();\r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <TouchableOpacity onPress={this.handleNavigate}>\r\n        <Image\r\n          style={{ width: 32, height: 32, marginRight: 16 }}\r\n          source={require(\"../../../assets/shopping-bag.png\")}\r\n        />\r\n        <View\r\n          style={{\r\n            height: 20,\r\n            width: 20,\r\n            borderRadius: 10,\r\n            backgroundColor: Color.numbersIcons,\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 2\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: Color.headerBarTitle,\r\n              fontSize: 13,\r\n              textAlign: \"center\",\r\n              lineHeight: 20\r\n            }}\r\n          >\r\n            {this.props.qtd_carrinho}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  qtd_carrinho: state.AppReducer.qtd_carrinho\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({addToCart}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartButton);\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { categoriasFetch,categoriasFetchInterval, showMyLoaderCategory } from '../actions/AppActions';\r\nimport { AppLoading } from 'expo';\r\n\r\n\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Image,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  BackHandler,\r\n  Alert,\r\n  Platform\r\n} from \"react-native\";\r\n//import restaurantsData from \"../api/restaurants.json\";\r\nimport RestaurantItem from \"./RestaurantItem\";\r\nimport CartButton from \"./common/CartButton\";\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass Restaurants extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.showMyLoaderCategory(true);\r\n    this.props.categoriasFetch();\r\n    this.interval = setInterval(() => this.props.categoriasFetchInterval(), 60000);\r\n    this.handleBackButtonClick = this.handleBackButtonClick.bind(this);\r\n    \r\n  }\r\n\r\n  handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"Dishes\");\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n      BackHandler.addEventListener('hardwareBackPress', this.handleBackButtonClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n      BackHandler.removeEventListener('hardwareBackPress', this.handleBackButtonClick);\r\n  }\r\n\r\n  handleBackButtonClick() {\r\n      \r\n      Alert.alert(\r\n        'Sair',\r\n        `Deseja mesmo sair do aplicativo`,\r\n        [\r\n          {\r\n            text: 'Sim',\r\n            onPress: () =>  BackHandler.exitApp(),\r\n          },\r\n          {\r\n            text: 'Não',\r\n            onPress: () => console.log('Cancel Pressed'),\r\n            style: 'cancel',\r\n          },\r\n        ],\r\n        { cancelable: false },\r\n      );\r\n      //NavigationAction.back();\r\n      return true;\r\n  }\r\n\r\n \r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Cardápio\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar,\r\n        \r\n      },\r\n      headerTitleStyle: {\r\n        color: Color.headerBarTitle,\r\n        fontWeight:'bold'\r\n      },\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  };\r\n  handleNaviagation = (categoria_id) => {\r\n    \r\n    this.props.navigation.navigate(\"Dishes\", { categoria_id: categoria_id });\r\n  };\r\n  render() {\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        {\r\n          this.props.categorias.length == 0 && this.props.show_loader_categoria == false ? (<View style={{\r\n            opacity: 1.0,\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            flexDirection:'column',\r\n            padding:50\r\n            \r\n          }} >\r\n            <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'}  size={200} color={Color.tintColor} />\r\n            <Text style={{fontSize:18 , textAlign:'center'}}>Ops!</Text>\r\n            <Text style={{fontSize:15, textAlign:'center'}}>Não encontramos categorias cadastradas.</Text>\r\n            \r\n          </View>):(\r\n            <View></View>\r\n          )\r\n        }\r\n        {\r\n          this.props.categoria_carregada_falha == false ? (\r\n            <FlatList\r\n              data={this.props.categorias}\r\n              keyExtractor={item => item.Categoria.id}\r\n              renderItem={({ item }) => (\r\n                <RestaurantItem\r\n                  name={item.Categoria.nome}\r\n                  image={item.Categoria.foto}\r\n                  cuisine={item.Categoria.nome}\r\n                  location={item.Categoria.nome}\r\n                  isVegetarian={item.Categoria.nome}\r\n                  handleNaviagation={() => this.handleNaviagation(item.Categoria.id)}\r\n                  categoria_id={ item.Categoria.id}\r\n                />\r\n              )}\r\n            />\r\n          ):(\r\n            <View style={{\r\n              opacity: 1.0,\r\n              alignItems:'center',\r\n              justifyContent:'center',\r\n              flexDirection:'column',\r\n              padding:50\r\n              \r\n            }} >\r\n              <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'} size={200} color={Color.tintColor} />\r\n              <Text style={{fontSize:18}}>Ops!</Text>\r\n              <Text style={{fontSize:15}}>Houve uma falha ao carregar o menu.</Text>\r\n              <Text style={{fontSize:15}}>Tente novamente mais tarde!</Text>\r\n            </View> \r\n          )\r\n        }\r\n        {\r\n          this.props.show_loader_categoria == true ? (\r\n            <View\r\n              style={{\r\n\r\n\r\n                opacity: 1.0,\r\n                width: '100%',\r\n\r\n                alignItems: 'center',\r\n                flex: 1,\r\n                position: 'absolute',\r\n                marginTop: '50%'\r\n              }}\r\n            >\r\n              <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                animating={true}\r\n                hidesWhenStopped={true}\r\n\r\n              />\r\n            </View>\r\n\r\n          ) : (\r\n              <View\r\n                style={{\r\n\r\n\r\n                  opacity: 0.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n\r\n\r\n\r\n            )\r\n        }\r\n\r\n\r\n\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n    flex: 1,\r\n  }\r\n});\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  categorias: state.AppReducer.categorias,\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n  show_loader_categoria: state.AppReducer.show_loader_categoria,\r\n  categoria_carregada_falha: state.AppReducer.categoria_carregada_falha\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ categoriasFetch,categoriasFetchInterval, showMyLoaderCategory }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurants);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Picker\r\n} from \"react-native\";\r\nimport { Overlay } from 'react-native-elements';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Color from '../../constants/Colors';\r\nimport { removeFromCart, updateCart } from '../actions/AppActions';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nclass ListOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isClicked: false\r\n    };\r\n  }\r\n\r\n  handleRemoveFromCart = () => {\r\n    this.props.removeFromCart(this.props.item_id, this.props.carrinho);\r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Pedidos\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar,\r\n        \r\n      },\r\n      headerTitleStyle: {\r\n        color: Color.textFormaPagamento,\r\n        fontWeight:'bold'\r\n      },\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  };\r\n  \r\n  \r\n  handleClick = () => {\r\n    this.setState({\r\n      isClicked: !this.state.isClicked\r\n    });\r\n    //this.props.handleNaviagation();\r\n    Alert.alert(\r\n      'Remover Produto',\r\n      `Deseja mesmo remover o produto ${this.props.name} do seu pedido?`,\r\n      [\r\n        {\r\n          text: 'Sim',\r\n          onPress: () => this.handleNaviagation(),\r\n        },\r\n        {\r\n          text: 'Não',\r\n          onPress: () => console.log('Não Pressed'),\r\n          style: 'cancel',\r\n        },\r\n      ],\r\n      { cancelable: false },\r\n    );\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <TouchableOpacity onPress={() => this.props.handleNaviagation()}>\r\n        <View\r\n          elevation={2}\r\n          style={{\r\n            flexDirection: \"row\",\r\n            backgroundColor: this.props.linha % 2 ? Color.itemBackgroudColorimpar:  Color.itemBackgroudColorpar ,\r\n            padding:10,\r\n            /*marginHorizontal: 24,\r\n            \r\n            marginVertical: 8,\r\n            borderRadius: 4,\r\n            shadowOpacity: 0.1,\r\n            shadowRadius: 2,\r\n            shadowOffset: {\r\n              height: 1,\r\n              width: 1\r\n            }*/\r\n          }}\r\n        >\r\n          <View style={{ \r\n            flex: 1, \r\n            //borderTopLeftRadius: 4,\r\n            //borderTopRightRadius: 0,\r\n            //borderBottomRightRadius: 0,\r\n            //borderBottomLeftRadius: 4 \r\n            }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n               // color: \"#000000\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n            Data\r\n            \r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n               // color: \"#000000\",\r\n               // fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              {this.props.item.Atendimento.data} \r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                fontWeight: \"bold\",\r\n               // color: \"#333\",\r\n               // textAlign: 'center',\r\n              }}\r\n            >\r\n              Hora\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                //fontWeight: \"bold\",\r\n               // color: \"#333\",\r\n               // textAlign: 'center',\r\n              }}\r\n            >\r\n              {this.props.item.Atendimento.hora}\r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                fontWeight: \"bold\",\r\n                //color: \"#a92319\",\r\n               // textAlign: 'center',\r\n              }}\r\n            >\r\n            Total \r\n             \r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                //fontWeight: \"bold\",\r\n                //color: \"#a92319\",\r\n               // textAlign: 'center',\r\n              }}\r\n            >\r\n              \r\n              <NumberFormat \r\n                value={this.props.item.Pedido[0].valor.replace(\".\",\",\")} \r\n                displayType={'text'} \r\n                renderText={value => <Text>{value}</Text>}\r\n                thousandSeparator={'.'}\r\n                decimalScale={2} \r\n                fixedDecimalScale={true}\r\n                prefix={'R$ '}\r\n                decimalSeparator={','}\r\n              \r\n              />\r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                fontWeight: \"bold\",\r\n                //color: \"#ef6136\",\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n            Situação\r\n            \r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                //fontWeight: \"bold\",\r\n                //color: \"#ef6136\",\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              {this.props.item.Pedido[0].status} \r\n            </Text>\r\n          </View>\r\n\r\n\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ removeFromCart, updateCart }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOrder);","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  pedidosFetch, \r\n  showMyLoader, \r\n  modificaUsuario, \r\n  pedidosFetchInverval, \r\n  validaToken, setStatusCadastroUsuario } from '../actions/AppActions';\r\nimport { AppLoading } from 'expo';\r\n\r\n\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Image,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Platform,\r\n  Alert\r\n} from \"react-native\";\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport ListOrder from \"./ListOrder\";\r\nimport CartButton from \"./common/CartButton\";\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass Orders extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.showMyLoader(true);\r\n    \r\n    \r\n   // this.storeToken('');\r\n   // this.props.setStatusCadastroUsuario('');\r\n    let userData = this.getToken();\r\n    \r\n    userData.then(\r\n      res => {\r\n        //console.log('res');\r\n        //console.log(res);\r\n        if(res == null || res == ''){\r\n                \r\n          this.props.showMyLoader(false);\r\n          this.props.navigation.navigate('RoutesLogin');\r\n          Alert.alert(\r\n            'Mensagem',\r\n            `Ops, você ainda não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade .`,\r\n            [\r\n              {\r\n                text: 'OK',\r\n                //onPress: () => console.log('clicou'),\r\n                style: 'WARNING',\r\n              },\r\n            ],\r\n            { cancelable: true },\r\n          );\r\n          \r\n        }else{\r\n          this.props.showMyLoader(true);\r\n          this.props.pedidosFetch(res.id,res.token);\r\n\r\n          this.interval = setInterval(() => this.props.pedidosFetchInverval(res.id,res.token), 60000);\r\n          this.props.validaToken(res.id,res.token);\r\n      \r\n        }\r\n        \r\n      }\r\n    ).catch(error => {\r\n    //console.log(error);    \r\n     \r\n    });\r\n    //console.log(this.props);\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n        \r\n    //console.log('nextProps.is_valid_token');\r\n    //console.log(nextProps.is_valid_token);\r\n        \r\n    if(typeof  nextProps.is_valid_token != 'undefined') {\r\n      if(typeof  nextProps.usuario != 'undefined') {\r\n          if(nextProps.usuario != ''){\r\n              if(nextProps.usuario){\r\n                  this.props.validaToken(nextProps.usuario.id,nextProps.usuario.token);\r\n                  if(nextProps.is_valid_token == 'NOK' ){\r\n                    this.storeToken('');\r\n                    this.props.setStatusCadastroUsuario('');\r\n                      this.props.navigation.navigate('RoutesLogin');\r\n                      Alert.alert(\r\n                        'Mensagem',\r\n                        `Ops, você não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade.`,\r\n                        [\r\n                          {\r\n                            text: 'OK',\r\n                            //onPress: () => console.log('clicou'),\r\n                            style: 'WARNING',\r\n                          },\r\n                        ],\r\n                        { cancelable: true },\r\n                      );\r\n                  }\r\n                  //this.props.setStatusCadastroUsuario(nextProps.usuario);\r\n                  //this.props.navigation.navigate('Main');\r\n              }\r\n          }\r\n      }\r\n      \r\n      \r\n        \r\n        \r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Meus Pedidos\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar,\r\n        \r\n      },\r\n      headerTitleStyle: {\r\n        color: Color.headerBarTitle,\r\n        fontWeight:'bold'\r\n      },\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  };\r\n  async storeToken(user) {\r\n    try {\r\n      await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n      //console.log('setou o usuario na sessão');\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n    }\r\n  }\r\n  async getToken() {\r\n    try {\r\n      let userData = await AsyncStorage.getItem(\"userData\");\r\n      let data = JSON.parse(userData);\r\n      //console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n      return false;\r\n    }\r\n  }\r\n  handleNaviagation = (Atendimento_id) => {\r\n\r\n    this.props.navigation.navigate(\"ViewOrder\", { Atendimento_id: Atendimento_id });\r\n  };\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <View style={styles.container}>\r\n        {\r\n          this.props.meus_pedidos.length == 0 && this.props.show_loader == false ? (<View style={{\r\n            opacity: 1.0,\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            flexDirection:'column',\r\n            padding:50\r\n            \r\n          }} >\r\n            <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'} size={200} color={Color.tintColor} />\r\n            <Text style={{fontSize:18 , textAlign:'center'}}>Ops!</Text>\r\n            <Text style={{fontSize:15, textAlign:'center'}}>Não encontramos pedidos cadastrados.</Text>\r\n            \r\n          </View>):(\r\n            <View></View>\r\n          )\r\n        }\r\n        {\r\n          this.props.meus_pedidos_carregados_falha == false ? (\r\n            <FlatList\r\n              data={this.props.meus_pedidos}\r\n              keyExtractor={item => item.Atendimento.id}\r\n              renderItem={({ item, index }) => (\r\n                <ListOrder\r\n                  item= {item}\r\n                  linha={index}\r\n                  handleNaviagation={() => this.handleNaviagation(item.Atendimento.id)}\r\n                  \r\n                />\r\n              )}\r\n            />\r\n          ):(\r\n            <View style={{\r\n              opacity: 1.0,\r\n              alignItems:'center',\r\n              justifyContent:'center',\r\n              flexDirection:'column',\r\n              padding:50\r\n              \r\n            }} >\r\n              <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'} size={200} color={Color.tintColor} />\r\n              <Text style={{fontSize:18}}>Ops!</Text>\r\n              <Text style={{fontSize:15}}>Houve uma falha ao carregar os pedidos.</Text>\r\n              <Text style={{fontSize:15}}>Tente novamente mais tarde!</Text>\r\n            </View> \r\n          )\r\n        }\r\n        {\r\n          this.props.show_loader == true ? (\r\n            <View\r\n              style={{\r\n\r\n\r\n                opacity: 1.0,\r\n                width: '100%',\r\n\r\n                alignItems: 'center',\r\n                flex: 1,\r\n                position: 'absolute',\r\n                marginTop: '50%'\r\n              }}\r\n            >\r\n              <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                animating={true}\r\n                hidesWhenStopped={true}\r\n\r\n              />\r\n            </View>\r\n\r\n          ) : (\r\n              <View\r\n                style={{\r\n\r\n\r\n                  opacity: 0.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n\r\n\r\n\r\n            )\r\n        }\r\n\r\n\r\n\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n\r\n  }\r\n});\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  meus_pedidos: state.AppReducer.meus_pedidos,\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n  meus_pedidos_carregados_falha: state.AppReducer.meus_pedidos_carregados_falha,\r\n  is_valid_token: state.AppReducer.is_valid_token,\r\n  usuario: state.AppReducer.usuario\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ pedidosFetch, showMyLoader, modificaUsuario,pedidosFetchInverval,validaToken, setStatusCadastroUsuario }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React, { Component } from 'react';\r\nimport {\r\n  View,\r\n\r\n  TextInput,\r\n  Button,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  ActivityIndicator,\r\n  ScrollView,\r\n  Picker,\r\n  Alert,\r\n  AsyncStorage,\r\n  Platform\r\n} from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { Text, Input } from 'react-native-elements';\r\nimport { connect } from 'react-redux';\r\nimport Color from \"../../constants/Colors\";\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport {\r\n  FILIAL,\r\n  EMPRESA,\r\n  SALT\r\n} from '../Settings'\r\nimport {\r\n  modificaEmail,\r\n  modificaSenha,\r\n  modificaNome,\r\n  cadastraUsuario,\r\n  modificaCep,\r\n  modificaEndereco,\r\n  modificaNumero,\r\n  modificaComplemento,\r\n  modificaPontoReferencia,\r\n  modificaEstado,\r\n  modificaCidade,\r\n  modificaBairro,\r\n  modificaTelefone,\r\n  modificaConfirmaSenha,\r\n  modificaUsername,\r\n  estadosFetch,\r\n  cidadesFetch,\r\n  bairroFetch,\r\n  limpaListaCidades,\r\n  limpaListaBairros,\r\n  limpaListaEstados,\r\n  setStatusCadastroUsuario,\r\n  limpaFormularioCadastro,\r\n  modificaSenhaAntiga,\r\n  modificaIdUsuario,\r\n  cadastraUsuarioEdit,\r\n  cadastraUsuarioEditComSenha,\r\n  modificaUsuarioModificouCadastro,\r\n  modificaCarregaEstadoFalha,\r\n  showMyLoader,\r\n  validaToken\r\n\r\n} from '../actions/AppActions';\r\n\r\n\r\n\r\n\r\nclass Perfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.limpaFormularioCadastro();\r\n    this.props.showMyLoader(true);\r\n    let userData = this.getToken();\r\n   // console.log(userData);\r\n    userData.then(\r\n      res => {\r\n        //console.log('res');\r\n        //console.log(res);\r\n        if(res == null || res == '' ){\r\n                \r\n          this.props.showMyLoader(false);\r\n          this.props.navigation.navigate('RoutesLogin');\r\n          Alert.alert(\r\n            'Mensagem',\r\n            `Ops, você ainda não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade .`,\r\n            [\r\n              {\r\n                text: 'OK',\r\n                //onPress: () => console.log('clicou'),\r\n                style: 'WARNING',\r\n              },\r\n            ],\r\n            { cancelable: true },\r\n          );\r\n          \r\n        }else{\r\n          this.props.validaToken(res.id, res.token);\r\n          this.props.modificaCarregaEstadoFalha(false);\r\n          this.props.modificaIdUsuario(res.id);\r\n          this.props.modificaEmail(res.email);\r\n          this.props.modificaSenha(res.password);\r\n          this.props.modificaSenhaAntiga(res.password);\r\n          this.props.modificaNome(res.nome);\r\n          this.props.modificaEndereco(res.logradouro);\r\n          this.props.modificaNumero(res.numero);\r\n          this.props.modificaComplemento(res.complemento);\r\n          this.props.modificaPontoReferencia(res.ponto_referencia);\r\n          this.props.modificaEstado(res.uf);\r\n          this.props.modificaCidade(res.cidade);\r\n          this.props.modificaBairro(res.bairro);\r\n          this.props.modificaTelefone(res.telefone);\r\n          this.props.modificaConfirmaSenha(res.password);\r\n          this.props.modificaUsername(res.username);\r\n          this.props.estadosFetch();\r\n          this.props.cidadesFetch(res.uf);\r\n          this.props.bairroFetch(res.cidade);\r\n          this.props.showMyLoader(false);\r\n        }\r\n        \r\n      }\r\n      \r\n    ).catch(error => {\r\n      \r\n      this.props.showMyLoader(false);\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    \r\n    if(typeof  nextProps.is_valid_token != 'undefined') {\r\n      if(typeof  nextProps.usuario != 'undefined') {\r\n          if(nextProps.usuario != ''){\r\n             \r\n              this.props.validaToken(nextProps.usuario.id,nextProps.usuario.token);\r\n              if(nextProps.is_valid_token == 'NOK' ){\r\n                this.storeToken('');\r\n                this.props.setStatusCadastroUsuario('');\r\n                  this.props.navigation.navigate('RoutesLogin');\r\n                  Alert.alert(\r\n                    'Mensagem',\r\n                    `Ops, você não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade.`,\r\n                    [\r\n                      {\r\n                        text: 'OK',\r\n                        //onPress: () => console.log('clicou'),\r\n                        style: 'WARNING',\r\n                      },\r\n                    ],\r\n                    { cancelable: true },\r\n                  );\r\n              }\r\n              //this.props.setStatusCadastroUsuario(nextProps.usuario);\r\n              //this.props.navigation.navigate('Main');\r\n          \r\n          }\r\n      }  \r\n    }\r\n    if (nextProps.usuario_atualizou_cadastro == true) {\r\n      //console.log('this.props.usuario component will update');\r\n      //console.log(this.props.usuario);\r\n      if (this.props.usuario != \"\") {\r\n        this.storeToken(this.props.usuario);\r\n        this.props.modificaUsuarioModificouCadastro(false);\r\n        //console.log(this.props.usuario);\r\n        //this.props.estadosFetch();\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Perfil\",\r\n      headerTintColor: Color.headerBarTitle,\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar,\r\n        fontWeight: 'bold'\r\n      },\r\n      headerTitleStyle: {\r\n        fontWeight: 'bold',\r\n      },\r\n    };\r\n  }\r\n\r\n\r\n  async storeToken(user) {\r\n    try {\r\n      await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n      //console.log('setou o usuario na sessão');\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n    }\r\n  }\r\n  async getToken() {\r\n    try {\r\n      let userData = await AsyncStorage.getItem(\"userData\");\r\n      let data = JSON.parse(userData);\r\n      //console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  _cadastraUsuario() {\r\n    const params = {\r\n      nome: this.props.nome,\r\n      email: this.props.email,\r\n      senha: this.props.senha\r\n    };\r\n\r\n    this.props.cadastraUsuario(params);\r\n  }\r\n  _handleModificaEstado(estado) {\r\n    if (estado != '') {\r\n      this.props.cidadesFetch(estado);\r\n      this.props.modificaEstado(estado);\r\n    } else {\r\n      this.props.modificaEstado(estado);\r\n      this.props.limpaListaCidades();\r\n      this.props.limpaListaBairros();\r\n    }\r\n\r\n  }\r\n\r\n  _handleModificaCidade(cidade) {\r\n    if (cidade != '') {\r\n      this.props.bairroFetch(cidade);\r\n      this.props.modificaCidade(cidade);\r\n    } else {\r\n      this.props.modificaCidade(cidade);\r\n      this.props.limpaListaBairros();\r\n    }\r\n  }\r\n\r\n  _handleCadastraUsuario() {\r\n\r\n    if (this._isValidUser()) {\r\n\r\n\r\n      if (this.props.senha_antiga != '' && this.props.senha_antiga != this.props.senha) {\r\n\r\n        let usuario = {\r\n          Cliente: {\r\n            id: this.props.usuario_id,\r\n            nome: this.props.nome,\r\n            username: this.props.username,\r\n            password: this.props.senha,\r\n            passwordcconfirm: this.props.confirma_senha,\r\n            logradouro: this.props.endereco,\r\n            complemento: this.props.complemento,\r\n            numero: this.props.numero,\r\n            uf: this.props.estado,\r\n            cidade: this.props.cidade,\r\n            bairro: this.props.bairro,\r\n            email: this.props.email,\r\n            telefone: this.props.telefone,\r\n            filial_id: FILIAL,\r\n            salt: SALT,\r\n            empresa_id: EMPRESA,\r\n            ponto_referencia: this.props.ponto_referencia,\r\n          }\r\n        }\r\n        this.props.cadastraUsuarioEditComSenha(usuario);\r\n      } else {\r\n\r\n        let usuario = {\r\n          Cliente: {\r\n            id: this.props.usuario_id,\r\n            nome: this.props.nome,\r\n            username: this.props.username,\r\n            logradouro: this.props.endereco,\r\n            complemento: this.props.complemento,\r\n            numero: this.props.numero,\r\n            uf: this.props.estado,\r\n            cidade: this.props.cidade,\r\n            bairro: this.props.bairro,\r\n            email: this.props.email,\r\n            telefone: this.props.telefone,\r\n            filial_id: FILIAL,\r\n            salt: SALT,\r\n            empresa_id: EMPRESA,\r\n            ponto_referencia: this.props.ponto_referencia,\r\n          }\r\n\r\n        }\r\n        if(this._isValidUser()){\r\n          this.props.cadastraUsuarioEdit(usuario);\r\n        }\r\n        \r\n        \r\n      }\r\n\r\n\r\n    } else {\r\n      //console.log('is invalid user');\r\n    }\r\n\r\n  }\r\n  _isValidUser() {\r\n    if (this.props.nome == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `O nome não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n    if (this.props.username == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `O nome de usuário não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (this.props.telefone == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `O telefone não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (this.props.senha == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `O campo confirme sua senha não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (this.props.senha != this.props.confirma_senha) {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `Os campos senha e confirme sua senha não são iguais.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (this.props.endereco == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `O endereço não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n    if (this.props.estado == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `O estado não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n    if (this.props.cidade == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `A cidade não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n    if (this.props.bairro == '') {\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `O bairro não pode ficar em branco.`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n\r\n\r\n    let estates = this.props.lista_estados.map((v, k) => {\r\n\r\n      return (\r\n        <Picker.Item label={v.Estado.estado} value={v.Estado.id} key={k} />\r\n      );\r\n    });\r\n\r\n    let cities = this.props.lista_cidades.map((v, k) => {\r\n\r\n      return (\r\n        <Picker.Item label={v.Cidad.cidade} value={v.Cidad.id} key={k} />\r\n      );\r\n    });\r\n\r\n    let neigborhood = this.props.lista_bairros.map((v, k) => {\r\n\r\n      return (\r\n        <Picker.Item label={v.Bairro.bairro} value={v.Bairro.id} key={k} />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <KeyboardAwareScrollView\r\n        enableAutomaticScroll\r\n        extraScrollHeight={10}\r\n        enableOnAndroid={true}\r\n        resetScrollToCoords={{ x: 0, y: 0 }}\r\n        extraHeight={Platform.select({ android: 200 })}\r\n        contentContainerStyle={styles.grid}\r\n      >\r\n\r\n      \r\n      <ScrollView>\r\n        <View >\r\n          <View style={styles.contentBody}>\r\n\r\n            {\r\n              (this.props.carrega_estado_falha == true) ? (\r\n                <View style={{\r\n                  opacity: 1.0,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  flexDirection: 'column',\r\n                  padding: 50\r\n\r\n                }} >\r\n                  <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'}  size={200} color={Color.tintColor} />\r\n                  <Text style={{ fontSize: 18 }}>Ops!</Text>\r\n                  <Text style={{ fontSize: 15 }}>Houve uma falha ao carregar seu cadastro.</Text>\r\n                  <Text style={{ fontSize: 15 }}>Tente novamente mais tarde!</Text>\r\n                </View>\r\n              ) : (\r\n\r\n                  <View>\r\n                    <Input\r\n                      value={this.props.nome}\r\n\r\n                      label=\"Nome\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaNome(texto)} />\r\n                    \r\n                    <Input\r\n                      value={this.props.telefone}\r\n\r\n                      label=\"Telefone\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaTelefone(texto)} />\r\n                    <Input\r\n                      value={this.props.email}\r\n                      label=\"E-mail\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaEmail(texto)} />\r\n\r\n                    <Input\r\n                      value={this.props.endereco}\r\n\r\n                      label=\"Endereço\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaEndereco(texto)} />\r\n\r\n                    <Input\r\n                      value={this.props.numero}\r\n\r\n                      label=\"Numero\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaNumero(texto)} />\r\n\r\n                    <Input\r\n                      value={this.props.complemento}\r\n\r\n                      label=\"Complemento\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaComplemento(texto)} />\r\n\r\n                    <Input\r\n                      value={this.props.ponto_referencia}\r\n\r\n                      label=\"Ponto de Referência\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaPontoReferencia(texto)} />\r\n\r\n                    <View style={{ padding: 10, marginTop: 10 }}>\r\n                      <Text style={{ textAlign: 'center', fontSize: 16, fontWeight: 'bold' }}>Observação:</Text>\r\n                      <Text style={{ textAlign: 'center', fontSize: 16 }}>Só aparecerão os bairros cobertos pela entrega.</Text>\r\n                    </View>\r\n                    <View style={{ flexDirection: 'row', padding: 10 }}>\r\n\r\n\r\n                      <Text style={{\r\n                        fontSize: 16, flex: 1,\r\n                        color: Color.formCadastroSelect\r\n                      }}>Estado</Text>\r\n\r\n                      <Picker\r\n                        selectedValue={this.props.estado}\r\n                        style={{ height: 22, width: 200, flex: 1, justifyContent: \"center\", marginBottom: 16 }}\r\n                        onValueChange={(itemValue, itemIndex) => this._handleModificaEstado(itemValue)}\r\n                      >\r\n                        <Picker.Item label=\"Selecione\" value=\"\" key=\"-1\" />\r\n                        {estates}\r\n\r\n                      </Picker>\r\n                    </View>\r\n\r\n                    <View style={{ flexDirection: 'row', padding: 10 }}>\r\n                      <Text style={{\r\n                        fontSize: 16, flex: 1,\r\n                        color: Color.formCadastroSelect\r\n                      }}>Cidade</Text>\r\n\r\n                      <Picker\r\n                        selectedValue={this.props.cidade}\r\n                        style={{ height: 22, width: 200, flex: 1, justifyContent: \"center\", marginBottom: 16 }}\r\n                        onValueChange={(itemValue, itemIndex) => this._handleModificaCidade(itemValue)}\r\n                      >\r\n                        <Picker.Item label=\"Selecione\" value=\"\" key=\"-1\" />\r\n                        {cities}\r\n\r\n                      </Picker>\r\n                    </View>\r\n                    <View style={{ flexDirection: 'row', padding: 10 }}>\r\n                      <Text style={{\r\n                        fontSize: 16, flex: 1,\r\n                        color: Color.formCadastroSelect\r\n                      }}>Bairro</Text>\r\n\r\n                      <Picker\r\n                        selectedValue={this.props.bairro}\r\n                        style={{ height: 22, width: 200, flex: 1, justifyContent: \"center\", marginBottom: 16 }}\r\n                        onValueChange={(itemValue, itemIndex) => this.props.modificaBairro(itemValue)}\r\n                      >\r\n                        <Picker.Item label=\"Selecione\" value=\"\" key=\"-1\" />\r\n                        {neigborhood}\r\n\r\n                      </Picker>\r\n                    </View>\r\n\r\n                    <Input\r\n                      value={this.props.username}\r\n                      //placeholder=\"Nome\" \r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaUsername(texto)}\r\n                      label='Nome de Usuário'\r\n                      disabled={true}\r\n                    />\r\n\r\n                    <Input\r\n                      value={this.props.senha}\r\n                      secureTextEntry\r\n                      label=\"Senha\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      containerStyle={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaSenha(texto)} />\r\n\r\n                    <Input\r\n                      value={this.props.confirma_senha}\r\n                      secureTextEntry\r\n                      label=\"Confirme a Senha\"\r\n                      //placeholderTextColor=\"#fff\" \r\n                      stylcontainerStylee={styles._bodyInputText}\r\n                      onChangeText={texto => this.props.modificaConfirmaSenha(texto)} />\r\n\r\n\r\n\r\n                    <Text style={styles.txtMsgErro}>{this.props.msgErroCadastro}</Text>\r\n\r\n                    <Button title=\"Cadastrar\"\r\n                       color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n                      disabled={this.props.show_loader}\r\n                      onPress={() => this._handleCadastraUsuario()} />\r\n                  </View>\r\n\r\n                )\r\n            }\r\n\r\n\r\n          </View>\r\n\r\n        </View>\r\n        {\r\n          this.props.show_loader == true ? (\r\n            <View\r\n              style={{\r\n\r\n                flexDirection: 'column',\r\n                opacity: 1.0,\r\n                width: '100%',\r\n\r\n                //alignItems: 'center',\r\n                //flex: 1,\r\n                alignSelf: 'center',\r\n                position: 'absolute',\r\n                marginTop: '50%',\r\n                marginLeft: '50%',\r\n                width: '100%',\r\n                //height:'100%',\r\n                alignContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <ActivityIndicator style={{ flex: 1, alignItems: 'center' }} size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                animating={true}\r\n                hidesWhenStopped={true}\r\n\r\n              />\r\n            </View>\r\n          ) : (\r\n              <View\r\n                style={{\r\n\r\n                  flexDirection: 'column',\r\n                  opacity: 0.0,\r\n                  width: '100%',\r\n                  //height:'100%',\r\n                  //alignItems: 'center',\r\n                  //flex: 1,\r\n                  alignSelf: 'center',\r\n                  alignContent: 'center',\r\n                  position: 'absolute',\r\n                  marginTop: '50%',\r\n                  marginLeft: '50%',\r\n                  width: '100%',\r\n                  alignItems: 'center',\r\n\r\n                }}\r\n              >\r\n                <ActivityIndicator style={{ flex: 1, alignItems: 'center' }} size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n            )\r\n        }\r\n        <View style={{padding:20}}></View>\r\n      </ScrollView>\r\n      </KeyboardAwareScrollView>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  nome: state.AppReducer.nome,\r\n  email: state.AppReducer.email,\r\n  senha: state.AppReducer.senha,\r\n  cep: state.AppReducer.cep,\r\n  endereco: state.AppReducer.endereco,\r\n  numero: state.AppReducer.numero,\r\n  complemento: state.AppReducer.complemento,\r\n  ponto_referencia: state.AppReducer.ponto_referencia,\r\n  estado: state.AppReducer.estado,\r\n  cidade: state.AppReducer.cidade,\r\n  bairro: state.AppReducer.bairro,\r\n  telefone: state.AppReducer.telefone,\r\n  cadastro_usuario: state.AppReducer.cadastro_usuario,\r\n  confirma_senha: state.AppReducer.confirma_senha,\r\n  usuario: state.AppReducer.usuario,\r\n  msgErroCadastro: state.AppReducer.msgErroCadastro,\r\n  loadingCadastro: state.AppReducer.loadingCadastro,\r\n  lista_bairros: state.AppReducer.lista_bairros,\r\n  lista_cidades: state.AppReducer.lista_cidades,\r\n  lista_estados: state.AppReducer.lista_estados,\r\n  carrega_cidade_falha: state.AppReducer.carrega_cidade_falha,\r\n  carrega_estado_falha: state.AppReducer.carrega_estado_falha,\r\n  carrega_bairro_falha: state.AppReducer.carrega_bairro_falha,\r\n  show_loader: state.AppReducer.show_loader,\r\n  cadastro_usuario_sucesso: state.AppReducer.cadastro_usuario_sucesso,\r\n  usuario: state.AppReducer.usuario,\r\n  username: state.AppReducer.username,\r\n  usuario_id: state.AppReducer.usuario_id,\r\n  senha_antiga: state.AppReducer.senha_antiga,\r\n  usuario_atualizou_cadastro: state.AppReducer.usuario_atualizou_cadastro,\r\n  is_valid_token:state.AppReducer.is_valid_token\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  modificaEmail,\r\n  modificaSenha,\r\n  modificaNome,\r\n  cadastraUsuario,\r\n  modificaCep,\r\n  modificaEndereco,\r\n  modificaNumero,\r\n  modificaComplemento,\r\n  modificaPontoReferencia,\r\n  modificaEstado,\r\n  modificaCidade,\r\n  modificaBairro,\r\n  modificaTelefone,\r\n  modificaConfirmaSenha,\r\n  estadosFetch,\r\n  cidadesFetch,\r\n  bairroFetch,\r\n  limpaListaCidades,\r\n  limpaListaBairros,\r\n  limpaListaEstados,\r\n  cadastraUsuario,\r\n  setStatusCadastroUsuario,\r\n  limpaFormularioCadastro,\r\n  modificaUsername,\r\n  modificaSenhaAntiga,\r\n  modificaIdUsuario,\r\n  cadastraUsuarioEdit,\r\n  cadastraUsuarioEditComSenha,\r\n  modificaUsuarioModificouCadastro,\r\n  modificaCarregaEstadoFalha,\r\n  showMyLoader,\r\n  validaToken\r\n})(Perfil);\r\n\r\nconst styles = StyleSheet.create({\r\n  grid: {\r\n    //flex: 1,\r\n    padding: 20,\r\n    marginTop: 8,\r\n    marginBottom: 400,\r\n  },\r\n  contentBody: {\r\n    //flex: 4,\r\n    justifyContent: 'center',\r\n\r\n  },\r\n  _bodyInputText: {\r\n    flex: 1,\r\n    //marginBottom:5,\r\n    //marginTop:10,\r\n    //fontSize: 20,\r\n    //height: 45,\r\n    //color: '#fafafa'\r\n  },\r\n  contentFooter: {\r\n    //flex: 1\r\n  },\r\n  txtMsgErro: {\r\n    fontSize: 18,\r\n    //color: '#ff0000'\r\n  }\r\n});","import React, {Component} from 'react';\r\nimport {View, Button, Platform} from 'react-native';\r\nimport Color from \"../../constants/Colors\";\r\nexport default class BtnEscolha extends Component{\r\n    \r\n    render(){\r\n        return (\r\n            <View style={this.props.styleBtn}>\r\n              <Button \r\n                title={this.props.title} \r\n                onPress={this.props.jokenpo}\r\n                color={Platform.OS === 'ios' ? Color.buttonIos : Color.button}\r\n                disabled={this.props.disabled}\r\n              ></Button>\r\n            </View>\r\n        )\r\n    }\r\n    \r\n}","import React from 'react'\r\nimport {Image, Text, View, StyleSheet} from 'react-native'\r\n\r\nlet styles = StyleSheet.create({\r\n    btnEscolha: {\r\n      width: 90\r\n    },\r\n    painelAcoes:{\r\n      flexDirection: 'row',\r\n      justifyContent:'space-between',\r\n      marginTop:20\r\n    },\r\n    palco:{\r\n      alignItems:'center',\r\n      \r\n    },\r\n    txtResultado:{\r\n      fontSize: 25,\r\n      fontWeight:'bold',\r\n      color:'red',\r\n      height: 60\r\n    },\r\n    image:{\r\n        marginTop: 10\r\n    }\r\n})\r\nexport default props => {\r\n    return (\r\n        <View style={styles.palco}>\r\n            <Text>{props.texto}: </Text>\r\n            <Image  source={props.imagemUsuario} style={styles.image}  />\r\n        </View>\r\n        \r\n    )\r\n} \r\n   ","import React, { Component } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Image,\r\n    Platform,\r\n    Button,\r\n    Alert,\r\n    ActivityIndicator,\r\n    ScrollView\r\n} from \"react-native\";\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { categoriasFetch, showMyLoader,validaToken,categoriasFetchInterval, showMyLoaderCategory, entrarJokenpo, setStatusCadastroUsuario, modificaIniciouPartida, verificasaldo, modificaSaldo } from '../actions/AppActions';\r\nimport CartButton from \"./common/CartButton\";\r\nimport Color from \"../../constants/Colors\";\r\nimport  BtnEscolha  from './Escolha';\r\nimport  Icone  from './IconeJokenpo';\r\n\r\nclass MenuReward extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //this.storeToken('')\r\n        let userData = this.getToken();\r\n        userData.then(resp => {\r\n            //console.log(resp);\r\n            if(resp == null || resp == ''){\r\n                \r\n                this.props.showMyLoader(false);\r\n                this.props.navigation.navigate('RoutesLogin');\r\n                Alert.alert(\r\n                  'Mensagem',\r\n                  `Ops, você ainda não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade .`,\r\n                  [\r\n                    {\r\n                      text: 'OK',\r\n                      //onPress: () => console.log('clicou'),\r\n                      style: 'WARNING',\r\n                    },\r\n                  ],\r\n                  { cancelable: true },\r\n                );\r\n                \r\n            }else{\r\n                if(typeof resp.token != 'undefined'){   \r\n                    this.props.setStatusCadastroUsuario(resp);\r\n                    this.props.modificaSaldo(0);\r\n                    this.props.verificasaldo(this.props.usuario.id, this.props.usuario.token );\r\n                    this.props.validaToken(this.props.usuario.id, this.props.usuario.token);\r\n                    //this.props.validaToken(res.id,res.token);\r\n                    //this.props.navigation.navigate('Main');\r\n                }    \r\n            }\r\n             \r\n        });\r\n        //console.log(this.props);\r\n        \r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n      //  console.log(nextProps);\r\n        if(typeof  nextProps.is_valid_token != 'undefined') {\r\n            if(typeof  nextProps.usuario != 'undefined') {\r\n                if(nextProps.usuario != ''){\r\n                    if(nextProps.usuario){\r\n                        //this.props.validaToken(nextProps.usuario.id,nextProps.usuario.token);\r\n                        if(nextProps.is_valid_token == 'NOK' ){\r\n                          this.storeToken('');\r\n                          this.props.setStatusCadastroUsuario('');\r\n                            this.props.navigation.navigate('RoutesLogin');\r\n                            Alert.alert(\r\n                              'Mensagem',\r\n                              `Ops, você não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade.`,\r\n                              [\r\n                                {\r\n                                  text: 'OK',\r\n                                  //onPress: () => console.log('clicou'),\r\n                                  style: 'WARNING',\r\n                                },\r\n                              ],\r\n                              { cancelable: true },\r\n                            );\r\n                        }\r\n                        //this.props.setStatusCadastroUsuario(nextProps.usuario);\r\n                        //this.props.navigation.navigate('Main');\r\n                    }\r\n                }\r\n            }  \r\n          }\r\n        if(typeof  nextProps.iniciou_partida != 'undefined') {\r\n            if(nextProps.iniciou_partida == true){\r\n                this.props.navigation.navigate(\"Jokenpo\");\r\n                this.props.modificaIniciouPartida(false);\r\n\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.modificaIniciouPartida(false);\r\n    }\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            headerTitle: \"Recompensas\",\r\n            headerStyle: {\r\n                elevation: 0,\r\n                shadowOpacity: 0,\r\n                backgroundColor: Color.headerBar\r\n            },\r\n            \r\n            headerRight: (\r\n                <CartButton\r\n                  onPress={() => {\r\n                    navigation.navigate(\"Cart\");\r\n                  }}\r\n                />\r\n            ),\r\n            headerTitleStyle: {\r\n                color: Color.headerBarTitle,\r\n                fontWeight:'bold'\r\n              },\r\n            \r\n        };\r\n    }\r\n    async storeToken(user) {\r\n        try {\r\n           await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n        } catch (error) {\r\n          //console.log(\"Something went wrong\", error);\r\n        }\r\n    }\r\n    async getToken() {\r\n        try {\r\n          let userData = await AsyncStorage.getItem(\"userData\");\r\n          let data = JSON.parse(userData);\r\n          //console.log(data);\r\n          return data;\r\n        } catch (error) {\r\n          //console.log(\"Something went wrong\", error);\r\n          return false;\r\n        }\r\n    }\r\n    handleGotoJokenpo(){\r\n        this.props.entrarJokenpo(this.props.usuario.id, this.props.usuario.token );\r\n    }\r\n    gotoJokenpo(){\r\n        Alert.alert(\r\n            'Jogar',\r\n            `Deseja mesmo jogar uma partida de pedra, papel e tesoura? Isto poderá te custar 10 moedas.`,\r\n            [\r\n              {\r\n                text: 'Sim',\r\n                onPress: () => this.handleGotoJokenpo(),\r\n              },\r\n              {\r\n                text: 'Não',\r\n                //onPress: () => this.props.showMyLoader(false),\r\n                style: 'cancel',\r\n              },\r\n            ],\r\n            { cancelable: false },\r\n          );\r\n          \r\n        \r\n    }\r\n    gotoMyGifts(){\r\n        \r\n        this.props.navigation.navigate(\"MyGifts\", { user_id: this.props.usuario.id });\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <ScrollView >\r\n                {\r\n                this.props.show_loader == true ? (\r\n                    <View\r\n                    style={{\r\n\r\n\r\n                        opacity: 1.0,\r\n                        width: '100%',\r\n\r\n                        alignItems: 'center',\r\n                        flex: 1,\r\n                        position: 'absolute',\r\n                        marginTop: '50%'\r\n                    }}\r\n                    >\r\n                    <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                        animating={true}\r\n                        hidesWhenStopped={true}\r\n\r\n                    />\r\n                    </View>\r\n\r\n                ) : (\r\n                    <View\r\n                        style={{\r\n\r\n\r\n                        opacity: 0.0,\r\n                        width: '100%',\r\n\r\n                        alignItems: 'center',\r\n                        flex: 1,\r\n                        position: 'absolute',\r\n                        marginTop: '50%'\r\n                        }}\r\n                    >\r\n                        <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                        animating={true}\r\n                        hidesWhenStopped={true}\r\n\r\n                        />\r\n                    </View>\r\n\r\n\r\n\r\n                    )\r\n                }\r\n                \r\n                <View style={{flexDirection:'row'}}> \r\n                    <Image source={require('../../assets/images/jokenpo.png')} style={{flex:1}}/>\r\n                </View>\r\n                <View style={{alignContent:'center', padding:20}}>\r\n                    <View style={{flexDirection:'row', alignItems:'center'}}>\r\n                        <View style={{flex:1, padding:5}}> \r\n                            <Text style={{\r\n                                fontSize:50, \r\n                                color:Color.text, \r\n                                \r\n                                paddingLeft:30,\r\n                                textAlign:'center'\r\n                                }}>\r\n                                Suas Moedas\r\n                            </Text>\r\n                        </View>\r\n                    \r\n                    </View>\r\n                    <View style={{\r\n                        flexDirection:'row', \r\n                        alignSelf:'center', \r\n                        paddingLeft:20, paddingRight:20}}>\r\n                        <View style={{flexDirection:'row', alignItems:'center'}}>\r\n                            <View style={{ padding:5, alignItems:'flex-end'}}> \r\n                                <Text style={{fontSize:70, color:Color.text}}>\r\n                                    {this.props.saldo}\r\n                                </Text>\r\n                            </View>\r\n                            <View style={{ alignItems:'flex-start'}}> \r\n                                <Image style={{ width:65, height:60 }} source={require('../../assets/images/PngItem_5107354.png')} />\r\n                            </View>\r\n                        </View>\r\n                        \r\n                    </View>\r\n                </View>\r\n                \r\n                <View style={{flexDirection:'row', alignSelf:'center'}}>\r\n                    <View style={{padding:10}}>\r\n                        <Button\r\n                            onPress={e => this.gotoJokenpo() } \r\n                            title=\"Jogar Jokenpo (custa 10 moedas)\"\r\n                            color={Platform.OS === 'ios' ? Color.buttonIos : Color.button}\r\n                            style={{\r\n                                flex:1,\r\n                                paddingLeft: 16,\r\n                                paddingRight: 16,\r\n                                paddingTop: 8,\r\n                                paddingBottom: 8,\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View style={{flexDirection:'row', alignSelf:'center'}}>\r\n                    <View style={{padding:10}}>\r\n                        <Button\r\n                            onPress={e => this.gotoMyGifts() } \r\n                            title=\"Resgatar Suas Recompensas\"\r\n                            color={Platform.OS === 'ios' ? Color.buttonIos : Color.button}\r\n                            style={{\r\n                                flex:1,\r\n                                paddingLeft: 16,\r\n                                paddingRight: 16,\r\n                                paddingTop: 8,\r\n                                paddingBottom: 8,\r\n                            \r\n                            }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View style={{flexDirection:'row', alignItems:'center'}}>\r\n                        <View style={{flex:1, padding:5}}> \r\n                            <Text style={{\r\n                                fontSize:20, \r\n                                color:Color.text,     \r\n                                paddingLeft:30,\r\n                                textAlign:'center',\r\n                                fontWeight:'bold'\r\n                                }}>\r\n                                    {'\\n'}\r\n                                    Observações.\r\n                            </Text>\r\n                            <Text style={{\r\n                                fontSize:15, \r\n                                color:Color.text, \r\n                                \r\n                                paddingLeft:30,\r\n                                textAlign:'center'\r\n                                }}>\r\n                                \r\n                                * Fique atento(a)! Ganhando ou perdendo a partida, será disponibilizada uma recompensa ao final da mesma. Então aproveite!\r\n                                {'\\n'}\r\n                               \r\n                                ** Observe a data de validade da sua recompensa, após a este prazo, a mesma não estará mais disponível para o resgate!\r\n                                {'\\n'}\r\n                                *** A cada R$ 25,00 em compras por este aplicativo, você ganha uma moeda. O limite máximo acumulativo, é de 10 moedas, quando se atinge este limite, as mesmas não são mais somadas à sua conta e também não se acumula mais saldo de compras.\r\n                                {'\\n'}\r\n                                \r\n                            </Text>\r\n                        </View>\r\n                    \r\n                    </View>\r\n                <View style={{padding:30}}></View>\r\n            </ScrollView>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nlet styles = StyleSheet.create({\r\n    btnEscolha: {\r\n      width: 90\r\n    },\r\n    painelAcoes:{\r\n      flexDirection: 'row',\r\n      justifyContent:'space-between',\r\n      marginTop:20\r\n    },\r\n    palco:{\r\n      alignItems:'center',\r\n      marginTop: 20\r\n    },\r\n    txtResultado:{\r\n      fontSize: 25,\r\n      fontWeight:'bold',\r\n      color:'red',\r\n      height: 60\r\n    },\r\n    \r\n  })\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    categorias: state.AppReducer.categorias,\r\n    carrinho: state.AppReducer.carrinho,\r\n    total_carrinho: state.AppReducer.total_carrinho,\r\n    qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n    forma_pagamento: state.AppReducer.forma_pagamento,\r\n    tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n    troco_pedido: state.AppReducer.troco_pedido,\r\n    obs_pedido: state.AppReducer.obs_pedido,\r\n    show_loader: state.AppReducer.show_loader,\r\n    status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n    show_loader_categoria: state.AppReducer.show_loader_categoria,\r\n    categoria_carregada_falha: state.AppReducer.categoria_carregada_falha,\r\n    dados_premio: state.AppReducer.dados_premio,\r\n    iniciou_partida: state.AppReducer.iniciou_partida,\r\n    usuario: state.AppReducer.usuario,\r\n    saldo: state.AppReducer.saldo,\r\n    is_valid_token: state.AppReducer.is_valid_token\r\n});  \r\nconst mapDispatchToProps = dispatch => bindActionCreators({ categoriasFetch,showMyLoader,validaToken,categoriasFetchInterval, showMyLoaderCategory, entrarJokenpo, setStatusCadastroUsuario, modificaIniciouPartida, verificasaldo, modificaSaldo }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuReward);","import React from 'react';\r\nimport { Platform } from 'react-native';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\r\n\r\nimport TabBarIcon from '../components/TabBarIcon';\r\n\r\nimport LinksScreen from '../screens/LinksScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\n\r\nimport Restaurants from '../src/components/Restaurants';\r\nimport Orders from '../src/components/Orders';\r\nimport Profile from '../src/components/Profile';\r\n\r\nimport MenuReward from '../src/components/MenuReward';\r\n\r\n\r\nimport Color from '../constants/Colors';\r\n\r\n\r\nconst config = Platform.select({\r\n  web: { headerMode: 'screen' },\r\n  default: {},\r\n});\r\n\r\nconst HomeStack = createStackNavigator(\r\n  {\r\n    Home: Restaurants,\r\n  },\r\n  config\r\n);\r\n\r\n\r\n\r\n\r\nHomeStack.navigationOptions = {\r\n  tabBarLabel: 'Cardápio',\r\n  tabBarIcon: ({ focused }) => (\r\n    <TabBarIcon\r\n      focused={focused}\r\n      name={\r\n         Platform.OS === 'ios' ? 'ios-list-box' : 'md-list-box' \r\n      }\r\n     \r\n    />\r\n  ),\r\n};\r\n\r\nHomeStack.path = '';\r\n\r\n\r\nconst MenuRewardStack = createStackNavigator(\r\n  {\r\n    MenuReward: MenuReward,\r\n  },\r\n  config\r\n);\r\n\r\nMenuRewardStack.navigationOptions = {\r\n  tabBarLabel: 'Recompensas',\r\n  tabBarIcon: ({ focused }) => (\r\n    <TabBarIcon\r\n      focused={focused}\r\n      name={\r\n         Platform.OS === 'ios' ? 'ios-trophy' : 'md-trophy' \r\n      }\r\n     \r\n    />\r\n  ),\r\n};\r\nMenuRewardStack.path = '';\r\n\r\nconst LinksStack = createStackNavigator(\r\n  {\r\n    Links: Orders,\r\n  },\r\n  config\r\n);\r\n\r\nLinksStack.navigationOptions = {\r\n  tabBarLabel: 'Meus Pedidos',\r\n  tabBarIcon: ({ focused, tintColor }) => (\r\n    <TabBarIcon \r\n    focused={focused} \r\n    name={\r\n      Platform.OS === 'ios' ? 'ios-cart' : 'md-cart' \r\n    } \r\n    \r\n    />\r\n  ),\r\n};\r\n\r\nLinksStack.path = '';\r\n\r\nconst SettingsStack = createStackNavigator(\r\n  {\r\n    Settings: Profile,\r\n  },\r\n  config\r\n);\r\n\r\nSettingsStack.navigationOptions = {\r\n  tabBarLabel: 'Perfil',\r\n  tabBarIcon: ({ focused , tintColor }) => (\r\n    <TabBarIcon focused={focused} name={\r\n      Platform.OS === 'ios' ? 'ios-person' : 'md-person' \r\n    }   />\r\n  ),\r\n  \r\n};\r\nSettingsStack.tabBarOptions = {\r\n  inactiveTintColor: Color.tabInactive,\r\n    activeTintColor:Color.tabActive,\r\n}\r\nSettingsStack.path = '';\r\n\r\nconst tabNavigator = createBottomTabNavigator(\r\n  {\r\n    HomeStack,\r\n    LinksStack,\r\n    \r\n    MenuRewardStack,\r\n    SettingsStack,\r\n  },\r\n  {\r\n    tabBarOptions: {\r\n      \r\n      //activeBackgroundColor:Color.tabActive,\r\n      inactiveTintColor: Color.tabInactive,\r\n      activeTintColor:Color.tabActive,\r\n      \r\n      style:{\r\n        backgroundColor:Color.tabBar\r\n        //tintColor:Color.tabActive\r\n      },\r\n      labelStyle: {\r\n        fontSize: 15,\r\n        \r\n      }\r\n    }\r\n    \r\n  }\r\n  );\r\n\r\ntabNavigator.path = '';\r\n\r\nexport default tabNavigator;\r\n","import _ from 'lodash';\r\nimport axios from 'react-native-axios';\r\n\r\nimport { Actions } from 'react-redux';\r\nimport {\r\n    PRODUTO_CARREGADO_OK,\r\n    PRODUTO_CARREGADO_FALHA,\r\n    SHOW_LOADER_PRODUTO\r\n} from './ActionTypes';\r\n\r\nimport {\r\n    APP_URL,\r\n    FILIAL,\r\n    EMPRESA\r\n} from '../Settings'\r\n\r\n\r\n\r\nexport const produtosFetch = (categoria_id) => {\r\n    //alert('aquie2');\r\n    //alert('vkkkkk');\r\n    return dispatch => {\r\n        dispatch({ type: PRODUTO_CARREGADO_OK, payload: [] });\r\n        dispatch({ type: SHOW_LOADER_PRODUTO, payload: true });\r\n        axios.get(`${APP_URL}/RestProdutos/prodsmobilebycat.json?fp=${FILIAL}&cat=${categoria_id}`)\r\n            .then(res => {\r\n                \r\n                if (typeof res.data.produtos != 'undefined') {\r\n                    dispatch({ type: PRODUTO_CARREGADO_OK, payload: res.data.produtos });\r\n                } else {\r\n                    //  console.log('deu erro');\r\n                    dispatch({ type: PRODUTO_CARREGADO_FALHA, payload: false });\r\n                }\r\n\r\n                dispatch({ type: SHOW_LOADER_PRODUTO, payload: false });\r\n            }).catch(error => {\r\n                dispatch({ type: PRODUTO_CARREGADO_FALHA, payload: true });\r\n                dispatch({ type: SHOW_LOADER_PRODUTO, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\nexport const adicionalFetch = () => {\r\n    //alert('aquie2');\r\n    //alert('vkkkkk');\r\n    return dispatch => {\r\n        dispatch({ type: PRODUTO_CARREGADO_OK, payload: [] });\r\n        dispatch({ type: SHOW_LOADER_PRODUTO, payload: true });\r\n        axios.get(`${APP_URL}/RestProdutos/prodsmobilebyadc.json?fp=${FILIAL}`)\r\n            .then(res => {\r\n               // console.log(`${APP_URL}/RestProdutos/prodsmobilebyadc.json?fp=${FILIAL}`);\r\n               // console.log(res.data.produtos );\r\n                if (typeof res.data.produtos != 'undefined') {\r\n                    dispatch({ type: PRODUTO_CARREGADO_OK, payload: res.data.produtos });\r\n                } else {\r\n                    //  console.log('deu erro');\r\n                    dispatch({ type: PRODUTO_CARREGADO_FALHA, payload: false });\r\n                }\r\n\r\n                dispatch({ type: SHOW_LOADER_PRODUTO, payload: false });\r\n            }).catch(error => {\r\n                dispatch({ type: PRODUTO_CARREGADO_FALHA, payload: true });\r\n                dispatch({ type: SHOW_LOADER_PRODUTO, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\nexport const showMyLoaderProduct = (status) => {\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER_PRODUTO, payload: status })\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { setModalVisible, loadInfoModal } from '../../actions/AppActions';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Button,\r\n} from \"react-native\";\r\n//import Modal from \"react-native-modal\";\r\nimport Modal from 'modal-react-native-web';\r\n\r\nclass CustomModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentWillMount() {\r\n        Modal.setAppElement('body');\r\n    }\r\n    render() {\r\n        return (\r\n            <View style={styles.container} >\r\n                <Modal \r\n                visible={this.props.show_modal}\r\n                animationType=\"slide\"\r\n                transparent={false}\r\n                >\r\n                    <View style={styles.modalContent}>\r\n                        <Text style={styles.title}>Ingredientes:</Text>\r\n                        <Text style={styles.text}>{this.props.info_modal}</Text>\r\n                        <Button title=\"Fechar\" style={styles.button} onPress={e => this.props.setModalVisible(false)} />\r\n                    </View>\r\n                </Modal>\r\n            </View>\r\n\r\n        );\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 22\r\n    },\r\n    title: {\r\n        fontSize: 17,\r\n        fontWeight: \"bold\"\r\n    },\r\n    text: {\r\n        marginBottom: 10\r\n    },\r\n    button: {\r\n        backgroundColor: 'lightblue',\r\n        padding: 12,\r\n        margin: 16,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 4,\r\n        borderColor: 'rgba(0, 0, 0, 0.1)',\r\n        marginTop: 10,\r\n    },\r\n    modalContent: {\r\n        backgroundColor: 'white',\r\n        padding: 22,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 4,\r\n        borderColor: 'rgba(0, 0, 0, 0.1)',\r\n        padding: 16\r\n    },\r\n    bottomModal: {\r\n        justifyContent: 'flex-end',\r\n        margin: 0,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    info_modal: state.AppReducer.info_modal,\r\n    show_modal: state.AppReducer.show_modal\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ setModalVisible }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomModal);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Picker,\r\n  TouchableHighlight,\r\n  Platform\r\n} from \"react-native\";\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { Overlay } from 'react-native-elements';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomModal from './common/CustomModal';\r\nimport Color  from '../../constants/Colors';\r\nimport NumberFormat from 'react-number-format';\r\nimport AwesomeAlert from 'react-native-awesome-alerts';\r\n\r\nimport { addToCart, updateItemId, updateCart, setModalVisible, showMyLoader, setStatusCadastroUsuario } from '../actions/AppActions';\r\n\r\nclass ListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let storeData = this.getToken();\r\n    //console.log('storeData');\r\n    //console.log(storeData);\r\n    //console.log('this.props.usuario');\r\n    //console.log(this.props.usuario);\r\n    storeData.then(resp => {\r\n     // console.log(resp);\r\n      if(resp != null){\r\n        if(typeof resp.token != 'undefined'){\r\n            \r\n            this.props.setStatusCadastroUsuario(resp);\r\n            \r\n        }\r\n      }\r\n      \r\n    \r\n    });\r\n    this.state = {\r\n      isClicked: false,\r\n      qtd: 1,\r\n      modalVisible:false,\r\n      showAlert:false,\r\n    };\r\n    //this.props.setModalVisible(true,'teste');\r\n    \r\n    \r\n  }\r\n  async storeToken(user) {\r\n    try {\r\n       await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n    }\r\n}\r\nasync getToken() {\r\n    try {\r\n      let userData = await AsyncStorage.getItem(\"userData\");\r\n      let data = JSON.parse(userData);\r\n      //console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n      return false;\r\n    }\r\n}\r\n  \r\n  handleAddToCart = () => {\r\n    this.props.showMyLoader(true);\r\n    let produto = {\r\n      id: this.props.id,\r\n      nome: this.props.name,\r\n      foto: this.props.image,\r\n      preco_venda: this.props.price,\r\n      descricao: this.props.description,\r\n      parte_compre_ganhe: '',\r\n      qtd: this.state.qtd,\r\n      item_id: this.props.item_id,\r\n      partida_id: this.props.partida_id\r\n    }\r\n    \r\n    this.props.addToCart(produto, this.props.carrinho, this.props.usuario.frete_cadastro);\r\n    this.props.updateItemId(this.props.item_id);\r\n    //this.props.updateCart(this.props.carrinho);\r\n    this.props.showMyLoader(false);\r\n    this.setState({\r\n      isClicked: !this.state.isClicked\r\n    });\r\n    if(this.props.tem_adicional==true){\r\n      \r\n      this.props.handleGoToDishesAdc();\r\n    }\r\n  }\r\n  \r\n  handleClick = () => {\r\n    console.log(this.props);\r\n    if(this.props.usuario==''){\r\n      //this.props.handleGoToLogin();\r\n      \r\n      this.props.handleGoToLogin();\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `Ops, você ainda não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade .`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n    }else{\r\n      this.props.showMyLoader(true);\r\n      //console.log(this.props);\r\n      this.props.handleNaviagation();\r\n      Alert.alert(\r\n        'Adicionar Produto',\r\n        `Deseja mesmo adicionar o produto ${this.props.name} à sua sacola de pedidos?`,\r\n        [\r\n          {\r\n            text: 'Sim',\r\n            onPress: () => this.handleAddToCart(),\r\n          },\r\n          {\r\n            text: 'Não',\r\n            onPress: () => this.props.showMyLoader(false),\r\n            style: 'cancel',\r\n          },\r\n        ],\r\n        { cancelable: false },\r\n      );\r\n    }\r\n    \r\n  };\r\n  showAlert = () => {\r\n    this.setState({\r\n      showAlert: true\r\n    });\r\n  };\r\n \r\n  hideAlert = () => {\r\n    this.setState({\r\n      showAlert: false\r\n    });\r\n  };\r\n  render() {\r\n    \r\n    let preco = this.props.price.toString();\r\n    preco = preco.replace(\".\", \",\");\r\n    return (\r\n      <View>\r\n        <AwesomeAlert\r\n          show={showAlert}\r\n          showProgress={false}\r\n          title=\"AwesomeAlert\"\r\n          message=\"I have a message for you!\"\r\n          closeOnTouchOutside={true}\r\n          closeOnHardwareBackPress={false}\r\n          showCancelButton={true}\r\n          showConfirmButton={true}\r\n          cancelText=\"No, cancel\"\r\n          confirmText=\"Yes, delete it\"\r\n          confirmButtonColor=\"#DD6B55\"\r\n          onCancelPressed={() => {\r\n            this.hideAlert();\r\n          }}\r\n          onConfirmPressed={() => {\r\n            this.hideAlert();\r\n          }}\r\n        />\r\n        <View >\r\n          <View\r\n            elevation={4}\r\n            style={{\r\n              //flex: 1,\r\n              flexDirection: \"row\",\r\n              padding: 10,\r\n              backgroundColor: Color.checkoutContainerBackground,\r\n              marginHorizontal: 10,\r\n              marginVertical: 5,\r\n              borderRadius: 4,\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 2,\r\n              shadowOffset: {\r\n                height: 1,\r\n                width: 1\r\n              }\r\n            }}\r\n          >\r\n            \r\n           <Image\r\n              style={{\r\n                width: 108,\r\n                height: 108,\r\n                //borderRadius: 110/ 2,\r\n                //borderTopLeftRadius: 4,\r\n                //borderTopRightRadius: 0,\r\n                //borderBottomRightRadius: 0,\r\n                //borderBottomLeftRadius: 4,\r\n                flexDirection: \"column\",\r\n                alignSelf: \"center\"\r\n              }}\r\n              //source={{ uri: this.props.image }\r\n              source={{ uri: this.props.image.replace('http://localhost/', 'http://10.0.2.2/') }\r\n              }\r\n            />\r\n            <View\r\n              style={{\r\n                padding: 16,\r\n                flex: 3 \r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 18,\r\n                  color: Color.textFormaPagamento,\r\n                  width: \"100%\"\r\n                }}\r\n              >\r\n                {this.props.name}\r\n              </Text>\r\n              \r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  color: \"#999\",\r\n\r\n                }}\r\n              >\r\n\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"center\",\r\n                  // width: \"100%\",\r\n                }}\r\n              >\r\n                <View style={{ flex: 2 }}>\r\n                  {\r\n                    this.props.partida_id =='' || this.props.partida_id == null ? (\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 18,\r\n                          fontWeight: \"bold\",\r\n                          color: Color.tabActive\r\n                        }}\r\n                      >\r\n                        {this.props.disponivel == 1? (\r\n                          <NumberFormat \r\n                              value={preco } \r\n                              displayType={'text'} \r\n                              renderText={value => <Text>{value}</Text>}\r\n                              thousandSeparator={'.'}\r\n                              decimalScale={2} \r\n                              fixedDecimalScale={true}\r\n                              prefix={'R$ '}\r\n                              decimalSeparator={','}\r\n                          \r\n                          />\r\n                        ):(\r\n                          'N/D'\r\n                        )}\r\n                        \r\n                        \r\n                      </Text>\r\n                    ):(\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 18,\r\n                          fontWeight: \"bold\",\r\n                          color: Color.tabActive,\r\n                          marginBottom:5,\r\n                          textAlign:'center'\r\n                        }}\r\n                      >\r\n                      Validade  {this.props.data_validade}\r\n                        \r\n                        \r\n                      </Text>\r\n                    )\r\n                  }\r\n                  \r\n                </View>\r\n\r\n                {\r\n                this.props.partida_id =='' || this.props.partida_id == null ? \r\n                (\r\n                  <View style={{ \r\n                    //flex: 1 , \r\n                    marginTop:- 9,\r\n                    padding: 5\r\n                    }}  >\r\n                  <Picker\r\n                    selectedValue={this.state.qtd}\r\n                    style={{\r\n                      height: 40, width: 80\r\n                    }}\r\n                    onValueChange={(itemValue, itemIndex) =>\r\n                      this.setState({ qtd: itemValue })\r\n                    }\r\n                    //onPress={e => alert(\"Hey\")}\r\n                /**/>\r\n                    <Picker.Item label=\"1\" value=\"1\" />\r\n                    <Picker.Item label=\"2\" value=\"2\" />\r\n                    <Picker.Item label=\"3\" value=\"3\" />\r\n                    <Picker.Item label=\"4\" value=\"4\" />\r\n                    <Picker.Item label=\"5\" value=\"5\" />\r\n                    <Picker.Item label=\"6\" value=\"6\" />\r\n                    <Picker.Item label=\"7\" value=\"7\" />\r\n                    <Picker.Item label=\"8\" value=\"8\" />\r\n                    <Picker.Item label=\"9\" value=\"9\" />\r\n                    <Picker.Item label=\"10\" value=\"10\" />\r\n                  </Picker>\r\n\r\n                </View>\r\n                )  :\r\n                (\r\n                <View  >\r\n                \r\n\r\n                </View>\r\n                )\r\n                \r\n                }\r\n\r\n                {\r\n\r\n               /**/}\r\n              </View>\r\n              <View style={{ \r\n                flexDirection:'row',\r\n                alignSelf:'center'\r\n              }}>\r\n                <View style={{\r\n                  padding: 1,\r\n                 // flex:1\r\n                }}>\r\n                <Button\r\n                  onPress={e => this.props.setModalVisible(true, this.props.description)}\r\n                  color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n                  title=\"Detalhes\"\r\n                  style={{\r\n                    backgroundColor: Color.button,\r\n                    \r\n                    //paddingLeft: 16,\r\n                    //paddingRight: 16,\r\n                    //paddingTop: 8,\r\n                    //paddingBottom: 8,\r\n                    // flexDirection: \"row\",\r\n                  }}\r\n                />\r\n                </View>\r\n                <View  style={{\r\n                  padding: 1,\r\n                  //flex:1\r\n                }}>\r\n                <Button\r\n              \r\n                  onPress={this.handleClick} \r\n                  color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n                  title=\"Adicionar\"\r\n                  disabled={!this.props.disponivel || this.props.show_loader || (this.state.isClicked==true && this.props.partida_id != '')  }\r\n                  style={{\r\n                    backgroundColor: Color.button,\r\n                    \r\n                    //paddingLeft: 16,\r\n                    //paddingRight: 16,\r\n                    //paddingTop: 8,\r\n                    //paddingBottom: 8,\r\n                    // flexDirection: \"row\",\r\n                  }}\r\n                />\r\n                </View>\r\n              </View>\r\n              \r\n            </View>\r\n\r\n          </View>\r\n          \r\n        </View>\r\n        \r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  item_id: state.AppReducer.item_id,\r\n  \r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  usuario: state.AppReducer.usuario,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ addToCart, updateItemId, updateCart, setModalVisible, showMyLoader, setStatusCadastroUsuario }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Picker,\r\n  TouchableHighlight,\r\n  Platform\r\n} from \"react-native\";\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { Overlay } from 'react-native-elements';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomModal from './common/CustomModal';\r\nimport Color from '../../constants/Colors';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { addToCart, updateItemId, updateCart, setModalVisible, showMyLoader, setStatusCadastroUsuario } from '../actions/AppActions';\r\n\r\nclass ListItemIos extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let storeData = this.getToken();\r\n    \r\n    //console.log('storeData');\r\n    //console.log(storeData);\r\n    storeData.then(resp => {\r\n        //console.log(resp);\r\n        if(resp != null && resp != ''  ){\r\n          if(typeof resp.token != 'undefined'){\r\n              \r\n              this.props.setStatusCadastroUsuario(resp);\r\n              \r\n          }\r\n        }\r\n        \r\n      });\r\n    this.state = {\r\n      isClicked: false,\r\n      qtd: 1,\r\n      modalVisible: false,\r\n    };\r\n    //console.log(this.props);\r\n  }\r\n  async storeToken(user) {\r\n    try {\r\n       await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n    }\r\n}\r\nasync getToken() {\r\n    try {\r\n      let userData = await AsyncStorage.getItem(\"userData\");\r\n      let data = JSON.parse(userData);\r\n      //console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n      return false;\r\n    }\r\n}\r\n\r\n  handleAddToCart = () => {\r\n    this.props.showMyLoader(true);\r\n    let produto = {\r\n      id: this.props.id,\r\n      nome: this.props.name,\r\n      foto: this.props.image,\r\n      preco_venda: this.props.price,\r\n      descricao: this.props.description,\r\n      parte_compre_ganhe: '',\r\n      qtd: this.state.qtd,\r\n      item_id: this.props.item_id,\r\n      partida_id: this.props.partida_id,\r\n    }\r\n    this.setState({\r\n      isClicked: !this.state.isClicked\r\n    });\r\n    this.props.addToCart(produto, this.props.carrinho, this.props.usuario.frete_cadastro);\r\n    this.props.updateItemId(this.props.item_id);\r\n    //this.props.updateCart(this.props.carrinho);\r\n    this.props.showMyLoader(false);\r\n    if(this.props.tem_adicional==true){\r\n      this.props.handleGoToDishesAdc();\r\n    }\r\n  }\r\n  handleClick = () => {\r\n    //console.log('this.props.usuario');\r\n    //console.log(this.props.usuario);\r\n    if(this.props.usuario ==''){\r\n      this.props.handleGoToLogin();\r\n      Alert.alert(\r\n        'Mensagem',\r\n        `Ops, você ainda não está autenticado no aplicativo, por favor, entre com seu usuário para ter acesso a esta funcionalidade .`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            //onPress: () => console.log('clicou'),\r\n            style: 'WARNING',\r\n          },\r\n        ],\r\n        { cancelable: true },\r\n      );\r\n    }else{\r\n      this.props.showMyLoader(true);\r\n      \r\n      this.props.handleNaviagation();\r\n      Alert.alert(\r\n        'Adicionar Produto',\r\n        `Deseja mesmo adicionar o produto ${this.props.name} à sua sacola de pedidos?`,\r\n        [\r\n          {\r\n            text: 'Sim',\r\n            onPress: () => this.handleAddToCart(),\r\n          },\r\n          {\r\n            text: 'Não',\r\n            onPress: () => this.props.showMyLoader(false),\r\n            style: 'cancel',\r\n          },\r\n        ],\r\n        { cancelable: false },\r\n      );\r\n    }\r\n    \r\n  };\r\n  render() {\r\n    \r\n    let preco = this.props.price.toString();\r\n    preco = preco.replace(\".\", \",\");\r\n    return (\r\n      <View>\r\n        <View >\r\n          <View\r\n            elevation={4}\r\n            style={{\r\n              //flex: 1,\r\n              flexDirection: \"row\",\r\n              padding: 10,\r\n              backgroundColor: Color.checkoutContainerBackground,\r\n              marginHorizontal: 10,\r\n              marginVertical: 5,\r\n              borderRadius: 4,\r\n              shadowOpacity: 0.1,\r\n              shadowRadius: 2,\r\n              shadowOffset: {\r\n                height: 1,\r\n                width: 1\r\n              }\r\n            }}\r\n          >\r\n            <View style={{\r\n              flexDirection: \"row\",\r\n              flex: 3\r\n            }}>\r\n              <Image\r\n                style={{\r\n                  width: 108,\r\n                  height: 108,\r\n                  //borderRadius: 110/ 2,\r\n                  //borderTopLeftRadius: 4,\r\n                  //borderTopRightRadius: 0,\r\n                  //borderBottomRightRadius: 0,\r\n                  //borderBottomLeftRadius: 4,\r\n                  flexDirection: \"column\",\r\n                  alignSelf: \"center\"\r\n                }}\r\n                //source={{ uri: this.props.image }\r\n                source={{ uri: this.props.image.replace('http://localhost/', 'http://10.0.2.2/') }\r\n                }\r\n              />\r\n              <View\r\n                style={{\r\n                  padding: 16,\r\n                  flex: 3\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 18,\r\n                    color: Color.textFormaPagamento,\r\n                    width: \"100%\"\r\n                  }}\r\n                >\r\n                  {this.props.name}\r\n                </Text>\r\n\r\n\r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    flexDirection: \"row\",\r\n                    //justifyContent: \"center\",\r\n                    // width: \"100%\",\r\n                  }}\r\n                >\r\n                   {\r\n                    this.props.partida_id =='' || this.props.partida_id == null ? (\r\n                      <Text\r\n                        style={{\r\n                          fontSize: 16,\r\n                          fontWeight: \"bold\",\r\n                          color: Color.tintColor\r\n                        }}\r\n                      >\r\n                        {this.props.disponivel == 1? (\r\n                        <NumberFormat \r\n                            value={preco } \r\n                            displayType={'text'} \r\n                            renderText={value => <Text>{value}</Text>}\r\n                            thousandSeparator={'.'}\r\n                            decimalScale={2} \r\n                            fixedDecimalScale={true}\r\n                            prefix={'R$ '}\r\n                            decimalSeparator={','}\r\n                        \r\n                        />\r\n                      ):(\r\n                        'N/D'\r\n                      )}\r\n\r\n                      </Text>\r\n                    ):(\r\n                      <Text\r\n                      style={{\r\n                        fontSize: 18,\r\n                        fontWeight: \"bold\",\r\n                        color: Color.tintColor,\r\n                        marginBottom:5,\r\n                        textAlign:'center'\r\n                      }}\r\n                    >\r\n                      Validade  {this.props.data_validade}\r\n                        \r\n                        \r\n                      </Text>\r\n                    )}\r\n                  \r\n\r\n                    \r\n                </View>\r\n                  \r\n                <View\r\n                  style={{\r\n                    flex: 1,\r\n                    flexDirection: \"row\",\r\n                    marginTop:this.props.partida_id =='' || this.props.partida_id ==null ? 15: 0,\r\n                    //justifyContent: \"center\",\r\n                    // width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                  onPress={e => this.props.setModalVisible(true, this.props.description)}\r\n                  color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n                  title=\"Detalhes\"\r\n                  style={{\r\n                    backgroundColor: Color.button,\r\n                    flex:1,\r\n                    //paddingLeft: 16,\r\n                    //paddingRight: 16,\r\n                    //paddingTop: 8,\r\n                    //paddingBottom: 8,\r\n                    // flexDirection: \"row\",\r\n                  }}\r\n                />\r\n                <Button\r\n                  onPress={e => this.handleClick() }\r\n                  color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n                  title=\"Adicionar\"\r\n                  disabled={!this.props.disponivel || this.props.show_loader || (this.state.isClicked==true && this.props.partida_id != '')  }\r\n                  style={{\r\n                    backgroundColor: Color.button,\r\n                    flex:1,\r\n                    //paddingLeft: 16,\r\n                    //paddingRight: 16,\r\n                    //paddingTop: 8,\r\n                    //paddingBottom: 8,\r\n                    // flexDirection: \"row\",\r\n                  }}\r\n                />\r\n                </View>\r\n              </View>\r\n              <View style={{\r\n              flex: 1,\r\n              flexDirection:\"row\",\r\n              justifyContent:\"flex-start\",\r\n              alignSelf:\"flex-start\",\r\n              marginTop: 5,\r\n              padding: 10\r\n              \r\n            }}  >\r\n              {\r\n                this.props.partida_id =='' || this.props.partida_id ==null ? (\r\n                  <Picker\r\n                    selectedValue={this.state.qtd}\r\n                    style={{\r\n                      height: 65, width: 30,\r\n                      alignSelf:\"flex-start\",\r\n                      marginTop: -95\r\n                    }}\r\n                    onValueChange={(itemValue, itemIndex) =>\r\n                      this.setState({ qtd: itemValue })\r\n                    }\r\n                                //onPress={e => alert(\"Hey\")}\r\n                            /**/>\r\n                    <Picker.Item label=\"1\" value=\"1\" />\r\n                    <Picker.Item label=\"2\" value=\"2\" />\r\n                    <Picker.Item label=\"3\" value=\"3\" />\r\n                    <Picker.Item label=\"4\" value=\"4\" />\r\n                    <Picker.Item label=\"5\" value=\"5\" />\r\n                    <Picker.Item label=\"6\" value=\"6\" />\r\n                    <Picker.Item label=\"7\" value=\"7\" />\r\n                    <Picker.Item label=\"8\" value=\"8\" />\r\n                    <Picker.Item label=\"9\" value=\"9\" />\r\n                    <Picker.Item label=\"10\" value=\"10\" />\r\n                  </Picker>\r\n                ):(<View></View>)\r\n              }\r\n              \r\n              <Text\r\n                  style={{\r\n                      fontSize: 18,\r\n                      color: Color.textFormaPagamento,\r\n                      height: 120, width: 100\r\n                  }}\r\n              >\r\n                  {this.props.partida_id =='' || this.props.partida_id ==null ? 'Un':''}\r\n              </Text>\r\n              \r\n            </View>\r\n            </View>\r\n\r\n            \r\n          </View>\r\n\r\n        </View>\r\n\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  item_id: state.AppReducer.item_id,\r\n\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  usuario: state.AppReducer.usuario,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ addToCart, updateItemId, updateCart, setModalVisible, showMyLoader, setStatusCadastroUsuario }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItemIos);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Image,\r\n  TouchableOpacity,\r\n  Button,\r\n  Platform,\r\n  BackHandler\r\n} from \"react-native\";\r\nimport { NavigationAction } from 'react-navigation';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { produtosFetch, showMyLoaderProduct } from '../actions/DishesActions';\r\nimport { HeaderBackButton } from 'react-navigation-stack';\r\nimport Constants from \"../utils/constants\";\r\nimport foodData from \"../food-data.json\";\r\nimport ListItem from \"./ListItem\";\r\nimport CartButton from \"./common/CartButton\";\r\nimport CustomModal from \"../components/common/CustomModal\";\r\nimport Color from \"../../constants/Colors\";\r\nimport ListItemIos from \"./ListItemIos\";\r\n\r\n\r\n\r\n\r\nclass Dishes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.produtosFetch(this.props.navigation.getParam('categoria_id'));\r\n    this.handleBackButtonClick = this.handleBackButtonClick.bind(this);\r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Produtos\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor:Color.headerBar\r\n      },\r\n      //headerLeft: <TouchableOpacity onPress={() => navigation.navigate(\"Main\") }><Image source={require('react-navigation-stack/src/views/assets/back-icon.png')} style={{marginTop: 10, marginLeft:10}} /></TouchableOpacity>,\r\n      headerLeft: <HeaderBackButton onPress={() => navigation.navigate(\"Main\")}  tintColor={Color.headerBarTitle}  />,\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      ),\r\n    };\r\n  };\r\n\r\n  handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"Dishes\");\r\n  };\r\n  \r\n  UNSAFE_componentWillMount() {\r\n      BackHandler.addEventListener('hardwareBackPress', this.handleBackButtonClick);\r\n  }\r\n\r\n  UNSAFE_componentWillUnmount() {\r\n      BackHandler.removeEventListener('hardwareBackPress', this.handleBackButtonClick);\r\n  }\r\n\r\n  handleBackButtonClick() {\r\n      this.props.navigation.navigate(\"Main\");\r\n      //NavigationAction.back();\r\n      return true;\r\n  }\r\n\r\n  handleGoToLogin  = () => {\r\n    //alert('dsfda');\r\n    this.props.navigation.navigate(\"RoutesLogin\");\r\n    //NavigationAction.back();\r\n    //return true;\r\n  }\r\n  handleGoToDishesAdc  = () => {\r\n    //alert('dsfda');\r\n    this.props.navigation.navigate(\"DishesAdc\",{ categoria_id: this.props.navigation.getParam('categoria_id') });\r\n    \r\n    //NavigationAction.back();\r\n    //return true;\r\n  }\r\n  \r\n  render() {\r\n    \r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <CustomModal />\r\n        {\r\n          this.props.produtos.length == 0  && this.props.show_loader_produto == false ? (<View style={{\r\n            opacity: 1.0,\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            flexDirection:'column',\r\n            padding:50\r\n            \r\n          }} >\r\n            <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'}  size={200} color={Color.tintColor} />\r\n            <Text style={{fontSize:18 , textAlign:'center'}}>Ops!</Text>\r\n            <Text style={{fontSize:15, textAlign:'center'}}>Não existem produtos cadastrados nesta categoria.</Text>\r\n            \r\n          </View>):(\r\n            <View></View>\r\n          )\r\n        }\r\n        {\r\n          this.props.produto_carregado_falha == true && this.props.show_loader_produto == false ? (\r\n            <View style={{\r\n              opacity: 1.0,\r\n              alignItems:'center',\r\n              justifyContent:'center',\r\n              flexDirection:'column',\r\n              padding:50\r\n              \r\n            }} >\r\n              <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'} size={200} color={Color.tintColor} />\r\n              <Text style={{fontSize:18}}>Ops!</Text>\r\n              <Text style={{fontSize:15}}>Houve uma falha ao carregar o menu.</Text>\r\n              <Text style={{fontSize:15}}>Tente novamente mais tarde!</Text>\r\n            </View>\r\n            \r\n          ):(\r\n            Platform.OS === 'ios' ? (\r\n              <FlatList\r\n                data={this.props.produtos}\r\n                keyExtractor={item => item.Produto.id_sec.toString()}\r\n                renderItem={({ item }) => (\r\n                  \r\n                  <ListItemIos\r\n                    id={item.Produto.id}\r\n                    name={item.Produto.nome}\r\n                    image={item.Produto.foto}\r\n                    cuisine={item.Produto.nome}\r\n                    price={item.Produto.preco_venda}\r\n                    description={item.Produto.descricao}\r\n                    isVegetarian={item.Produto.parte_compre_ganhe}\r\n                    disponivel={item.Produto.disponivel}\r\n                    handleNaviagation={this.handleNaviagation}\r\n                    handleGoToLogin={this.handleGoToLogin}\r\n                    handleGoToDishesAdc={this.handleGoToDishesAdc}\r\n                    partida_id=''\r\n                    data_validade=''\r\n                    tem_adicional={item.Produto.tem_adicional}\r\n                  />\r\n                )}\r\n              />\r\n            ):(\r\n              <FlatList\r\n              data={this.props.produtos}\r\n              keyExtractor={item => item.Produto.id_sec.toString()}\r\n              renderItem={({ item }) => (\r\n                \r\n                <ListItem\r\n                  id={item.Produto.id}\r\n                  name={item.Produto.nome}\r\n                  image={item.Produto.foto}\r\n                  cuisine={item.Produto.nome}\r\n                  price={item.Produto.preco_venda}\r\n                  description={item.Produto.descricao}\r\n                  isVegetarian={item.Produto.parte_compre_ganhe}\r\n                  disponivel={item.Produto.disponivel}\r\n                  handleNaviagation={this.handleNaviagation}\r\n                  handleGoToLogin={this.handleGoToLogin}\r\n                  handleGoToDishesAdc={this.handleGoToDishesAdc}\r\n                  partida_id=''\r\n                  data_validade=''\r\n                  tem_adicional={item.Produto.tem_adicional}\r\n                />\r\n              )}\r\n            />\r\n            )\r\n             \r\n             \r\n          )\r\n        }\r\n        {\r\n          this.props.show_loader_produto == true ? (\r\n            <View\r\n                style={{\r\n\r\n\r\n                  opacity: 1.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n          ):(\r\n            <View\r\n                style={{\r\n\r\n\r\n                  opacity: 0.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n          )\r\n        }\r\n        \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    marginBottom: 8\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  produtos: state.DishesReducer.produtos,\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n  show_loader_produto: state.DishesReducer.show_loader_produto,\r\n  produto_carregado_falha: state.DishesReducer.produto_carregado_falha\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({produtosFetch, showMyLoaderProduct}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishes);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Image,\r\n  TouchableOpacity,\r\n  Button,\r\n  Platform,\r\n  BackHandler\r\n} from \"react-native\";\r\nimport { NavigationAction } from 'react-navigation';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { adicionalFetch, showMyLoaderProduct } from '../actions/DishesActions';\r\nimport { HeaderBackButton } from 'react-navigation-stack';\r\nimport Constants from \"../utils/constants\";\r\nimport foodData from \"../food-data.json\";\r\nimport ListItem from \"./ListItem\";\r\nimport CartButton from \"./common/CartButton\";\r\nimport CustomModal from \"../components/common/CustomModal\";\r\nimport Color from \"../../constants/Colors\";\r\nimport ListItemIos from \"./ListItemIos\";\r\n\r\n\r\n\r\n\r\nclass DishesAdc extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.adicionalFetch();\r\n    this.handleBackButtonClick = this.handleBackButtonClick.bind(this);\r\n    //alert(this.props.navigation.getParam('categoria_id'));\r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Adicionais\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor:Color.headerBar\r\n      },\r\n      //headerLeft: <TouchableOpacity onPress={() => navigation.navigate(\"Main\") }><Image source={require('react-navigation-stack/src/views/assets/back-icon.png')} style={{marginTop: 10, marginLeft:10}} /></TouchableOpacity>,\r\n      headerLeft: <HeaderBackButton onPress={() => navigation.navigate(\"Main\")}  \r\n      //tintColor={Color.headerBarTitle} \r\n       />,\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      ),\r\n    };\r\n  };\r\n\r\n  handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"DishesAdc\");\r\n  };\r\n  \r\n  UNSAFE_componentWillMount() {\r\n      BackHandler.addEventListener('hardwareBackPress', this.handleBackButtonClick);\r\n  }\r\n\r\n  UNSAFE_componentWillUnmount() {\r\n      BackHandler.removeEventListener('hardwareBackPress', this.handleBackButtonClick);\r\n  }\r\n\r\n  handleBackButtonClick() {\r\n      this.props.navigation.navigate(\"Main\");\r\n      //NavigationAction.back();\r\n      return true;\r\n  }\r\n\r\n  handleGoToLogin  = () => {\r\n    //alert('dsfda');\r\n    this.props.navigation.navigate(\"RoutesLogin\");\r\n    //NavigationAction.back();\r\n    //return true;\r\n  }\r\n\r\n  handleGoToDishes  = () => {\r\n    //alert('dsfda');\r\n    this.props.navigation.navigate(\"Main\");\r\n    \r\n    //NavigationAction.back();\r\n    //return true;\r\n  }\r\n\r\n  \r\n  render() {\r\n    \r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <CustomModal />\r\n        {\r\n          this.props.produtos.length == 0  && this.props.show_loader_produto == false ? (<View style={{\r\n            opacity: 1.0,\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            flexDirection:'column',\r\n            padding:50\r\n            \r\n          }} >\r\n            <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'}  size={200} color={Color.tintColor} />\r\n            <Text style={{fontSize:18 , textAlign:'center'}}>Ops!</Text>\r\n            <Text style={{fontSize:15, textAlign:'center'}}>Não existem produtos cadastrados nesta categoria.</Text>\r\n            \r\n          </View>):(\r\n            <View></View>\r\n          )\r\n        }\r\n        {\r\n          this.props.produto_carregado_falha == true && this.props.show_loader_produto == false ? (\r\n            <View style={{\r\n              opacity: 1.0,\r\n              alignItems:'center',\r\n              justifyContent:'center',\r\n              flexDirection:'column',\r\n              padding:50\r\n              \r\n            }} >\r\n              <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'} size={200} color={Color.tintColor} />\r\n              <Text style={{fontSize:18}}>Ops!</Text>\r\n              <Text style={{fontSize:15}}>Houve uma falha ao carregar o menu.</Text>\r\n              <Text style={{fontSize:15}}>Tente novamente mais tarde!</Text>\r\n            </View>\r\n            \r\n          ):(\r\n            Platform.OS === 'ios' ? (\r\n              <FlatList\r\n                data={this.props.produtos}\r\n                keyExtractor={item => item.Produto.id_sec.toString()}\r\n                renderItem={({ item }) => (\r\n                  \r\n                  <ListItemIos\r\n                    id={item.Produto.id}\r\n                    name={item.Produto.nome}\r\n                    image={item.Produto.foto}\r\n                    cuisine={item.Produto.nome}\r\n                    price={item.Produto.preco_venda}\r\n                    description={item.Produto.descricao}\r\n                    isVegetarian={item.Produto.parte_compre_ganhe}\r\n                    disponivel={item.Produto.disponivel}\r\n                    handleNaviagation={this.handleNaviagation}\r\n                    handleGoToLogin={this.handleGoToLogin}\r\n                    partida_id=''\r\n                    data_validade=''\r\n                    tem_adicional={item.Produto.tem_adicional}\r\n                  />\r\n                )}\r\n              />\r\n            ):(\r\n              <FlatList\r\n              data={this.props.produtos}\r\n              keyExtractor={item => item.Produto.id_sec.toString()}\r\n              renderItem={({ item }) => (\r\n                \r\n                <ListItem\r\n                  id={item.Produto.id}\r\n                  name={item.Produto.nome}\r\n                  image={item.Produto.foto}\r\n                  cuisine={item.Produto.nome}\r\n                  price={item.Produto.preco_venda}\r\n                  description={item.Produto.descricao}\r\n                  isVegetarian={item.Produto.parte_compre_ganhe}\r\n                  disponivel={item.Produto.disponivel}\r\n                  handleNaviagation={this.handleNaviagation}\r\n                  handleGoToLogin={this.handleGoToLogin}\r\n                  partida_id=''\r\n                  data_validade=''\r\n                  tem_adicional={item.Produto.tem_adicional}\r\n                />\r\n              )}\r\n            />\r\n            )\r\n             \r\n             \r\n          )\r\n        }\r\n        {\r\n          this.props.show_loader_produto == true ? (\r\n            <View\r\n                style={{\r\n\r\n\r\n                  opacity: 1.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n          ):(\r\n            <View\r\n                style={{\r\n\r\n\r\n                  opacity: 0.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n          )\r\n        }\r\n        \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    marginBottom: 8\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  produtos: state.DishesReducer.produtos,\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n  show_loader_produto: state.DishesReducer.show_loader_produto,\r\n  produto_carregado_falha: state.DishesReducer.produto_carregado_falha\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({adicionalFetch, showMyLoaderProduct}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DishesAdc);","import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, View, Image } from \"react-native\";\r\n\r\nclass EmptyCart extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <View style={styles.container}>\r\n        <View>\r\n          <Image\r\n            source={require(\"../../../assets/empty-bag.png\")}\r\n            style={{ width: 150, height: 150, marginBottom: 12 }}\r\n          />\r\n          <Text\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"#ef6136\",\r\n              fontSize: 18,\r\n              opacity: 0.55\r\n            }}\r\n          >\r\n            O carrinho está vazio!\r\n          </Text>\r\n         \r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#fff\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  title: {\r\n    fontSize: 24,\r\n    color: \"#4099ff\",\r\n    margin: 8\r\n  }\r\n});\r\n\r\nexport default EmptyCart;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Picker\r\n} from \"react-native\";\r\nimport { Overlay } from 'react-native-elements';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\nimport { removeFromCart, updateCart } from '../actions/AppActions';\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass ListCart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isClicked: false\r\n    };\r\n  }\r\n\r\n  handleRemoveFromCart = () => {\r\n    this.props.removeFromCart(this.props.item_id, this.props.carrinho, this.props.usuario.frete_cadastro);\r\n  }\r\n  handleClick = () => {\r\n    this.setState({\r\n      isClicked: !this.state.isClicked\r\n    });\r\n    //this.props.handleNaviagation();\r\n    Alert.alert(\r\n      'Remover Produto',\r\n      `Deseja mesmo remover o produto ${this.props.name} do seu pedido?`,\r\n      [\r\n        {\r\n          text: 'Sim',\r\n          onPress: () => this.handleRemoveFromCart(),\r\n        },\r\n        {\r\n          text: 'Não',\r\n          onPress: () => console.log('Não Pressed'),\r\n          style: 'cancel',\r\n        },\r\n      ],\r\n      { cancelable: false },\r\n    );\r\n  };\r\n  render() {\r\n    let total = this.props.price * this.props.qtd;\r\n    total = total.toString();\r\n    return (\r\n      <TouchableOpacity onPress={this.handleClick} >\r\n        <View\r\n          elevation={2}\r\n          style={{\r\n            flexDirection: \"row\",\r\n            backgroundColor: this.props.linha % 2 ? Color.itemBackgroudColorpar : Color.itemBackgroudColorimpar ,\r\n            //marginHorizontal: 24,\r\n            //marginVertical: 8,\r\n            //borderRadius: 4,\r\n            //shadowOpacity: 0.1,\r\n            //shadowRadius: 2,\r\n            padding: 10,\r\n           \r\n            shadowOffset: {\r\n              height: 1,\r\n              width: 1\r\n            }\r\n          }}\r\n        >\r\n          <View style={{ flex: 4, \r\n          borderTopLeftRadius: 4,\r\n          borderTopRightRadius: 0,\r\n          borderBottomRightRadius: 0,\r\n          borderBottomLeftRadius: 4 }}>\r\n            \r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                color: Color.textFormaPagamento,\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              {this.props.name}\r\n            </Text>\r\n\r\n          </View>\r\n          <View style={{ flex: 2 }}>\r\n            \r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                //fontWeight: \"bold\",\r\n                //color: \"#ef6136\",\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              {\r\n                this.props.price == 0 ? (\r\n                  <NumberFormat \r\n                    value={ this.props.price } \r\n                    displayType={'text'} \r\n                    renderText={value => <Text>{value}</Text>}\r\n                    thousandSeparator={'.'}\r\n                    decimalScale={2} \r\n                    fixedDecimalScale={true}\r\n                    prefix={'R$ '}\r\n                    decimalSeparator={','}\r\n                  />\r\n                ):(\r\n                  <NumberFormat \r\n                    value={ this.props.price.replace(\".\",\",\") } \r\n                    displayType={'text'} \r\n                    renderText={value => <Text>{value}</Text>}\r\n                    thousandSeparator={'.'}\r\n                    decimalScale={2} \r\n                    fixedDecimalScale={true}\r\n                    prefix={'R$ '}\r\n                    decimalSeparator={','}\r\n                  />\r\n                )\r\n              }\r\n              \r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            \r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                //fontWeight: \"bold\",\r\n                //color: \"#a92319\",\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              &nbsp;{this.props.qtd}\r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 2 }}>\r\n           \r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                ///fontWeight: \"bold\",\r\n                //color: \"#ef6136\",\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              \r\n              <NumberFormat \r\n                value={ total.replace(\".\",\",\") } \r\n                displayType={'text'} \r\n                renderText={value => <Text>{value}</Text>}\r\n                thousandSeparator={'.'}\r\n                decimalScale={2} \r\n                fixedDecimalScale={true}\r\n                prefix={'R$ '}\r\n                decimalSeparator={','}\r\n              />\r\n              \r\n            </Text>\r\n          </View>\r\n\r\n\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  usuario: state.AppReducer.usuario\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ removeFromCart, updateCart }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCart);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Image,\r\n  TouchableOpacity,\r\n  Button\r\n} from \"react-native\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { produtosFetch } from '../actions/DishesActions';\r\nimport Constants from \"../utils/constants\";\r\nimport foodData from \"../food-data.json\";\r\nimport ListCart from \"./ListCart\";\r\nimport CartButton from \"./common/CartButton\";\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass Checkout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n   // console.log('this.props.carrinho');\r\n    //console.log(this.props.carrinho);\r\n    \r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Carrinho\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor:Color.headerBar\r\n      },\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  };\r\n\r\n  handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"Checkout\");\r\n  };\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View\r\n          elevation={2}\r\n          style={{\r\n            flexDirection: \"row\",\r\n            backgroundColor: Color.checkoutContainerBackground,\r\n            padding:10,\r\n            \r\n            //marginHorizontal: 24,\r\n            //marginVertical: 8,\r\n            //borderRadius: 4,\r\n            //shadowOpacity: 0.1,\r\n            //shadowRadius: 2,\r\n            //padding: 10,\r\n            /*shadowOffset: {\r\n              height: 1,\r\n              width: 1\r\n            }*/\r\n          }}\r\n        >\r\n          <View style={{ \r\n            flex: 4, \r\n            \r\n            //borderTopLeftRadius: 4,\r\n            //borderTopRightRadius: 0,\r\n            //borderBottomRightRadius: 0,\r\n            //borderBottomLeftRadius: 4 \r\n          }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                color: Color.checkoutConteinerTextColor,\r\n                fontWeight: \"bold\",\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              Item\r\n            </Text>\r\n            \r\n          </View>\r\n          <View style={{ flex: 2 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                fontWeight: \"bold\",\r\n                color: Color.checkoutConteinerTextColor,\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              Unt\r\n            </Text>\r\n            \r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                fontWeight: \"bold\",\r\n                color: Color.checkoutConteinerTextColor,\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              Qtd \r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 2 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 16,\r\n                fontWeight: \"bold\",\r\n                color: Color.checkoutConteinerTextColor,\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n              Total \r\n            </Text>\r\n            \r\n          </View>\r\n\r\n\r\n        </View>\r\n      \r\n        <FlatList\r\n          data={this.props.carrinho}\r\n          keyExtractor={(item, index) => item.item_id.toString()}\r\n          renderItem={({ item , index}) => (\r\n            <ListCart\r\n              name={item.nome}\r\n              image={item.foto}\r\n              cuisine={item.nome}\r\n              price={item.preco_venda}\r\n              label={item.descricao}\r\n              isVegetarian={item.parte_compre_ganhe}\r\n              item_id={item.item_id}\r\n              qtd={item.qtd}\r\n              linha={index}\r\n            \r\n            />\r\n          )}\r\n        />\r\n        \r\n        \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    marginBottom: 8\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({produtosFetch}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React, { Component } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    FlatList,\r\n    Image,\r\n    TouchableOpacity,\r\n    Picker,\r\n    Button,\r\n    ActivityIndicator,\r\n    Alert,\r\n    Platform\r\n} from \"react-native\";\r\nimport { Input } from 'react-native-elements';\r\nimport NumberFormat from 'react-number-format';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { atualizaFormaDePagamento, atualizaTroco, tiposPagamentoFetch, enviaPedido, setStatusEnvioPedido, limpaCarrinho, showMyLoader, freteFetch } from '../actions/AppActions';\r\nimport CartButton from \"./common/CartButton\";\r\nimport Color from \"../../constants/Colors\";\r\n\r\n\r\nclass Billing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.tiposPagamentoFetch();\r\n        this.props.freteFetch(this.props.usuario.id);\r\n        //console.log('this.props.valor_frete');\r\n        //console.log(this.props.valor_frete);\r\n\r\n    }\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            headerTitle: \"Pagamento\",\r\n            headerStyle: {\r\n                elevation: 0,\r\n                shadowOpacity: 0,\r\n                backgroundColor: Color.headerBar\r\n            },\r\n            headerRight: (\r\n                <CartButton\r\n                    onPress={() => {\r\n                        navigation.navigate(\"Cart\");\r\n                    }}\r\n                />\r\n            )\r\n        };\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.status_envio_pedido == true) {\r\n            this.props.setStatusEnvioPedido(false);\r\n            if(typeof nextProps.pedido != 'undefined'){\r\n                this.props.navigation.navigate(\"ViewOrder\", { Atendimento_id: nextProps.pedido.atendimento_id });\r\n            }\r\n            \r\n        }\r\n    }\r\n    UNSAFE_componentWillUnmount() {\r\n        this.props.limpaCarrinho();\r\n    }\r\n    handleAtualizatroco(event) {\r\n        this.props.atualizaTroco(event);\r\n    }\r\n    handleSendOrder() {\r\n        this.props.freteFetch(this.props.usuario.id);\r\n        if (this.props.forma_pagamento == 1 && this.props.troco_pedido == '') {\r\n\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `Vai precisar de troco? Por favor, se precisar, diga para quanto quer, caso contrário, informe que não!`,\r\n                [\r\n                    {\r\n                        text: 'OK',\r\n                        //onPress: () => console.log('clicou'),\r\n                        style: 'OK',\r\n                    },\r\n                ],\r\n                { cancelable: true },\r\n            );\r\n        } else {\r\n\r\n            if (this.props.forma_pagamento ==  '' || this.props.forma_pagamento == null) {\r\n                Alert.alert(\r\n                    'Mensagem',\r\n                    `Opa, faltou informar a forma de pagamento.`,\r\n                    [\r\n                        {\r\n                            text: 'OK',\r\n                            //onPress: () => console.log('clicou'),\r\n                            style: 'OK',\r\n                        },\r\n                    ],\r\n                    { cancelable: true },\r\n                );\r\n            } else {\r\n                this.props.showMyLoader(true);\r\n\r\n                this.props.enviaPedido(\r\n                    {\r\n                        carrinho: this.props.carrinho,\r\n                        total_carrinho: this.props.total_carrinho,\r\n                        trocoresposta: this.props.troco_pedido,\r\n                        cliente_id: this.props.usuario.id,\r\n                        token: this.props.usuario.token,\r\n                        obs: this.props.obs_pedido,\r\n                        pagamento_id: this.props.forma_pagamento,\r\n                        entrega_valor: this.props.valor_frete,\r\n                        logradouro: this.props.usuario.logradouro,\r\n                        numero: this.props.usuario.numero,\r\n                        ponto_referencia: this.props.usuario.ponto_referencia,\r\n                        complemento: this.props.usuario.complemento,\r\n                        bairro_id: this.props.usuario.bairro,\r\n                        cidad_id: this.props.usuario.cidade,\r\n                        estado_id: this.props.usuario.uf,\r\n                        telefone: this.props.usuario.telefone,\r\n                        email: this.props.usuario.email,\r\n                        bairro_nome: this.props.usuario.bairro_nome,\r\n                        cidade_nome: this.props.usuario.cidade_nome,\r\n                        estado_nome: this.props.usuario.estado_nome,\r\n                        ponto_referencia: this.props.usuario.ponto_referencia,\r\n                        ptk: this.props.token_notificacao,\r\n                    }\r\n                );/**/\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n    render() {\r\n        let payments = this.props.tipos_pagamento.map((v, k) => {\r\n\r\n            return (\r\n                <Picker.Item label={v.Pagamento.tipo} value={v.Pagamento.id} key={k} />\r\n            );\r\n        });\r\n        let total_carrinho = this.props.total_carrinho.toString();\r\n        total_carrinho = total_carrinho.replace(\".\", \",\");\r\n        return (\r\n            <View >\r\n                <View style={styles.container} >\r\n                    <View >\r\n                        <Text style={{\r\n                            fontSize: 26,\r\n                            fontWeight: 'bold'\r\n                        }}>\r\n                            Total&nbsp;\r\n                        </Text>\r\n\r\n                    </View>\r\n                    <View>\r\n                        <Text style={{\r\n                            fontSize: 26,\r\n                            fontWeight: 'bold'\r\n                        }}>\r\n\r\n                            <NumberFormat\r\n                                value={total_carrinho}\r\n                                displayType={'text'}\r\n                                renderText={value => <Text>{value}</Text>}\r\n                                thousandSeparator={'.'}\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                prefix={'R$ '}\r\n                                decimalSeparator={','}\r\n\r\n                            />\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.container} >\r\n\r\n                    <View>\r\n                        <Text style={{\r\n                            textAlign: \"center\", fontSize: 18, textAlign: \"center\", flex: 1,\r\n                            color: Color.textFormaPagamento\r\n                        }}>Forma de Pagamento</Text>\r\n                        <Picker\r\n                            selectedValue={this.props.forma_pagamento}\r\n                            style={{ height: 22, width: 150, flex: 1, justifyContent: \"center\" }}\r\n                            onValueChange={(itemValue, itemIndex) => this.props.atualizaFormaDePagamento(itemValue)}\r\n                        >\r\n                            <Picker.Item label={'Selecione'} value={''} key={-1} />\r\n                            {payments}\r\n\r\n                        </Picker>\r\n                    </View>\r\n                    {\r\n                        this.props.forma_pagamento == 1 ? (\r\n                            <View style={{\r\n                                flex: 1,\r\n                                flexDirection: \"row\"\r\n                            }}>\r\n                                <Input\r\n                                    placeholder=\"Troco p/ quanto?\"\r\n                                    label=\"Levar Troco?\"\r\n                                    onChangeText={(event) => this.handleAtualizatroco(event)}\r\n                                />\r\n                            </View>\r\n                        ) : (\r\n                                <View style={{\r\n                                    flex: 1,\r\n                                    flexDirection: \"row\"\r\n                                }}>\r\n                                    <Input\r\n\r\n                                        placeholder=\"Troco p/ quanto?\"\r\n                                        label=\"Levar Troco?\"\r\n                                        onChangeText={(event) => this.handleAtualizatroco(event)}\r\n                                        editable={false}\r\n                                        name=\"troco_pedido\"\r\n                                    />\r\n                                </View>\r\n                            )\r\n                    }\r\n\r\n\r\n\r\n                </View>\r\n                <View style={styles.container} >\r\n                    <View >\r\n                        <Text style={{\r\n                            fontSize: 15,\r\n                            fontWeight: 'bold',\r\n                            textAlign: 'center',\r\n                            marginBottom: 5,\r\n                            marginTop: Platform.OS === 'ios' ? 30 : 0\r\n                        }}>\r\n                            Endereço de Entrega\r\n                        </Text>\r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            //fontWeight:'bold',\r\n                            textAlign: 'center'\r\n                        }}>\r\n                            {this.props.usuario.logradouro}\r\n                            {this.props.usuario.numero != '' && this.props.usuario.numero != null ? ', ' + this.props.usuario.numero : ''}\r\n                            {this.props.usuario.complemento != '' && this.props.usuario.complemento != null ? ', ' + this.props.usuario.complemento : ''}\r\n                            {'\\n'}\r\n                            {this.props.usuario.bairro_nome != '' && this.props.usuario.bairro_nome != null ? '' + this.props.usuario.bairro_nome : ''}\r\n                            {this.props.usuario.cidade_nome != '' && this.props.usuario.estado_nome != null ? ' - ' + this.props.usuario.cidade_nome : ''}\r\n                            {this.props.usuario.estado_nome != '' && this.props.usuario.estado_nome != null ? ' - ' + this.props.usuario.estado_nome : ''}\r\n                            {'\\n'}\r\n                            {this.props.usuario.ponto_referencia != '' && this.props.usuario.ponto_referencia != null ? '' + this.props.usuario.ponto_referencia : ''}\r\n                        </Text>\r\n                    </View>\r\n                    {this.props.show_loader == true ? (\r\n                        <View\r\n                            style={{\r\n                                alignSelf: 'center',\r\n                                opacity: 1.0,\r\n                                alignItems: 'center',\r\n                                position: 'absolute',\r\n                            }}\r\n                        >\r\n                            <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                animating={true}\r\n                                hidesWhenStopped={true}\r\n\r\n                            />\r\n                        </View>\r\n                    ) : (\r\n                            <View\r\n                                style={{\r\n                                    alignSelf: 'center',\r\n                                    opacity: 0.0,\r\n                                    alignItems: 'center',\r\n                                    position: 'absolute',\r\n                                }}\r\n                            >\r\n                                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                    animating={true}\r\n                                    hidesWhenStopped={true}\r\n\r\n\r\n                                />\r\n                            </View>\r\n                        )}\r\n                </View>\r\n                <View style={{ padding: 20 }} >\r\n                    <View style={{ width: \"100%\" }} >\r\n                        <Button\r\n                            color={Platform.OS === 'ios' ? Color.buttonIos : Color.button}\r\n                            title=\"Enviar Pedido\"\r\n                            disabled={this.props.show_loader}\r\n                            style={styles.button}\r\n                            onPress={() => this.handleSendOrder()}\r\n\r\n                        />\r\n                    </View>\r\n\r\n\r\n\r\n                </View>\r\n\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n        marginTop: 8,\r\n        marginBottom: 8,\r\n        justifyContent: \"center\",\r\n        padding: 16,\r\n    },\r\n    button: {\r\n        backgroundColor: Color.button,\r\n        color: Color.buttonText,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        height: 50,\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n});\r\nconst mapStateToProps = state => ({\r\n    carrinho: state.AppReducer.carrinho,\r\n    total_carrinho: state.AppReducer.total_carrinho,\r\n    qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n    show_loader: state.AppReducer.show_loader,\r\n    forma_pagamento: state.AppReducer.forma_pagamento,\r\n    tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n    troco_pedido: state.AppReducer.troco_pedido,\r\n    obs_pedido: state.AppReducer.obs_pedido,\r\n    status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n    usuario: state.AppReducer.usuario,\r\n    pedido: state.AppReducer.pedido,\r\n    token_notificacao: state.AppReducer.token_notificacao,\r\n    valor_frete: state.AppReducer.valor_frete\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ atualizaFormaDePagamento, atualizaTroco, tiposPagamentoFetch, enviaPedido, setStatusEnvioPedido, limpaCarrinho, showMyLoader, freteFetch }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Billing);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Image,\r\n  TouchableOpacity,\r\n  Picker,\r\n  Button,\r\n  Platform\r\n} from \"react-native\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\nimport { atualizaObs, freteFetch } from '../actions/AppActions';\r\nimport Constants from \"../utils/constants\";\r\nimport foodData from \"../food-data.json\";\r\nimport ListCart from \"./ListCart\";\r\nimport CartButton from \"./common/CartButton\";\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Input, CheckBox } from 'react-native-elements';\r\nimport Billing from \"../components/Billing\";\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass FooterCheckout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props);\r\n    this.props.freteFetch(this.props.usuario.id);\r\n    \r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Pedido\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar\r\n      },\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  }\r\n\r\n  handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"Billing\");\r\n  };\r\n\r\n  render() {\r\n    //console.log('this.props.navigation');\r\n    //console.log(this.props.navigation);\r\n    let valorFrete = parseFloat(this.props.valor_frete);\r\n    valorFrete = valorFrete.toFixed(2);\r\n    valorFrete = valorFrete.toString();\r\n    return (\r\n      <View style={{\r\n        //padding:10\r\n      }}>\r\n        <View  style={{padding:10}} >\r\n          <View style={styles.container}>\r\n            <View style={{\r\n              flex: 1,\r\n              borderTopLeftRadius: 4,\r\n              borderTopRightRadius: 0,\r\n              borderBottomRightRadius: 0,\r\n              borderBottomLeftRadius: 4,\r\n            }}>\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: \"bold\",\r\n                //color: \"#a92319\",\r\n              }}>\r\n                Tx. Entrega\r\n            </Text>\r\n            </View>\r\n            <View style={{\r\n              flex: 1,\r\n              borderTopLeftRadius: 4,\r\n              borderTopRightRadius: 0,\r\n              borderBottomRightRadius: 0,\r\n              borderBottomLeftRadius: 4,\r\n              //flexDirection: \"row-reverse\"\r\n            }}>\r\n              <Text style={{\r\n                fontSize: 16,\r\n                fontWeight: \"bold\",\r\n                //color: \"#ef6136\",\r\n              }}>\r\n\r\n                <NumberFormat\r\n                  value={valorFrete.replace(\".\", \",\")}\r\n                  displayType={'text'}\r\n                  renderText={value => <Text>{value}</Text>}\r\n                  thousandSeparator={'.'}\r\n                  decimalScale={2}\r\n                  fixedDecimalScale={true}\r\n                  prefix={'R$ '}\r\n                  decimalSeparator={','}\r\n                />\r\n              </Text>\r\n            </View>\r\n            <View style={{\r\n              flex: 1,\r\n              borderTopLeftRadius: 4,\r\n              borderTopRightRadius: 0,\r\n              borderBottomRightRadius: 0,\r\n              borderBottomLeftRadius: 4\r\n            }}>\r\n              <Text style={{\r\n                fontSize: 17,\r\n                fontWeight: \"bold\",\r\n                //color: \"#a92319\",\r\n              }}>\r\n                Total Geral\r\n            </Text>\r\n            </View>\r\n            <View style={{\r\n              flex: 1,\r\n              borderTopLeftRadius: 4,\r\n              borderTopRightRadius: 0,\r\n              borderBottomRightRadius: 0,\r\n              borderBottomLeftRadius: 4,\r\n              flexDirection: \"row-reverse\"\r\n            }}>\r\n              <Text style={{\r\n                fontSize: 17,\r\n                fontWeight: \"bold\",\r\n                //color: \"#ef6136\",\r\n              }}>\r\n\r\n                <NumberFormat\r\n                  value={this.props.total_carrinho.replace(\".\", \",\")}\r\n                  displayType={'text'}\r\n                  renderText={value => <Text>{value}</Text>}\r\n                  thousandSeparator={'.'}\r\n                  decimalScale={2}\r\n                  fixedDecimalScale={true}\r\n                  prefix={'R$ '}\r\n                  decimalSeparator={','}\r\n\r\n                />\r\n              </Text>\r\n            </View>\r\n\r\n\r\n          </View>\r\n\r\n          <View style={{\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            //marginTop: 8,\r\n            //marginBottom: 8,\r\n            //flexDirection: \"row\",\r\n            padding: 17,\r\n          }}>\r\n            <Input\r\n              label=\"Observações\"\r\n              multiline={true}\r\n              numberOfLines={4}\r\n              textAlignVertical=\"top\"\r\n              style={{ width: \"100%\", borderColor: 'gray', borderWidth: 1 }}\r\n              onChangeText={(value) => this.props.atualizaObs(value)}\r\n\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={{\r\n          //flexDirection: \"column\",\r\n          width: \"100%\",\r\n          //marginTop: 8,\r\n          //marginBottom: 8,\r\n          //flexDirection: \"row\",\r\n          padding: 20,\r\n        }}>\r\n          <Button\r\n            style={styles.button}\r\n            title=\"Pagamento\"\r\n            color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n            onPress={this.props.handleNaviagation} \r\n            />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n    flexDirection: \"row\",\r\n    padding: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4099ff\",\r\n    color: \"#fff\",\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    height: 50,\r\n    flex: 1,\r\n    justifyContent: \"center\"\r\n  },\r\n\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  usuario: state.AppReducer.usuario,\r\n  valor_frete: state.AppReducer.valor_frete,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ atualizaObs, freteFetch }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FooterCheckout);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Image,\r\n  TouchableOpacity,\r\n  ScrollView\r\n} from \"react-native\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { HeaderBackButton } from 'react-navigation-stack';\r\nimport { addToCart } from '../actions/AppActions';\r\nimport EmptyCart from \"./common/EmptyCart\";\r\nimport CartButton from \"./common/CartButton\";\r\nimport Checkout from \"../components/Checkout\";\r\nimport FooterCheckout from \"../components/FooterCheckout\";\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"Billing\");\r\n  };\r\n  \r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Pedido\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar,\r\n      },\r\n      headerLeft: <HeaderBackButton onPress={() => navigation.navigate(\"Main\")}  tintColor={Color.headerBarTitle}  />,\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  };\r\n  render() {\r\n    if (this.props.qtd_carrinho == 0) {\r\n      return <EmptyCart />;\r\n    } else {\r\n      return (\r\n        <View>\r\n           <ScrollView>\r\n             <View>\r\n               <Checkout />\r\n             </View>\r\n             <View>\r\n              <FooterCheckout handleNaviagation={this.handleNaviagation} />\r\n             </View>\r\n          </ScrollView>\r\n        </View>\r\n      );\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ addToCart }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React, { Component } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    Button,\r\n    StyleSheet,\r\n    TouchableHighlight,\r\n    Image,\r\n    ActivityIndicator,\r\n    ScrollView,\r\n    Platform,\r\n     \r\n} from 'react-native';\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { HeaderBackButton } from 'react-navigation-stack';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { Input } from 'react-native-elements';\r\nimport { connect } from 'react-redux';\r\nimport Color from \"../../constants/Colors\";\r\n\r\nimport { \r\n    modificaEmail, \r\n    modificaSenha,\r\n    autenticarUsuario,\r\n    setStatusCadastroUsuario,\r\n    limpaFormularioCadastro,\r\n    modificaUsername,\r\n    validaToken\r\n} from '../actions/AppActions';\r\nimport { FILIAL, EMPRESA, SALT } from '../Settings';\r\n\r\n\r\n\r\nclass formLogin extends Component {    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        let storeData = this.getToken();\r\n      \r\n        storeData.then(resp => {\r\n            \r\n            if(resp != null && resp != ''){\r\n                console.log('resp');\r\n                console.log(resp);\r\n                if(resp != null){\r\n                    if(typeof resp.token != 'undefined'){\r\n                        this.props.validaToken(resp.id,resp.token);\r\n                        \r\n                        if(this.props.is_valid_token == 'OK'){\r\n                            this.props.setStatusCadastroUsuario(resp);\r\n                            this.props.navigation.navigate('Main');\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            }\r\n            \r\n            \r\n        }).catch(error=>{\r\n            //console.log(error);\r\n        });\r\n        //console.log(this.props);\r\n        if(typeof  this.props.usuario != 'undefined') {\r\n            if(this.props.usuario != ''){\r\n                if(this.props.usuario){\r\n                    this.props.validaToken(this.props.usuario.id, this.props.usuario.token);\r\n                    if(this.props.is_valid_token == 'OK'){\r\n                        this.storeToken(this.props.usuario);\r\n                        this.props.setStatusCadastroUsuario(this.props.usuario);\r\n                        this.props.navigation.navigate('Main');\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        \r\n\r\n        //console.log('nextProps');\r\n        //console.log(nextProps);\r\n        if(typeof  nextProps.usuario != 'undefined') {\r\n            if(nextProps.usuario != ''){\r\n                if(nextProps.usuario){\r\n                    this.props.validaToken(nextProps.usuario.id, nextProps.usuario.token);\r\n                    if(this.props.is_valid_token == 'OK'){\r\n                        this.storeToken(nextProps.usuario);\r\n                        this.props.setStatusCadastroUsuario(nextProps.usuario);\r\n                        this.props.navigation.navigate('Main');\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n    UNSAFE_componentWillMount(){\r\n        //console.log('this.props.usuario');\r\n        //console.log(this.props.usuario);\r\n        if(this.props.usuario=='' || this.props.usuario==false ){\r\n            \r\n            let storeData = this.getToken();\r\n            storeData.then(resp => {\r\n                console.log(resp);\r\n                if(resp != null){\r\n                    if(typeof resp.token != 'undefined'){\r\n                        this.props.validaToken(nextProps.usuario.id, nextProps.usuario.token);\r\n                        \r\n                        if(this.props.is_valid_token == 'OK'){\r\n                            this.props.setStatusCadastroUsuario(resp);\r\n                            this.props.navigation.navigate('Main');\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                \r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            headerTitle: \"Entrar\",\r\n            headerStyle: {\r\n                elevation: 0,\r\n                shadowOpacity: 0,\r\n                backgroundColor: Color.headerBar\r\n            },\r\n            headerLeft: <HeaderBackButton onPress={() => navigation.navigate(\"Main\")}  \r\n            //tintColor={Color.headerBarTitle} \r\n            />,\r\n        };\r\n    }\r\n\r\n    _autenticarUsuario() {\r\n        let dadosUsuario = {\r\n            username:this.props.username,\r\n            password:this.props.senha,\r\n            salt:SALT,\r\n            empresa: EMPRESA,\r\n            filial: FILIAL\r\n        }; \r\n\r\n        this.props.autenticarUsuario(dadosUsuario);\r\n    }\r\n\r\n    renderBtnEntrar() {\r\n        \r\n        if(this.props.loadingLogin) {\r\n            return ( <ActivityIndicator size=\"large\" /> );\r\n        }\r\n        return(\r\n            <Button title=\"Entrar\" \r\n                onPress={() => this._autenticarUsuario()}\r\n                color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n                disabled={this.props.show_loader}\r\n            />\r\n        )\r\n    }\r\n\r\n    async storeToken(user) {\r\n        try {\r\n           await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n        } catch (error) {\r\n          //console.log(\"Something went wrong\", error);\r\n        }\r\n    }\r\n    async getToken() {\r\n        try {\r\n          let userData = await AsyncStorage.getItem(\"userData\");\r\n          let data = JSON.parse(userData);\r\n          //console.log(data);\r\n          return data;\r\n        } catch (error) {\r\n          //console.log(\"Something went wrong\", error);\r\n          return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n        <KeyboardAwareScrollView  \r\n            enableAutomaticScroll\r\n            extraScrollHeight={10}\r\n            enableOnAndroid={true}\r\n            resetScrollToCoords={{ x: 0, y: 0 }}\r\n            extraHeight={Platform.select({ android: 200 })}\r\n            contentContainerStyle={styles.grid}\r\n                   >\r\n            <ScrollView>\r\n                <View style={styles.grid} >\r\n                    <View style={styles.contentHeader}>\r\n                        <Image source={require(\"../../assets/images/logo_mini.jpg\")} />\r\n                    </View>\r\n                    <View style={styles.contentBody}>\r\n                    {\r\n                            this.props.show_loader == true ? (\r\n                                <View\r\n                                style={{\r\n                                    alignSelf:'center',\r\n                                    opacity: 1.0,\r\n                                    alignItems: 'center',\r\n                                    position: 'absolute',\r\n                                }}\r\n                            >\r\n                                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                animating={true}\r\n                                hidesWhenStopped={true}\r\n                                \r\n\r\n                                />\r\n                            </View>\r\n                            ):(\r\n                                <View\r\n                                style={{\r\n                                    alignSelf:'center',\r\n                                    opacity: 0.0,\r\n                                    alignItems: 'center',\r\n                                    position: 'absolute',\r\n                                }}\r\n                            >\r\n                                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                animating={true}\r\n                                hidesWhenStopped={true}\r\n                                \r\n\r\n                                />\r\n                            </View>\r\n                            )\r\n                        }\r\n                        <Input \r\n                            value={this.props.username} \r\n                            containerStyle={styles._bodyInputText} \r\n                            label=\"Nome de Usuário\" \r\n                        \r\n                            onChangeText={texto => this.props.modificaUsername(texto)} />\r\n                        <Input \r\n                            value={this.props.senha} \r\n                            secureTextEntry \r\n                            containerStyle={styles._bodyInputText} \r\n                            label=\"Senha\" \r\n                            \r\n                            onChangeText={texto => this.props.modificaSenha(texto)} />\r\n                        \r\n                        <Text style={styles._txtMsgErroLogin}>{this.props.msgErroLogin}</Text>\r\n\r\n                        <View style={{\r\n                            flexDirection: \"row\",\r\n                        }}>\r\n                            <Text style={styles._bodyText}>Ainda não tem cadastro?</Text>\r\n                            <TouchableHighlight\r\n                                onPress={() => this.props.navigation.navigate(\"FormCadastro\")}\r\n                            >\r\n                            <Text style={styles._LinkText}> Cadastre-se</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                        <View style={{\r\n                            flexDirection: \"row\",\r\n                        }}>\r\n                            <Text style={styles._bodyText}>Não lembra a senha?</Text>\r\n                            <TouchableHighlight\r\n                                onPress={() => this.props.navigation.navigate(\"FormRecover\")}\r\n                            >\r\n                            <Text style={styles._LinkText}> Recuperar senha.</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                        \r\n\r\n                        </View>\r\n                        \r\n                        <View style={styles.contentFooter}>\r\n                            {this.renderBtnEntrar()}\r\n                        </View>\r\n                    \r\n\r\n                        \r\n                    </View>\r\n                    \r\n            </ScrollView>\r\n            \r\n        </KeyboardAwareScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        email: state.AppReducer.email,\r\n        senha: state.AppReducer.senha,\r\n        msgErroLogin: state.AppReducer.msgErroLogin,\r\n        loadingLogin: state.AppReducer.loadingLogin,\r\n        usuario: state.AppReducer.usuario,\r\n        username: state.AppReducer.username,\r\n        show_loader: state.AppReducer.show_loader,\r\n        is_valid_token: state.AppReducer.is_valid_token,\r\n});\r\nexport default connect(mapStateToProps, {\r\n    modificaEmail,\r\n    modificaSenha,\r\n    autenticarUsuario,\r\n    setStatusCadastroUsuario,\r\n    limpaFormularioCadastro,\r\n    modificaUsername,\r\n    setStatusCadastroUsuario,\r\n    validaToken \r\n})(formLogin);\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1\r\n    },\r\n    grid: {\r\n        flex: 1,\r\n        padding: 10\r\n    },\r\n    contentHeader: {\r\n        flex: 4,\r\n        alignSelf:\"center\",\r\n        //justifyContent: 'center',\r\n        //alignItems: 'center',\r\n        //padding:60\r\n    },\r\n    _headerTitle: {\r\n        fontSize: 25,\r\n        //color: '#fff'\r\n    },\r\n    contentBody: {\r\n        flex: 2,\r\n        marginBottom:30,\r\n    },\r\n    contentFooter: {\r\n        flex: 2,\r\n        //marginTop:30\r\n    },\r\n    _bodyInputText: {\r\n        //fontSize: 20,\r\n        //height: 45,\r\n        //color: '#fafafa'\r\n        marginTop:10,\r\n    },\r\n    _bodyText: {\r\n        fontSize: 15,\r\n        color: Color.text\r\n    },\r\n    _LinkText:{\r\n        fontSize: 15,\r\n        color: Color.links\r\n    },\r\n    \r\n    _txtMsgErroLogin: {\r\n        fontSize: 15,\r\n        //color: '#ff0000'\r\n    }\r\n});","import React, { Component } from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Image,\r\n    Button,\r\n    Platform,\r\n    ActivityIndicator,\r\n    ScrollView\r\n} from \"react-native\";\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { HeaderBackButton } from 'react-navigation-stack';\r\nimport { categoriasFetch, categoriasFetchInterval, showMyLoaderCategory, jogarJokenpo, setStatusCadastroUsuario } from '../actions/AppActions';\r\n\r\nimport Color from \"../../constants/Colors\";\r\nimport BtnEscolha from './Escolha';\r\nimport Icone from './IconeJokenpo';\r\n\r\nclass Jokenpo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let userData = this.getToken();\r\n        userData.then(resp => {\r\n            //console.log(resp);\r\n            if (typeof resp.token != 'undefined') {\r\n                this.props.setStatusCadastroUsuario(resp);\r\n                //this.props.validaToken(res.id,res.token);\r\n                //this.props.navigation.navigate('Main');\r\n            }\r\n        });\r\n\r\n    }\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            headerTitle: \"Pedra, Papel e Tesoura\",\r\n            headerStyle: {\r\n                elevation: 0,\r\n                shadowOpacity: 0,\r\n                backgroundColor: Color.headerBar\r\n            },\r\n            headerLeft: <HeaderBackButton onPress={() => navigation.navigate(\"MenuRewardStack\")} tintColor={Color.headerBarTitle} />,\r\n            headerTitleStyle: {\r\n                color: Color.headerBarTitle,\r\n                fontWeight: 'bold'\r\n            },\r\n\r\n        };\r\n    }\r\n    async storeToken(user) {\r\n        try {\r\n            await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n        } catch (error) {\r\n            //console.log(\"Something went wrong\", error);\r\n        }\r\n    }\r\n    async getToken() {\r\n        try {\r\n            let userData = await AsyncStorage.getItem(\"userData\");\r\n            let data = JSON.parse(userData);\r\n            //console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            //console.log(\"Something went wrong\", error);\r\n            return false;\r\n        }\r\n    }\r\n    jokenpo = (escolhaUsuario) => {\r\n\r\n        this.props.jogarJokenpo(this.props.usuario.id, this.props.usuario.token, escolhaUsuario);\r\n\r\n    }\r\n    gotoMyGifts() {\r\n\r\n        this.props.navigation.navigate(\"MyGifts\", { user_id: this.props.usuario.id });\r\n    }\r\n    render() {\r\n        let test = false\r\n        if (this.props.showImage) {\r\n            test = true\r\n        }\r\n        let btnDisabled = false;\r\n        if (this.props.resultado_final != '' || this.props.show_loader == true) {\r\n            btnDisabled = true;\r\n        }\r\n\r\n        return (\r\n            <ScrollView>\r\n                {\r\n                    this.props.show_loader == true ? (\r\n                        <View\r\n                            style={{\r\n\r\n\r\n                                opacity: 1.0,\r\n                                width: '100%',\r\n\r\n                                alignItems: 'center',\r\n                                flex: 1,\r\n                                position: 'absolute',\r\n                                marginTop: '50%'\r\n                            }}\r\n                        >\r\n                            <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                animating={true}\r\n                                hidesWhenStopped={true}\r\n\r\n                            />\r\n                        </View>\r\n\r\n                    ) : (\r\n                            <View\r\n                                style={{\r\n\r\n\r\n                                    opacity: 0.0,\r\n                                    width: '100%',\r\n\r\n                                    alignItems: 'center',\r\n                                    flex: 1,\r\n                                    position: 'absolute',\r\n                                    marginTop: '50%'\r\n                                }}\r\n                            >\r\n                                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                    animating={true}\r\n                                    hidesWhenStopped={true}\r\n\r\n                                />\r\n                            </View>\r\n\r\n\r\n\r\n                        )\r\n                }\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <Image source={require('../../assets/images/jokenpo.png')} style={{ flex: 1 }} />\r\n                </View>\r\n                {\r\n                    this.props.resultado_final != '' ? (\r\n                        <View style={{ flexDirection: 'row', alignSelf: 'center' }}>\r\n                            <View style={{ padding: 10 }}>\r\n                                <Button\r\n                                    onPress={e => this.gotoMyGifts()}\r\n                                    title=\"Ver Sua Recompensa\"\r\n                                    color={Platform.OS === 'ios' ? Color.buttonIos : Color.button}\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        paddingLeft: 16,\r\n                                        paddingRight: 16,\r\n                                        paddingTop: 8,\r\n                                        paddingBottom: 8,\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    ) : (\r\n                            <View></View>\r\n                        )\r\n                }\r\n                <View style={{ padding: 5 }}>\r\n                    {this.props.resultado_final == '' ? (\r\n                        <View>\r\n                            { test==true? (\r\n                                <Text style={{\r\n                                    fontSize: 25,\r\n                                    textAlign: 'center',\r\n                                    color: Color.jokenpoEscolhaText,\r\n                                    fontWeight: 'bold'\r\n                                }}>\r\n                                    Escolha outra vez!\r\n                                </Text>\r\n                            ):(\r\n                                <Text></Text>\r\n\r\n                            ) }\r\n                            \r\n                            <Text style={{\r\n                                fontSize: 25,\r\n                                textAlign: 'center',\r\n                                color: Color.jokenpoEscolhaText,\r\n                                fontWeight: 'bold'\r\n                            }}>\r\n                                Placar Parcial\r\n                            </Text>\r\n                        </View>\r\n                        \r\n                    ) : (\r\n                            <Text style={{\r\n                                fontSize: 25,\r\n                                textAlign: 'center',\r\n                                color: this.props.txtColor,\r\n                                fontWeight: 'bold'\r\n                            }}>\r\n                                Placar Final - {this.props.resultado_final}\r\n                            </Text>\r\n                        )}\r\n\r\n                    <Text style={{\r\n                        fontSize: 20,\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        {this.props.n_vitorias} x {this.props.n_derrotas}\r\n                    </Text>\r\n\r\n                </View>\r\n                <Text style={{\r\n                    fontSize: 20,\r\n                    textAlign: 'center'\r\n                }}>\r\n                    Escolha uma opção\r\n                </Text>\r\n                <View style={styles.painelAcoes}  >\r\n                    <BtnEscolha styleBtn={styles.btnEscolha} title='Pedra' jokenpo={() => this.jokenpo('Pedra')} disabled={btnDisabled} />\r\n                    <BtnEscolha styleBtn={styles.btnEscolha} title='Papel' jokenpo={() => this.jokenpo('Papel')} disabled={btnDisabled} />\r\n                    <BtnEscolha styleBtn={styles.btnEscolha} title='Tesoura' jokenpo={() => this.jokenpo('Tesoura')} disabled={btnDisabled} />\r\n                </View>\r\n                <View style={styles.palco} >\r\n                    {\r\n                        test == true ? (\r\n                            <View>\r\n                                <Text style={{ fontSize: 25, fontWeight: 'bold', color: this.props.txtColor, height: 35 }}>{this.props.resultado} </Text>\r\n                                <Icone texto='Sua escolha:' imagemUsuario={this.props.imagemUsuario} styleImage={styles.palco} />\r\n                                <Icone texto='Escolha do Jogo:' imagemUsuario={this.props.imagemComputador} />\r\n                            </View>\r\n\r\n                        ) : (\r\n                                <View>\r\n                                    <Text></Text>\r\n                                </View>\r\n\r\n                            )}\r\n                </View>\r\n\r\n                <View style={{ padding: 5 }}>\r\n                    <Text style={{\r\n                        fontSize: 20,\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        Jogo do pedra, papel ou tesoura\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontSize: 20,\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        Disputa melhor de três\r\n                    </Text>\r\n                </View>\r\n                <View style={{ padding: 30 }}></View>\r\n\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nlet styles = StyleSheet.create({\r\n    btnEscolha: {\r\n        width: 90,\r\n        color: Platform.OS === 'ios' ? Color.buttonIos : Color.button\r\n    },\r\n    painelAcoes: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        marginTop: 15\r\n    },\r\n    palco: {\r\n        alignItems: 'center',\r\n        marginTop: 15\r\n    },\r\n    txtResultado: {\r\n        fontSize: 25,\r\n        fontWeight: 'bold',\r\n        color: 'red',\r\n        height: 60\r\n    },\r\n\r\n})\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    categorias: state.AppReducer.categorias,\r\n    carrinho: state.AppReducer.carrinho,\r\n    total_carrinho: state.AppReducer.total_carrinho,\r\n    qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n    forma_pagamento: state.AppReducer.forma_pagamento,\r\n    tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n    troco_pedido: state.AppReducer.troco_pedido,\r\n    obs_pedido: state.AppReducer.obs_pedido,\r\n    show_loader: state.AppReducer.show_loader,\r\n    status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n    show_loader_categoria: state.AppReducer.show_loader_categoria,\r\n    categoria_carregada_falha: state.AppReducer.categoria_carregada_falha,\r\n    resultado: state.AppReducer.resultado,\r\n    txtColor: state.AppReducer.txtColor,\r\n    escolhaDoComputador: state.AppReducer.escolhaDoComputador,\r\n    escolhaUsuario: state.AppReducer.escolhaUsuario,\r\n    showImage: state.AppReducer.showImage,\r\n    imagemComputador: state.AppReducer.imagemComputador,\r\n    imagemUsuario: state.AppReducer.imagemUsuario,\r\n    usuario: state.AppReducer.usuario,\r\n    n_vitorias: state.AppReducer.n_vitorias,\r\n    n_derrotas: state.AppReducer.n_derrotas,\r\n    resultado_final: state.AppReducer.resultado_final,\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ categoriasFetch, categoriasFetchInterval, showMyLoaderCategory, jogarJokenpo, setStatusCadastroUsuario }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Jokenpo);","import React, { Component } from 'react';\r\nimport {\r\n    View,    \r\n    \r\n    TextInput,\r\n    Button,\r\n    StyleSheet,\r\n    ImageBackground,\r\n    ActivityIndicator,\r\n    ScrollView,\r\n    Picker,\r\n    Alert,\r\n    Platform, \r\n    Keyboard\r\n} from 'react-native';\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\n\r\nimport { Text, Input } from 'react-native-elements';\r\nimport { connect } from 'react-redux';\r\nimport Color from \"../../constants/Colors\";\r\nimport {\r\n FILIAL,\r\n EMPRESA,\r\n SALT\r\n} from '../Settings'\r\nimport { \r\n    modificaEmail,\r\n    modificaSenha,\r\n    modificaNome,\r\n    cadastraUsuario,\r\n    modificaCep,\r\n    modificaEndereco,\r\n    modificaNumero,\r\n    modificaComplemento,\r\n    modificaPontoReferencia,\r\n    modificaEstado,\r\n    modificaCidade,\r\n    modificaBairro,\r\n    modificaTelefone,\r\n    modificaConfirmaSenha,\r\n    estadosFetch,\r\n    cidadesFetch,\r\n    bairroFetch,\r\n    limpaListaCidades,\r\n    limpaListaBairros,\r\n    limpaListaEstados,\r\n    setStatusCadastroUsuario,\r\n    limpaFormularioCadastro,\r\n    modificaUsername,\r\n    validaToken\r\n\r\n} from '../actions/AppActions';\r\n\r\n\r\n\r\n\r\nclass FormCadastro extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.estadosFetch();\r\n        this.props.limpaFormularioCadastro();\r\n        \r\n        let storeData = this.getToken();\r\n        \r\n        storeData.then(resp => {\r\n           \r\n            if(resp != null && resp != ''){\r\n                if(typeof resp.token != 'undefined'){\r\n                    this.props.validaToken(resp.id,resp.token);\r\n                    \r\n                    if(this.props.is_valid_token == 'OK'){\r\n                        this.props.setStatusCadastroUsuario(resp);\r\n                        this.props.navigation.navigate('Main');\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            \r\n            \r\n        });\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        //console.log('nextProps');\r\n        //console.log(nextProps);\r\n        if(typeof  nextProps.usuario != 'undefined') {\r\n            if(nextProps.usuario != ''){\r\n                if(nextProps.usuario){\r\n                    this.props.validaToken(nextProps.usuario.id, nextProps.usuario.token);\r\n                    if(this.props.is_valid_token == 'OK'){\r\n                        this.storeToken(nextProps.usuario);\r\n                        //this.props.setStatusCadastroUsuario(nextProps.usuario);\r\n                        this.props.navigation.navigate('Main');\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            headerTitle: \"Cadastro\",\r\n            headerTintColor: Color.headerBarTitle,\r\n            headerStyle: {\r\n                elevation: 0,\r\n                shadowOpacity: 0,\r\n                backgroundColor: Color.headerBar,\r\n                //fontWeight:'bold'\r\n            },\r\n            headerTitleStyle: {\r\n              //fontWeight: 'bold',\r\n            },\r\n        };\r\n    }\r\n    \r\n\r\n    async storeToken(user) {\r\n        try {\r\n           await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n           //console.log('setou o usuario na sessão');\r\n        } catch (error) {\r\n          //console.log(\"Something went wrong\", error);\r\n        }\r\n    }\r\n    async getToken(user) {\r\n        try {\r\n          let userData = await AsyncStorage.getItem(\"userData\");\r\n          let data = JSON.parse(userData);\r\n          //console.log(data);\r\n          return data;\r\n        } catch (error) {\r\n          //console.log(\"Something went wrong\", error);\r\n          return false;\r\n        }\r\n    }\r\n\r\n    _cadastraUsuario() {\r\n        const params = {\r\n            nome: this.props.nome,\r\n            email: this.props.email,\r\n            senha: this.props.senha\r\n        };        \r\n\r\n        this.props.cadastraUsuario(params);\r\n    }\r\n    _handleModificaEstado(estado){\r\n        if(estado !=''){\r\n            this.props.cidadesFetch(estado);\r\n            this.props.modificaEstado(estado);\r\n        }else{\r\n            this.props.modificaEstado(estado);\r\n            this.props.limpaListaCidades();\r\n            this.props.limpaListaBairros();\r\n        }\r\n        \r\n    }\r\n\r\n    _handleModificaCidade(cidade){\r\n        if( cidade != ''){\r\n            this.props.bairroFetch(cidade);\r\n            this.props.modificaCidade(cidade);\r\n        }else{\r\n            this.props.modificaCidade(cidade);\r\n            this.props.limpaListaBairros();\r\n        }\r\n    }\r\n\r\n    _handleCadastraUsuario(){\r\n        let usuario = {\r\n            Cliente:{\r\n                id:'',\r\n                nome: this.props.nome,\r\n                username: this.props.username,\r\n                password: this.props.senha,\r\n                passwordcconfirm: this.props.confirma_senha,\r\n                logradouro: this.props.endereco,\r\n                complemento: this.props.complemento,\r\n                numero: this.props.numero,\r\n                uf: this.props.estado,\r\n                cidade: this.props.cidade,\r\n                bairro: this.props.bairro,\r\n                email: this.props.email,\r\n                telefone: this.props.telefone,\r\n                filial_id: FILIAL,\r\n                salt: SALT,\r\n                empresa_id:EMPRESA,\r\n                ativo: 1,\r\n            }\r\n            \r\n        }\r\n        if(this._isValidUser()){\r\n            //console.log(usuario);\r\n            this.props.cadastraUsuario(usuario);\r\n        }\r\n        \r\n    }\r\n    _isValidUser(){\r\n        if(this.props.username == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `O nome de usuário não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n\r\n        if(this.props.nome == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `O nome não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n\r\n        if(this.props.senha == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `A senha não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n        if (this.props.senha != this.props.confirma_senha) {\r\n            Alert.alert(\r\n              'Mensagem',\r\n              `Os campos senha e confirme sua senha não são iguais.`,\r\n              [\r\n                {\r\n                  text: 'OK',\r\n                  //onPress: () => console.log('clicou'),\r\n                  style: 'WARNING',\r\n                },\r\n              ],\r\n              { cancelable: true },\r\n            );\r\n            return false;\r\n        }\r\n        if(this.props.telefone == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `O campo telefone não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n\r\n        if(this.props.endereco == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `O endereço não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n        if(this.props.estado == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `O estado não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n        if(this.props.cidade == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `A cidade não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n        if(this.props.bairro == ''){\r\n            Alert.alert(\r\n                'Mensagem',\r\n                `O bairro não pode ficar em branco.`,\r\n                [\r\n                  {\r\n                    text: 'OK',\r\n                    //onPress: () => console.log('clicou'),\r\n                    style: 'WARNING',\r\n                  },\r\n                ],\r\n                { cancelable: true },\r\n              );\r\n              return false;\r\n        }\r\n        return true;\r\n    }\r\n    render() {\r\n        \r\n\r\n        let estates = this.props.lista_estados.map((v, k) => {\r\n            \r\n            return (\r\n                <Picker.Item label={v.Estado.estado} value={v.Estado.id} key={k} />\r\n            );\r\n        });\r\n\r\n        let cities = this.props.lista_cidades.map((v, k) => {\r\n            \r\n            return (\r\n                <Picker.Item label={v.Cidad.cidade} value={v.Cidad.id} key={k} />\r\n            );\r\n        });\r\n\r\n        let neigborhood = this.props.lista_bairros.map((v, k) => {\r\n            \r\n            return (\r\n                <Picker.Item label={v.Bairro.bairro} value={v.Bairro.id} key={k} />\r\n            );\r\n        });\r\n\r\n        return  (\r\n            <KeyboardAwareScrollView\r\n            enableAutomaticScroll\r\n            extraScrollHeight={10}\r\n            enableOnAndroid={true}\r\n            resetScrollToCoords={{ x: 0, y: 0 }}\r\n            extraHeight={Platform.select({ android: 200 })}\r\n            contentContainerStyle={styles.grid}\r\n            >\r\n            <ScrollView>\r\n                <View>\r\n                    <View style={styles.contentBody}>\r\n                        {\r\n                            this.props.show_loader == true ? (\r\n                                <View\r\n                                    style={{\r\n\r\n\r\n                                    opacity: 1.0,\r\n                                    width: '100%',\r\n\r\n                                    alignItems: 'center',\r\n                                    flex: 1,\r\n                                    position: 'absolute',\r\n                                    marginTop: '50%'\r\n                                    }}\r\n                                >\r\n                                    <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                    animating={true}\r\n                                    hidesWhenStopped={true}\r\n\r\n                                    />\r\n                                </View>\r\n                            ):(\r\n                                <View\r\n                                    style={{\r\n\r\n\r\n                                    opacity: 0.0,\r\n                                    width: '100%',\r\n\r\n                                    alignItems: 'center',\r\n                                    flex: 1,\r\n                                    position: 'absolute',\r\n                                    marginTop: '50%'\r\n                                    }}\r\n                                >\r\n                                    <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                    animating={true}\r\n                                    hidesWhenStopped={true}\r\n\r\n                                    />\r\n                                </View>\r\n                            )\r\n                        }\r\n                        \r\n                        <Input \r\n                            value={this.props.nome} \r\n                             \r\n                            label=\"Nome\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaNome(texto)} />\r\n                        <Input \r\n                            value={this.props.telefone} \r\n                             \r\n                            label=\"Telefone\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaTelefone(texto)} />\r\n                        <Input \r\n                            value={this.props.email} \r\n                            label=\"E-mail\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaEmail(texto)} />\r\n                        \r\n                        <Input \r\n                            value={this.props.endereco} \r\n                             \r\n                            label=\"Endereço\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaEndereco(texto)} />\r\n                        \r\n                        <Input \r\n                            value={this.props.numero} \r\n                             \r\n                            label=\"Numero\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaNumero(texto)} />\r\n\r\n                        <Input \r\n                            value={this.props.complemento} \r\n                             \r\n                            label=\"Complemento\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaComplemento(texto)} />\r\n\r\n                        <Input \r\n                            value={this.props.ponto_referencia} \r\n                             \r\n                            label=\"Ponto de Referência\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaPontoReferencia(texto)} />\r\n                        \r\n                        <View style={{padding:10, marginTop:10}}>\r\n                            <Text style={{textAlign:'center', fontSize:16, \r\n                            //fontWeight:'bold'\r\n                            }}>Observação:</Text>\r\n                            <Text style={{textAlign:'center', fontSize:16}}>Só aparecerão os bairros cobertos pela entrega.</Text>  \r\n                        </View>\r\n                        <View style={{flexDirection:'row', padding:10, marginTop: Platform.OS === 'ios' ? 60:0 }}>\r\n\r\n                        \r\n                            <Text style={{\r\n                                 fontSize: 16,  flex: 1,\r\n                                color: Color.formCadastroSelect\r\n                            }}>Estado</Text>\r\n\r\n                            <Picker\r\n                                selectedValue={this.props.estado}\r\n                                style={{ height: 22, width: 200, flex: 1, justifyContent: \"center\", marginBottom:16 }}\r\n                                onValueChange={(itemValue, itemIndex) => this._handleModificaEstado(itemValue)}\r\n                            >\r\n                                <Picker.Item label=\"Selecione\" value=\"\" key=\"0\" />\r\n                                \r\n                                {estates}\r\n                            \r\n                            </Picker>\r\n                        </View>\r\n\r\n                        <View style={{flexDirection:'row', padding:10 , marginTop: Platform.OS === 'ios' ? 60:0 }}>\r\n                            <Text style={{\r\n                                fontSize: 16, flex: 1,\r\n                                color: Color.formCadastroSelect\r\n                            }}>Cidade</Text>\r\n\r\n                            <Picker\r\n                                selectedValue={this.props.cidade}\r\n                                style={{ height: 22, width: 200, flex: 1, justifyContent: \"center\", marginBottom:16 }}\r\n                                onValueChange={(itemValue, itemIndex) => this._handleModificaCidade(itemValue)}\r\n                            >\r\n                                <Picker.Item label=\"Selecione\" value=\"\" key=\"-1\" />\r\n                                {cities}\r\n\r\n                            </Picker>\r\n                        </View>\r\n                        <View style={{flexDirection:'row', padding:10 , marginTop: Platform.OS === 'ios' ? 60:0 }}>\r\n                            <Text style={{\r\n                                fontSize: 16,  flex: 1,\r\n                                color: Color.formCadastroSelect\r\n                            }}>Bairro</Text>\r\n\r\n                            <Picker\r\n                                selectedValue={this.props.bairro}\r\n                                style={{ height: 22, width: 200, flex: 1, justifyContent: \"center\", marginBottom:16 }}\r\n                                onValueChange={(itemValue, itemIndex) => this.props.modificaBairro(itemValue)}\r\n                            >\r\n                                <Picker.Item label=\"Selecione\" value=\"\" key=\"-1\" />\r\n                                {neigborhood}\r\n\r\n                            </Picker>\r\n                        </View>\r\n                        \r\n                        <Input \r\n                            value={this.props.username} \r\n                            //placeholder=\"Nome\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText}  \r\n                            onChangeText={texto => this.props.modificaUsername(texto)} \r\n                            label='Nome de Usuário'\r\n                        />\r\n                       \r\n                        <Input \r\n                            value={this.props.senha} \r\n                            secureTextEntry \r\n                            label=\"Senha\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            containerStyle={styles._bodyInputText} \r\n                            onChangeText={texto => this.props.modificaSenha(texto)} />\r\n                        \r\n                        <Input \r\n                            value={this.props.confirma_senha} \r\n                            secureTextEntry \r\n                            label=\"Confirme a Senha\" \r\n                            //placeholderTextColor=\"#fff\" \r\n                            //stylcontainerStylee={styles._bodyInputText} \r\n                            blurOnSubmit={false}\r\n                            onSubmitEditing={()=> Keyboard.dismiss()}\r\n                            onChangeText={texto => this.props.modificaConfirmaSenha(texto)} />\r\n                        \r\n\r\n\r\n                        <Text style={styles.txtMsgErro}>{this.props.msgErroCadastro}</Text>\r\n\r\n                        <Button title=\"Cadastrar\"\r\n                            disabled={this.props.show_loader}\r\n                            color={ Platform.OS === 'ios' ? Color.buttonIos : Color.button }\r\n                            onPress={() => this._handleCadastraUsuario()} />\r\n\r\n                    </View>\r\n                    \r\n                </View>\r\n                <View style={{height:200}}></View>\r\n            </ScrollView>\r\n            </KeyboardAwareScrollView>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    nome: state.AppReducer.nome,\r\n    email: state.AppReducer.email,\r\n    senha: state.AppReducer.senha,\r\n    cep: state.AppReducer.cep,\r\n    endereco: state.AppReducer.endereco,\r\n    numero: state.AppReducer.numero,\r\n    complemento: state.AppReducer.complemento,\r\n    ponto_referencia: state.AppReducer.ponto_referencia,\r\n    estado: state.AppReducer.estado,\r\n    cidade: state.AppReducer.cidade,\r\n    bairro: state.AppReducer.bairro,\r\n    telefone: state.AppReducer.telefone,\r\n    cadastro_usuario: state.AppReducer.cadastro_usuario,\r\n    confirma_senha: state.AppReducer.confirma_senha,\r\n    usuario: state.AppReducer.usuario,\r\n    msgErroCadastro: state.AppReducer.msgErroCadastro,\r\n    loadingCadastro: state.AppReducer.loadingCadastro,\r\n    lista_bairros: state.AppReducer.lista_bairros,\r\n    lista_cidades: state.AppReducer.lista_cidades,\r\n    lista_estados: state.AppReducer.lista_estados,\r\n    carrega_cidade_falha: state.AppReducer.carrega_cidade_falha,\r\n    carrega_estado_falha: state.AppReducer.carrega_estado_falha,\r\n    carrega_bairro_falha: state.AppReducer.carrega_bairro_falha,\r\n    show_loader:state.AppReducer.show_loader,\r\n    cadastro_usuario_sucesso: state.AppReducer.cadastro_usuario_sucesso,\r\n    usuario: state.AppReducer.usuario,\r\n    username: state.AppReducer.username\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    modificaEmail,\r\n    modificaSenha,\r\n    modificaNome,\r\n    cadastraUsuario,\r\n    modificaCep,\r\n    modificaEndereco,\r\n    modificaNumero,\r\n    modificaComplemento,\r\n    modificaPontoReferencia,\r\n    modificaEstado,\r\n    modificaCidade,\r\n    modificaBairro,\r\n    modificaTelefone,\r\n    modificaConfirmaSenha,\r\n    estadosFetch,\r\n    cidadesFetch,\r\n    bairroFetch,\r\n    limpaListaCidades,\r\n    limpaListaBairros,\r\n    limpaListaEstados,\r\n    cadastraUsuario,\r\n    setStatusCadastroUsuario,\r\n    limpaFormularioCadastro,\r\n    modificaUsername,\r\n    validaToken\r\n})(FormCadastro);\r\n\r\nconst styles = StyleSheet.create({\r\n    grid: {\r\n        //flex: 1,\r\n        padding: 10,\r\n        marginTop: 8,\r\n        //marginBottom: 400,\r\n    },      \r\n    contentBody: {\r\n        //flex: 4,\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    _bodyInputText: {\r\n        flex:1,\r\n        //marginBottom:5,\r\n        //marginTop:10,\r\n        //fontSize: 20,\r\n        //height: 45,\r\n        //color: '#fafafa'\r\n    },\r\n    contentFooter: {\r\n        //flex: 1\r\n    },\r\n    txtMsgErro:{\r\n        fontSize: 18,\r\n        //color: '#ff0000'\r\n    }\r\n});","import React, { Component } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    Button,\r\n    StyleSheet,\r\n    TouchableHighlight,\r\n    Image,\r\n    ActivityIndicator,\r\n    ScrollView,\r\n    Platform\r\n} from 'react-native';\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { Input } from 'react-native-elements';\r\nimport { connect } from 'react-redux';\r\nimport Color from \"../../constants/Colors\";\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport {\r\n    modificaEmail,\r\n    modificaSenha,\r\n    recuperarSenha,\r\n    setStatusCadastroUsuario,\r\n    limpaFormularioCadastro,\r\n    modificaUsername\r\n} from '../actions/AppActions';\r\nimport { FILIAL, EMPRESA, SALT } from '../Settings';\r\n\r\n\r\n\r\nclass FormRecover extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.limpaFormularioCadastro();\r\n    }\r\n\r\n\r\n\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            headerTitle: \"Recuperar Senha\",\r\n            headerStyle: {\r\n                elevation: 0,\r\n                shadowOpacity: 0,\r\n                backgroundColor: Color.headerBar\r\n            }\r\n        };\r\n    }\r\n\r\n    _recuperarSenha() {\r\n\r\n        this.props.recuperarSenha({\r\n            clt: this.props.username\r\n        });\r\n    }\r\n\r\n    renderBtnEntrar() {\r\n\r\n        if (this.props.loadingLogin) {\r\n            return (<ActivityIndicator size=\"large\" />);\r\n        }\r\n        return (\r\n            <Button\r\n                title=\"Recuperar Senha\"\r\n                onPress={() => this._recuperarSenha()}\r\n                color={Platform.OS === 'ios' ? Color.buttonIos : Color.button}\r\n                disabled={this.props.show_loader}\r\n            />\r\n        )\r\n    }\r\n\r\n    async storeToken(user) {\r\n        try {\r\n            await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n        } catch (error) {\r\n            //console.log(\"Something went wrong\", error);\r\n        }\r\n    }\r\n    async getToken() {\r\n        try {\r\n            let userData = await AsyncStorage.getItem(\"userData\");\r\n            let data = JSON.parse(userData);\r\n            //console.log(data);\r\n            return data;\r\n        } catch (error) {\r\n            //console.log(\"Something went wrong\", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <KeyboardAwareScrollView\r\n                enableAutomaticScroll\r\n                extraScrollHeight={10}\r\n                enableOnAndroid={true}\r\n                resetScrollToCoords={{ x: 0, y: 0 }}\r\n                extraHeight={Platform.select({ android: 200 })}\r\n                contentContainerStyle={styles.grid}\r\n            >\r\n                <ScrollView>\r\n                    <View  >\r\n\r\n                        <View style={styles.contentHeader}>\r\n                            <Image source={require(\"../../assets/images/logo_mini.jpg\")} />\r\n                        </View>\r\n                        <View style={styles.contentBody}>\r\n                            {\r\n                                this.props.show_loader == true ? (\r\n                                    <View\r\n                                        style={{\r\n                                            alignSelf: 'center',\r\n                                            opacity: 1.0,\r\n                                            alignItems: 'center',\r\n                                            position: 'absolute',\r\n                                        }}\r\n                                    >\r\n                                        <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                            animating={true}\r\n                                            hidesWhenStopped={true}\r\n\r\n\r\n                                        />\r\n                                    </View>\r\n                                ) : (\r\n                                        <View\r\n                                            style={{\r\n                                                alignSelf: 'center',\r\n                                                opacity: 0.0,\r\n                                                alignItems: 'center',\r\n                                                position: 'absolute',\r\n                                            }}\r\n                                        >\r\n                                            <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                                                animating={true}\r\n                                                hidesWhenStopped={true}\r\n\r\n\r\n                                            />\r\n                                        </View>\r\n                                    )\r\n                            }\r\n\r\n                            <Input\r\n                                value={this.props.username}\r\n                                containerStyle={styles._bodyInputText}\r\n                                label=\"Nome de Usuário\"\r\n\r\n                                onChangeText={texto => this.props.modificaUsername(texto)} />\r\n\r\n\r\n                            <Text style={styles._txtMsgErroLogin}>{this.props.msgErroLogin}</Text>\r\n                            <View style={styles.contentFooter}>\r\n                                {this.renderBtnEntrar()}\r\n                            </View>\r\n\r\n\r\n                        </View>\r\n\r\n\r\n\r\n                    </View>\r\n                </ScrollView>\r\n\r\n            </KeyboardAwareScrollView>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    email: state.AppReducer.email,\r\n    senha: state.AppReducer.senha,\r\n    msgErroLogin: state.AppReducer.msgErroLogin,\r\n    loadingLogin: state.AppReducer.loadingLogin,\r\n    usuario: state.AppReducer.usuario,\r\n    show_loader: state.AppReducer.show_loader,\r\n    username: state.AppReducer.username\r\n});\r\nexport default connect(mapStateToProps, {\r\n    modificaEmail,\r\n    modificaSenha,\r\n    recuperarSenha,\r\n    setStatusCadastroUsuario,\r\n    limpaFormularioCadastro,\r\n    modificaUsername\r\n})(FormRecover);\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 2\r\n    },\r\n    grid: {\r\n        flex: 1,\r\n        padding: 20\r\n    },\r\n    contentHeader: {\r\n        flex: 1,\r\n        padding: 10,\r\n        //justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    contentBody: {\r\n        flex: 2\r\n    },\r\n    contentFooter: {\r\n        flex: 2,\r\n        marginTop: 10\r\n    },\r\n    _headerTitle: {\r\n        fontSize: 25,\r\n        //color: '#fff'\r\n    },\r\n\r\n    _bodyInputText: {\r\n        //fontSize: 20,\r\n        //height: 45,\r\n        //color: '#fafafa'\r\n        marginTop: 10,\r\n    },\r\n    _bodyText: {\r\n        fontSize: 20,\r\n        //color: '#32A852'\r\n    },\r\n    _LinkText: {\r\n        fontSize: 20,\r\n        color: '#32A852'\r\n    },\r\n\r\n    _txtMsgErroLogin: {\r\n        fontSize: 18,\r\n        //color: '#ff0000'\r\n    }\r\n});","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  Button,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Picker,\r\n  ScrollView\r\n} from \"react-native\";\r\nimport { Overlay } from 'react-native-elements';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { removeFromCart, updateCart } from '../actions/AppActions';\r\nimport NumberFormat from 'react-number-format';\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass ItemOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isClicked: false\r\n    };\r\n  }\r\n\r\n  handleRemoveFromCart = () => {\r\n    this.props.removeFromCart(this.props.item_id, this.props.carrinho);\r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Pedidos\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar,\r\n        \r\n      },\r\n      headerTitleStyle: {\r\n        color: Color.headerBarTitle,\r\n        fontWeight:'bold'\r\n      },\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  };\r\n  \r\n  \r\n  handleClick = () => {\r\n    this.setState({\r\n      isClicked: !this.state.isClicked\r\n    });\r\n    //this.props.handleNaviagation();\r\n    Alert.alert(\r\n      'Remover Produto',\r\n      `Deseja mesmo remover o produto ${this.props.name} do seu pedido?`,\r\n      [\r\n        {\r\n          text: 'Sim',\r\n          onPress: () => this.handleNaviagation(),\r\n        },\r\n        {\r\n          text: 'Não',\r\n          onPress: () => console.log('Não Pressed'),\r\n          style: 'cancel',\r\n        },\r\n      ],\r\n      { cancelable: false },\r\n    );\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <ScrollView>\r\n        <View\r\n          elevation={2}\r\n          style={{\r\n            flexDirection: \"row\",\r\n            backgroundColor: this.props.linha % 2 ? Color.itemBackgroudColorpar : Color.itemBackgroudColorimpar,\r\n            padding:10,\r\n            /*marginHorizontal: 24,\r\n            marginVertical: 8,\r\n            borderRadius: 4,\r\n            shadowOpacity: 0.1,\r\n            shadowRadius: 2,\r\n            padding:10,\r\n            shadowOffset: {\r\n              height: 1,\r\n              width: 1\r\n            }*/\r\n          }}\r\n        >\r\n          <View style={{ flex: 4, \r\n          borderTopLeftRadius: 4,\r\n          borderTopRightRadius: 0,\r\n          borderBottomRightRadius: 0,\r\n          borderBottomLeftRadius: 4 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                //color: \"#000000\",\r\n                //fontWeight: \"bold\",\r\n              }}\r\n            >\r\n            {this.props.produtonome}\r\n           \r\n            </Text>\r\n\r\n          </View>\r\n          <View style={{ flex: 2 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                //fontWeight: \"bold\",\r\n               // color: \"#333\",\r\n               // textAlign: 'center',\r\n              }}\r\n            >\r\n           \r\n             \r\n            <NumberFormat \r\n                value={this.props.valor_unit.replace(\".\",\",\")} \r\n                displayType={'text'} \r\n                renderText={value => <Text>{value}</Text>}\r\n                thousandSeparator={'.'}\r\n                decimalScale={2} \r\n                fixedDecimalScale={true}\r\n                prefix={'R$ '}\r\n                decimalSeparator={','}\r\n              \r\n              />\r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 1 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                //fontWeight: \"bold\",\r\n                //color: \"#a92319\",\r\n               // textAlign: 'center',\r\n              }}\r\n            >\r\n            &nbsp;&nbsp;{this.props.qtde} \r\n            </Text>\r\n          </View>\r\n          <View style={{ flex: 2 }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                //fontWeight: \"bold\",\r\n                //color: \"#ef6136\",\r\n                //textAlign: 'center',\r\n              }}\r\n            >\r\n            <NumberFormat \r\n                value={this.props.valor_total.replace(\".\",\",\")} \r\n                displayType={'text'} \r\n                renderText={value => <Text>{value}</Text>}\r\n                thousandSeparator={'.'}\r\n                decimalScale={2} \r\n                fixedDecimalScale={true}\r\n                prefix={'R$ '}\r\n                decimalSeparator={','}\r\n              \r\n              />  \r\n           \r\n           \r\n            </Text>\r\n          </View>\r\n\r\n\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ removeFromCart, updateCart }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemOrder);","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Image,\r\n  TouchableOpacity,\r\n  Picker,\r\n  Button,\r\n  ActivityIndicator,\r\n  ScrollView\r\n} from \"react-native\";\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { HeaderBackButton } from 'react-navigation-stack';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport NumberFormat from 'react-number-format';\r\nimport { atualizaObs, pedidosViewFetch, modificaUsuario, pedidosViewFetchInterval } from '../actions/AppActions';\r\nimport Constants from \"../utils/constants\";\r\nimport foodData from \"../food-data.json\";\r\nimport ListCart from \"./ListCart\";\r\nimport ItemOrder from './ItemOrder';\r\nimport CartButton from \"./common/CartButton\";\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Input, CheckBox } from 'react-native-elements';\r\nimport Billing from \"../components/Billing\";\r\nimport Color from \"../../constants/Colors\";\r\n\r\nclass ViewOrder extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    //console.log(props.pedido);\r\n    \r\n    let userData = this.getToken();\r\n    //console.log(userData);\r\n    userData.then(\r\n      res => {\r\n\r\n        this.props.pedidosViewFetch(res.id,res.token,this.props.navigation.getParam('Atendimento_id'));\r\n        //console.log('Atendimento_id');\r\n        //console.log(this.props.navigation.getParam('Atendimento_id'));\r\n        this.interval = setInterval(() => this.props.pedidosViewFetchInterval(res.id,res.token,this.props.navigation.getParam('Atendimento_id')), 60000);\r\n      }\r\n    ).catch(error => {\r\n\r\n    });\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Pedido\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor: Color.headerBar\r\n      },\r\n      headerLeft: <HeaderBackButton onPress={() => navigation.navigate(\"LinksStack\")}  \r\n      //tintColor={Color.headerBarTitle}  \r\n      />,\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      )\r\n    };\r\n  }\r\n  async storeToken(user) {\r\n    try {\r\n      await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n      //console.log('setou o usuario na sessão');\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n    }\r\n  }\r\n  async getToken() {\r\n    try {\r\n      let userData = await AsyncStorage.getItem(\"userData\");\r\n      let data = JSON.parse(userData);\r\n      //console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      //console.log(\"Something went wrong\", error);\r\n      return false;\r\n    }\r\n  }\r\n  /*handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"Billing\");\r\n  };*/\r\n\r\n  render() {\r\n    console.log(this.props.pedido);\r\n    \r\n    if(typeof this.props.pedido.Atendimento != 'undefined'){\r\n      //console.log(this.props.pedido.Itensdepedido);\r\n      return (\r\n        \r\n            this.props.show_loader == false ? (\r\n              <ScrollView>\r\n                <View style={styles.container}>\r\n                  \r\n                  <View style={{\r\n                    flex: 1,\r\n                    //borderTopLeftRadius: 4,\r\n                    //borderTopRightRadius: 0,\r\n                    //borderBottomRightRadius: 0,\r\n                    //borderBottomLeftRadius: 4,\r\n                    textAlign:'center'\r\n                  }}> \r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                        //color: \"#a92319\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        Código\r\n                      </Text>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        //fontWeight: \"bold\",\r\n                        //color: \"#a92319\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                      {this.props.pedido.Pedido[0].id}\r\n                      </Text>\r\n                  </View>\r\n                  <View style={{\r\n                    flex: 1,\r\n                    //borderTopLeftRadius: 4,\r\n                    //borderTopRightRadius: 0,\r\n                    //borderBottomRightRadius: 0,\r\n                    //borderBottomLeftRadius: 4\r\n                  }}>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                        //color: \"#a92319\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        Data \r\n                      </Text>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        //fontWeight: \"bold\",\r\n                        //color: \"#a92319\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        {this.props.pedido.Atendimento.data}\r\n                        </Text>\r\n                  </View>\r\n                  <View style={{\r\n                    flex: 1,\r\n                    //borderTopLeftRadius: 4,\r\n                    //borderTopRightRadius: 0,\r\n                    //borderBottomRightRadius: 0,\r\n                    //borderBottomLeftRadius: 4,\r\n                    textAlign:'center'\r\n                  }}>\r\n                    <Text style={{\r\n                      fontSize: 16,\r\n                      fontWeight: \"bold\",\r\n                      //color: \"#ef6136\",\r\n                      textAlign:'center'\r\n                    }}>\r\n                      Hora \r\n                    \r\n                    </Text>\r\n                    <Text style={{\r\n                        fontSize: 16,\r\n                        //fontWeight: \"bold\",\r\n                        //color: \"#a92319\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        {this.props.pedido.Atendimento.hora}\r\n                      </Text> \r\n                  </View>\r\n                    \r\n                    \r\n                </View>\r\n                <View style={styles.container1}>\r\n                  \r\n                    <View style={{\r\n                      flex: 1,\r\n                     \r\n                      //borderTopLeftRadius: 4,\r\n                      //borderTopRightRadius: 0,\r\n                      //borderBottomRightRadius: 0,\r\n                      //borderBottomLeftRadius: 4,\r\n                      textAlign:'center'\r\n                    }}>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                        //color: \"#ef6136\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                      Pagamento \r\n                      \r\n                      </Text>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        //fontWeight: \"bold\",\r\n                        //color: \"#ef6136\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        {this.props.pedido.Atendimento.formadepagamento}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={{\r\n                      flex: 1,\r\n                      //borderTopLeftRadius: 4,\r\n                      //borderTopRightRadius: 0,\r\n                      //borderBottomRightRadius: 0,\r\n                      //borderBottomLeftRadius: 4,\r\n                      textAlign:'center'\r\n                    }}>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                        //color: \"#ef6136\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        Situação \r\n                      \r\n                      </Text>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        //fontWeight: \"bold\",\r\n                        //color: \"#ef6136\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        {this.props.pedido.Pedido[0].status}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={{\r\n                      flex: 1,\r\n                      //borderTopLeftRadius: 4,\r\n                      //borderTopRightRadius: 0,\r\n                      //borderBottomRightRadius: 0,\r\n                      //borderBottomLeftRadius: 4,\r\n                      textAlign:'center'\r\n                    }}>\r\n                      <Text style={{\r\n                        fontSize: 16,\r\n                        fontWeight: \"bold\",\r\n                        //color: \"#ef6136\",\r\n                        textAlign:'center'\r\n                      }}>\r\n                        Entrega \r\n                      \r\n                      </Text>\r\n                      \r\n                        \r\n                        {\r\n                          this.props.pedido.Pedido[0].entrega_valor == '0' || this.props.pedido.Pedido[0].entrega_valor == '' || this.props.pedido.Pedido[0].entrega_valor== null ? (\r\n                            <Text style={{\r\n                              fontSize: 16,\r\n                              //fontWeight: \"bold\",\r\n                              //color: \"#ef6136\",\r\n                              textAlign:'center'\r\n                            }}>\r\n                              Grátis\r\n                            </Text>\r\n                          )\r\n                          :(\r\n                            <Text style={{\r\n                              fontSize: 16,\r\n                              //fontWeight: \"bold\",\r\n                              //color: \"#ef6136\",\r\n                              textAlign:'center'\r\n                            }}>\r\n                              <NumberFormat \r\n                                value={ this.props.pedido.Pedido[0].entrega_valor == '' || this.props.pedido.Pedido[0].entrega_valor== null ? 0 :this.props.pedido.Pedido[0].entrega_valor.replace(\".\",\",\")} \r\n                                displayType={'text'} \r\n                                renderText={value => <Text>{value}</Text>}\r\n                                thousandSeparator={'.'}\r\n                                decimalScale={2} \r\n                                fixedDecimalScale={true}\r\n                                prefix={'R$ '}\r\n                                decimalSeparator={','}\r\n                              \r\n                              />\r\n                            </Text>\r\n                          \r\n                          \r\n                          ) }\r\n                      \r\n                    </View>\r\n                    \r\n                </View>\r\n                \r\n                <View\r\n                  elevation={2}\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    backgroundColor: Color.checkoutContainerBackground,\r\n                    padding:10,\r\n                    marginTop:10,\r\n                    /*marginHorizontal: 24,\r\n                    marginVertical: 8,\r\n                    borderRadius: 4,\r\n                    shadowOpacity: 0.1,\r\n                    shadowRadius: 2,\r\n                    shadowOffset: {\r\n                      height: 1,\r\n                      width: 1\r\n                    }*/\r\n                  }}\r\n                >\r\n                  <View style={{ \r\n                    flex: 4, \r\n                    //borderTopLeftRadius: 4,\r\n                    //borderTopRightRadius: 0,\r\n                    //borderBottomRightRadius: 0,\r\n                    //borderBottomLeftRadius: 4 \r\n                    }}>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Color.checkoutConteinerTextColor,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                    Item\r\n                  \r\n                    </Text>\r\n\r\n                  </View>\r\n                  <View style={{ flex: 2 }}>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Color.checkoutConteinerTextColor,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      Unt\r\n                    \r\n\r\n                    </Text>\r\n                  </View>\r\n                  <View style={{ flex: 1 }}>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Color.checkoutConteinerTextColor,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                    Qtd\r\n                    </Text>\r\n                  </View>\r\n                  <View style={{ flex: 2 }}>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: 16,\r\n                        color: Color.checkoutConteinerTextColor,\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                    Total\r\n                  \r\n                    </Text>\r\n                  </View>\r\n\r\n\r\n                </View>\r\n                <View style={styles.container2}>\r\n                  <View style={{\r\n                      flex: 1,\r\n                      //borderTopLeftRadius: 4,\r\n                      //borderTopRightRadius: 0,\r\n                      //borderBottomRightRadius: 0,\r\n                      //borderBottomLeftRadius: 4,\r\n                      textAlign:'center'\r\n                    }}>\r\n                      <FlatList\r\n                          data={this.props.pedido.Itensdepedido}\r\n                          keyExtractor={item => item.Itensdepedido.id}\r\n                          renderItem={({ item, index }) => (\r\n                            <ItemOrder\r\n                              produtonome={item.Produto.nome}\r\n                              valor_unit={item.Itensdepedido.valor_unit}\r\n                              qtde={item.Itensdepedido.qtde}\r\n                              valor_total={item.Itensdepedido.valor_total}\r\n                              linha={index}\r\n                            />\r\n                          )}\r\n                        />\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={styles.container2}>\r\n                  <View style={{\r\n                    flex: 1,\r\n                    //borderTopLeftRadius: 4,\r\n                    //borderTopRightRadius: 0,\r\n                    //borderBottomRightRadius: 0,\r\n                    //borderBottomLeftRadius: 4,\r\n                    //textAlign:'center',\r\n                    alignItems:'center',\r\n                  }}>\r\n                    <Text style={{\r\n                      fontSize: 20,\r\n                      fontWeight: \"bold\",\r\n                      //color: \"#ef6136\",\r\n                      textAlign:'right',\r\n                      padding:16,\r\n                      marginTop:10,\r\n                      //marginLeft:10,\r\n                    }}>\r\n                      Total\r\n                    \r\n                    </Text> \r\n                  </View>\r\n                  <View style={{\r\n                    flex: 1,\r\n                    //borderTopLeftRadius: 4,\r\n                    //borderTopRightRadius: 0,\r\n                    //borderBottomRightRadius: 0,\r\n                    //borderBottomLeftRadius: 4,\r\n                    //textAlign:'center'\r\n                  }}>\r\n                    <Text style={{\r\n                      fontSize: 20,\r\n                      fontWeight: \"bold\",\r\n                      //color: \"#ef6136\",\r\n                      textAlign:'center',\r\n                      padding:16,\r\n                      marginTop:10,\r\n                      //marginLeft:10,\r\n                    }}>\r\n                      \r\n                      <NumberFormat \r\n                                value={ this.props.pedido.Pedido[0].valor == '' || this.props.pedido.Pedido[0].valor== null ? 0 :this.props.pedido.Pedido[0].valor.replace(\".\",\",\")} \r\n                                displayType={'text'} \r\n                                renderText={value => <Text>{value}</Text>}\r\n                                thousandSeparator={'.'}\r\n                                decimalScale={2} \r\n                                fixedDecimalScale={true}\r\n                                prefix={'R$ '}\r\n                                decimalSeparator={','}\r\n                              \r\n                              />\r\n                    </Text>\r\n                  </View>\r\n                  \r\n                </View>\r\n                <View style={styles.container3} >\r\n                    <View >\r\n                        \r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            marginBottom:5, \r\n                        }}>\r\n                          Levar troco?  {this.props.pedido.Pedido[0].trocoresposta}\r\n                        </Text>\r\n                        {this.props.pedido.Pedido[0].obs != '' ? (\r\n                          <Text style={{\r\n                              fontSize: 16,\r\n                              padding: 10,\r\n                              //fontWeight:'bold',\r\n                              textAlign:'center',\r\n                             // marginBottom:5, \r\n                          }}>\r\n                          {this.props.pedido.Pedido[0].obs}\r\n                        </Text>\r\n                        ):(<View></View>)}\r\n\r\n                        {this.props.pedido.Pedido[0].motivocancela != '' ? (\r\n                          <Text style={{\r\n                              fontSize: 16,\r\n                              padding: 10,\r\n                              //fontWeight:'bold',\r\n                              textAlign:'center',\r\n                              marginTop: 0,\r\n                             // marginBottom:5, \r\n                          }}>\r\n                          {this.props.pedido.Pedido[0].motivocancela}\r\n                        </Text>\r\n                        ):(<View></View>)}\r\n                          \r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            marginBottom:5, \r\n                        }}>\r\n                            Endereço de entrega\r\n                        </Text>\r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            //fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            marginBottom:5,   \r\n                        }}>\r\n                            {this.props.pedido.Pedido[0].logradouro}\r\n                            {this.props.pedido.Pedido[0].numero != '' && this.props.pedido.Pedido[0].numero != null  ? ', '+ this.props.pedido.Pedido[0].numero :'' }\r\n                            {this.props.pedido.Pedido[0].complemento != '' && this.props.pedido.Pedido[0].complemento != null ? ', ' + this.props.pedido.Pedido[0].complemento :'' }\r\n                            \r\n                       \r\n                        </Text>\r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            //fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            marginBottom:5,   \r\n                        }}>\r\n                            {this.props.pedido.Pedido[0].bairro_nome != '' && this.props.pedido.Pedido[0].bairro_nome != null ? '' + this.props.pedido.Pedido[0].bairro_nome :''}\r\n                            {this.props.pedido.Pedido[0].cidade_nome != '' && this.props.pedido.Pedido[0].cidade_nome != null ? ' - ' + this.props.pedido.Pedido[0].cidade_nome :''}\r\n                            {this.props.pedido.Pedido[0].estado_nome != '' && this.props.pedido.Pedido[0].estado_nome != null ? ' - ' + this.props.pedido.Pedido[0].estado_nome :''}\r\n                            \r\n                           \r\n                        </Text>\r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            //fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            \r\n                        }}>\r\n                           {this.props.pedido.Pedido[0].ponto_referencia != '' && this.props.pedido.Pedido[0].ponto_referencia != null  ? '' + this.props.pedido.Pedido[0].ponto_referencia :''}\r\n                        </Text>\r\n                        {this.props.pedido.Pedido[0].status !='Entregue' &&  this.props.pedido.Pedido[0].status !='Cancelado' &&  this.props.pedido.Pedido[0].status !='' ? (\r\n                          <Text style={{\r\n                            fontSize: 16,\r\n                            fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            marginBottom:5, \r\n                        }}>\r\n                          Tempo estimado de espera  {this.props.pedido.Filial.tempo_atendimento}\r\n                        </Text>\r\n                        ):(<View></View>)}\r\n                        \r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            marginBottom:5, \r\n                        }}>\r\n                            {this.props.pedido.Filial.nome} - Dúvidas e informações \r\n                        </Text>\r\n                        <Text style={{\r\n                            fontSize: 16,\r\n                            //fontWeight:'bold',\r\n                            textAlign:'center',\r\n                            marginBottom:5,   \r\n                        }}>\r\n                                           \r\n                           {this.props.pedido.Filial.telefone1 != '' ? 'WhatsApp: '+ this.props.pedido.Filial.telefone1 +' ' :''} \r\n                           {this.props.pedido.Filial.telefone2 != '' ? '\\n'+'Telefone : '+ this.props.pedido.Filial.telefone2 +' '  :''}\r\n                           {this.props.pedido.Filial.telefone3 != '' ? '\\n'+'Telefone : '+ this.props.pedido.Filial.telefone3 +' ' :''}\r\n                           {this.props.pedido.Filial.email != '' ? '\\n'+'E-mail : '+ this.props.pedido.Filial.email +' ' :''} \r\n                        </Text>\r\n                    </View>\r\n                    \r\n                </View>\r\n\r\n              \r\n              </ScrollView>\r\n            ):( <View style={{\r\n                  opacity: 0.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%',\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n            )\r\n        \r\n      \r\n    );\r\n    }else {\r\n      return(<View\r\n                style={{\r\n\r\n\r\n                  opacity: 1.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>);\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n    //marginBottom: 20,\r\n    flexDirection: \"row\",\r\n    padding: 10,\r\n  },\r\n  container1: {\r\n    width: \"100%\",\r\n    //marginTop: 8,\r\n    //marginBottom: 8,\r\n    flexDirection: \"row\",\r\n    //padding: 16,\r\n  },\r\n  container2: {\r\n    //width: \"100%\",\r\n    //marginTop: 8,\r\n    //marginBottom: 8,\r\n    flexDirection: \"row\",\r\n    //padding: 16,\r\n  },\r\n  container3: {\r\n    width: \"100%\",\r\n    //marginTop: 8,\r\n    //marginBottom: 8,\r\n//flexDirection: \"row\",\r\n    //padding: 16,\r\n    alignSelf:\"center\",\r\n    alignItems:\"center\"\r\n  },\r\n  button: {\r\n    backgroundColor: Color.ActivityIndicator,\r\n    color: \"#fff\",\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n    height:50,\r\n    flex:1,\r\n    justifyContent:\"center\"\r\n  },\r\n \r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  pedido:state.AppReducer.pedido,\r\n  usuario: state.AppReducer.usuario\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ atualizaObs, pedidosViewFetch, modificaUsuario,pedidosViewFetchInterval }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewOrder);","import _ from 'lodash';\r\nimport axios from 'react-native-axios';\r\n\r\nimport { Actions } from 'react-redux';\r\nimport {\r\n    PRODUTO_CARREGADO_OK,\r\n    PRODUTO_CARREGADO_FALHA,\r\n    SHOW_LOADER_PRODUTO\r\n} from './ActionTypes';\r\n\r\nimport {\r\n    APP_URL,\r\n    FILIAL,\r\n    EMPRESA\r\n} from '../Settings'\r\n\r\n\r\n\r\nexport const produtosByRecFetch = (cliente_id, token) => {\r\n    \r\n    return dispatch => {\r\n        \r\n        dispatch({ type: PRODUTO_CARREGADO_OK, payload: [] });\r\n        dispatch({ type: SHOW_LOADER_PRODUTO, payload: true });\r\n        dispatch({ type: PRODUTO_CARREGADO_FALHA, payload: false });\r\n        let datatosend= {\r\n            clt: cliente_id,\r\n            token: token,\r\n            fp: FILIAL,\r\n            lj: EMPRESA,\r\n        }\r\n        axios.post(`${APP_URL}/RestProdutos/prodsmobilebyrec.json`, datatosend)\r\n            .then(res => {\r\n                //console.log('res');\r\n                //console.log(res);    \r\n                if (typeof res.data.produtos != 'undefined') {\r\n                        \r\n                    dispatch({ type: PRODUTO_CARREGADO_OK, payload: res.data.produtos });\r\n                }else{\r\n                    dispatch({ type: PRODUTO_CARREGADO_FALHA, payload: true }); \r\n                }  \r\n                dispatch({ type: SHOW_LOADER_PRODUTO, payload: false });\r\n                \r\n            }).catch(error => {\r\n               \r\n                dispatch({ type: PRODUTO_CARREGADO_OK, payload: [] });\r\n                dispatch({ type: PRODUTO_CARREGADO_FALHA, payload: true });\r\n                dispatch({ type: SHOW_LOADER_PRODUTO, payload: false });\r\n            });\r\n    }\r\n}\r\n\r\nexport const showMyLoaderProduct = (status) => {\r\n    return dispatch => {\r\n        dispatch({ type: SHOW_LOADER_PRODUTO, payload: status })\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Image,\r\n  TouchableOpacity,\r\n  Button,\r\n  Platform,\r\n  BackHandler\r\n} from \"react-native\";\r\nimport AsyncStorage from '@callstack/async-storage';\r\nimport { NavigationAction } from 'react-navigation';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n//import Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { produtosByRecFetch, showMyLoaderProduct } from '../actions/MyGiftsActions';\r\nimport{ setStatusCadastroUsuario } from '../actions/AppActions';\r\n\r\nimport { HeaderBackButton } from 'react-navigation-stack';\r\nimport Constants from \"../utils/constants\";\r\nimport foodData from \"../food-data.json\";\r\nimport ListItem from \"./ListItem\";\r\nimport CartButton from \"./common/CartButton\";\r\nimport CustomModal from \"../components/common/CustomModal\";\r\nimport Color from \"../../constants/Colors\";\r\nimport ListItemIos from \"./ListItemIos\";\r\n\r\n\r\n\r\n\r\nclass MyGifts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.showMyLoaderProduct(true);\r\n    \r\n    this.handleBackButtonClick = this.handleBackButtonClick.bind(this);\r\n    let userData = this.getToken();\r\n    //console.log(userData);\r\n    userData.then(resp => {\r\n        if(typeof resp != 'undefined'){   \r\n          if(resp.id !='' && resp.token !=''){\r\n            this.props.produtosByRecFetch(resp.id, resp.token);\r\n          }\r\n            \r\n        }\r\n    });\r\n  }\r\n  async storeToken(user) {\r\n      try {\r\n        await AsyncStorage.setItem(\"userData\", JSON.stringify(user));\r\n      } catch (error) {\r\n        //console.log(\"Something went wrong\", error);\r\n      }\r\n  }\r\n  async getToken() {\r\n      try {\r\n        let userData = await AsyncStorage.getItem(\"userData\");\r\n        let data = JSON.parse(userData);\r\n        //console.log(data);\r\n        return data;\r\n      } catch (error) {\r\n        //console.log(\"Something went wrong\", error);\r\n        return false;\r\n      }\r\n  }\r\n  static navigationOptions = ({ navigation }) => {\r\n    return {\r\n      headerTitle: \"Resgatar Recompensas\",\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        backgroundColor:Color.headerBar\r\n      },\r\n      //headerLeft: <TouchableOpacity onPress={() => navigation.navigate(\"Main\") }><Image source={require('react-navigation-stack/src/views/assets/back-icon.png')} style={{marginTop: 10, marginLeft:10}} /></TouchableOpacity>,\r\n      headerLeft: <HeaderBackButton onPress={() => navigation.navigate(\"MenuRewardStack\")}  \r\n      //tintColor={Color.headerBarTitle}  \r\n      />,\r\n      headerRight: (\r\n        <CartButton\r\n          onPress={() => {\r\n            navigation.navigate(\"Cart\");\r\n          }}\r\n        />\r\n      ),\r\n    };\r\n  };\r\n\r\n  handleNaviagation = () => {\r\n    this.props.navigation.navigate(\"MyGifts\");\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n      BackHandler.addEventListener('hardwareBackPress', this.handleBackButtonClick);\r\n  }\r\n\r\n  \r\n  handleBackButtonClick() {\r\n      this.props.navigation.navigate(\"Main\");\r\n      //NavigationAction.back();\r\n      return true;\r\n  }\r\n\r\n  handleGoToLogin  = () => {\r\n    //alert('dsfda');\r\n    this.props.navigation.navigate(\"RoutesLogin\");\r\n    //NavigationAction.back();\r\n    //return true;\r\n  }\r\n\r\n  \r\n  render() {\r\n    \r\n    //console.log('tamanho produto');\r\n    //console.log(this.props.produtos.length);\r\n    //console.log(' produto');\r\n    //console.log(this.props.produtos);\r\n    return (\r\n      <View style={styles.container}>\r\n        <CustomModal />\r\n        {\r\n          this.props.produtos.length == 0   && this.props.show_loader_produto != true && this.props.produto_carregado_falha==true ? (\r\n          <View style={{\r\n            opacity: 1.0,\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n            flexDirection:'column',\r\n            padding:50\r\n            \r\n          }} >\r\n            \r\n            <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'}  size={200} color={Color.tintColor} />\r\n            <Text style={{fontSize:18 , textAlign:'center'}}>Ops!</Text>\r\n            <Text style={{fontSize:15, textAlign:'center'}}>Você não tem recompensas para resgatar.</Text>\r\n             \r\n          </View>):(\r\n            <View></View>\r\n          )\r\n        }\r\n        {\r\n          this.props.produto_carregado_falha == true && this.props.show_loader_produto == false ? (\r\n            <View style={{\r\n              opacity: 1.0,\r\n              alignItems:'center',\r\n              justifyContent:'center',\r\n              flexDirection:'column',\r\n              padding:50\r\n              \r\n            }} >\r\n              <Ionicons name={Platform.OS === 'ios' ? 'ios-sad': 'md-sad'} size={200} color={Color.tintColor} />\r\n              <Text style={{fontSize:18}}>Ops!</Text>\r\n              <Text style={{fontSize:15}}>Houve uma falha ao carregar o menu.</Text>\r\n              <Text style={{fontSize:15}}>Tente novamente mais tarde!</Text>\r\n            </View>\r\n            \r\n          ):(\r\n            Platform.OS === 'ios' ? (\r\n              <FlatList\r\n                data={this.props.produtos}\r\n                keyExtractor={item => item.Produto.id_sec}\r\n                renderItem={({ item }) => (\r\n                  \r\n                  <ListItemIos\r\n                    id={item.Produto.id}\r\n                    name={item.Produto.nome}\r\n                    image={item.Produto.foto}\r\n                    cuisine={item.Produto.nome}\r\n                    price={item.Produto.preco_venda}\r\n                    description={item.Produto.descricao}\r\n                    isVegetarian={item.Produto.parte_compre_ganhe}\r\n                    disponivel={item.Produto.disponivel}\r\n                    handleNaviagation={this.handleNaviagation}\r\n                    handleGoToLogin={this.handleGoToLogin}\r\n                    partida_id={item.Produto.partida_id}\r\n                    data_validade={item.Produto.data_validade}\r\n                    \r\n                  />\r\n                )}\r\n              />\r\n            ):(\r\n              <FlatList\r\n              data={this.props.produtos}\r\n              keyExtractor={item => item.Produto.id_sec}\r\n              renderItem={({ item }) => (\r\n                \r\n                <ListItem\r\n                  id={item.Produto.id}\r\n                  name={item.Produto.nome}\r\n                  image={item.Produto.foto}\r\n                  cuisine={item.Produto.nome}\r\n                  price={item.Produto.preco_venda}\r\n                  description={item.Produto.descricao}\r\n                  isVegetarian={item.Produto.parte_compre_ganhe}\r\n                  disponivel={item.Produto.disponivel}\r\n                  handleNaviagation={this.handleNaviagation}\r\n                  handleGoToLogin={this.handleGoToLogin}\r\n                  partida_id={item.Produto.partida_id}\r\n                  data_validade={item.Produto.data_validade}\r\n                />\r\n              )}\r\n            />\r\n            )\r\n             \r\n             \r\n          )\r\n        }\r\n        {\r\n          this.props.show_loader_produto == true ? (\r\n            <View\r\n                style={{\r\n\r\n\r\n                  opacity: 1.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n          ):(\r\n            <View\r\n                style={{\r\n\r\n\r\n                  opacity: 0.0,\r\n                  width: '100%',\r\n\r\n                  alignItems: 'center',\r\n                  flex: 1,\r\n                  position: 'absolute',\r\n                  marginTop: '50%'\r\n                }}\r\n              >\r\n                <ActivityIndicator size=\"large\" color={Color.ActivityIndicator}\r\n\r\n                  animating={true}\r\n                  hidesWhenStopped={true}\r\n\r\n                />\r\n              </View>\r\n          )\r\n        }\r\n        \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    marginTop: 8,\r\n    marginBottom: 8\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  produtos: state.MyGiftsReducer.produtos,\r\n  carrinho: state.AppReducer.carrinho,\r\n  total_carrinho: state.AppReducer.total_carrinho,\r\n  qtd_carrinho: state.AppReducer.qtd_carrinho,\r\n  forma_pagamento: state.AppReducer.forma_pagamento,\r\n  tipos_pagamento: state.AppReducer.tipos_pagamento,\r\n  troco_pedido: state.AppReducer.troco_pedido,\r\n  obs_pedido: state.AppReducer.obs_pedido,\r\n  show_loader: state.AppReducer.show_loader,\r\n  status_envio_pedido: state.AppReducer.status_envio_pedido,\r\n  show_loader_produto: state.MyGiftsReducer.show_loader_produto,\r\n  produto_carregado_falha: state.MyGiftsReducer.produto_carregado_falha,\r\n  usuario: state.AppReducer.usuario\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({produtosByRecFetch, showMyLoaderProduct}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyGifts);","import { NavigationActions } from 'react-navigation';\r\n\r\nlet _navigator;\r\n\r\nfunction setTopLevelNavigator(navigatorRef) {\r\n  _navigator = navigatorRef;\r\n}\r\n\r\nfunction navigate(routeName, params) {\r\n  _navigator.dispatch(\r\n    NavigationActions.navigate({\r\n      routeName,\r\n      params,\r\n    })\r\n  );\r\n}\r\n\r\n// add other navigation functions that you need and export them\r\n\r\nexport default {\r\n  navigate,\r\n  setTopLevelNavigator,\r\n};","import React from 'react';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nimport {\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport MainTabNavigator from './MainTabNavigator';\nimport Dishes from '../src/components/Dishes';\nimport DishesAdc from '../src/components/DishesAdc';\nimport Cart from '../src/components/Cart';\nimport Billing from '../src/components/Billing';\nimport Restaurants from '../src/components/Restaurants';\nimport FormLogin from '../src/components/FormLogin';\n\nimport MenuReward from '../src/components/MenuReward';\nimport Jokenpo from '../src/components/Jokenpo';\nimport FormCadastro from '../src/components/FormCadastro';\nimport FormRecover from '../src/components/FormRecover';\nimport ViewOrder from '../src/components/ViewOrder';\nimport Color from '../constants/Colors';\nimport MyGifts from '../src/components/MyGifts';\n\n\nconst Routes = createStackNavigator(\n  {\n    Dishes: { screen: Dishes },\n    DishesAdc: { screen: DishesAdc },\n    Cart: {screen: Cart},\n    Billing: {screen: Billing},\n    Restaurants:{screen: Restaurants},\n    MenuReward:{screen: MenuReward},\n    ViewOrder:{screen: ViewOrder},\n    Jokenpo:{screen:Jokenpo},\n    MyGifts: {screen:MyGifts}\n  },\n  {\n    initialRouteName: \"Dishes\",\n    /*Transition config não é obrigatório, caso queira a animação padrão remova a linha abaixo*/\n    //transitionConfig: () => flipX(),\n    defaultNavigationOptions: {\n      headerStyle: {\n        backgroundColor:Color.headerBar,\n      },\n      headerTintColor: Color.headerBarTitle,\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      \n    },\n  }\n);\n\nconst RoutesLogin = createStackNavigator(\n  {\n    FormLogin: { screen: FormLogin },\n    FormCadastro: { screen: FormCadastro },\n    FormRecover: { screen: FormRecover} , \n  },\n  {\n    initialRouteName: \"FormLogin\",\n    /*Transition config não é obrigatório, caso queira a animação padrão remova a linha abaixo*/\n    //transitionConfig: () => flipX(),\n    defaultNavigationOptions: {\n      headerStyle: {\n        backgroundColor:Color.headerBar,\n      },\n      headerTintColor: Color.headerBarTitle,\n      headerTitle: \"Recuperar Senha\",\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      \n    },\n  }\n);\n\nexport default createAppContainer(\n  createSwitchNavigator(\n  {\n    // You could add another route here for authentication.\n    // Read more at https://reactnavigation.org/docs/en/auth-flow.html\n    Main: MainTabNavigator,\n    Routes:Routes,\n    RoutesLogin:RoutesLogin,\n  },\n  {\n    initialRouteName: \"Main\",\n    //initialRouteName: \"RoutesLogin\",\n    \n    /*Transition config não é obrigatório, caso queira a animação padrão remova a linha abaixo*/\n    //transitionConfig: () => flipX(),\n    defaultNavigationOptions: {\n      headerStyle: {\n        backgroundColor:Color.headerBar,\n      },\n      headerTintColor: Color.headerBarTitle,\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n    },\n  }\n  )\n);\n","import React, { Component } from \"react\";\r\nimport { Text, View, Button, Vibration } from 'react-native';\r\nimport { Notifications } from 'expo';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as Permissions from 'expo-permissions';\r\nimport Constants from 'expo-constants';\r\nimport { modificaTokenNotificacao, modificaNotificacao } from '../actions/AppActions';\r\n\r\n\r\n\r\nimport NavigationService from '../../NavigationService';\r\n\r\nclass Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //console.log('props notification');\r\n    //console.log(this.props);\r\n  }\r\n  \r\n\r\n  registerForPushNotificationsAsync = async () => {\r\n    if (Constants.isDevice) {\r\n      const { status: existingStatus } = await Permissions.getAsync(\r\n        Permissions.NOTIFICATIONS\r\n      );\r\n      let finalStatus = existingStatus;\r\n      if (existingStatus !== 'granted') {\r\n        const { status } = await Permissions.askAsync(\r\n          Permissions.NOTIFICATIONS\r\n        );\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== 'granted') {\r\n        //console.log('Failed to get push token for push notification!');\r\n        return;\r\n      }\r\n      let token = await Notifications.getExpoPushTokenAsync();\r\n      if(token){\r\n        //console.log(token);\r\n        //console.log(this.props.token_notificacao);\r\n        this.props.modificaTokenNotificacao(token);\r\n        //this.setState({expoPushToken: token});\r\n      }\r\n      \r\n    } else {\r\n      //console.log('Must use physical device for Push Notifications');\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.registerForPushNotificationsAsync();\r\n\r\n    // Handle notifications that are received or selected while the app\r\n    // is open. If the app was closed and then opened by tapping the\r\n    // notification (rather than just tapping the app icon to open it),\r\n    // this function will fire on the next tick after the app starts\r\n    // with the notification data.\r\n    this._notificationSubscription = Notifications.addListener(\r\n      this._handleNotification\r\n    );\r\n   \r\n  }\r\n\r\n  _handleNotification = notification => {\r\n    Vibration.vibrate();\r\n    this.props.modificaNotificacao(notification);\r\n   \r\n    if(typeof notification.origin != 'undefined'){\r\n      if(notification.origin == 'selected'){\r\n        //this.props.modificaNotificacao(notification);\r\n        NavigationService.navigate('ViewOrder', { Atendimento_id: notification.data.atendimento_id });\r\n          \r\n      }\r\n    }\r\n    //this.setState({ notification: notification });\r\n  };\r\n\r\n  // Can use this function below, OR use Expo's Push Notification Tool-> https://expo.io/dashboard/notifications\r\n  sendPushNotification = async () => {\r\n    \r\n     \r\n    /*const message = {\r\n      to: this.props.token_notificacao,\r\n      sound: 'default',\r\n      title: 'Original Title',\r\n      body: 'And here is the body!',\r\n      data: { data: 'goes here' },\r\n    };\r\n    const response = await fetch('https://exp.host/--/api/v2/push/send', {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Accept-encoding': 'gzip, deflate',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(message),\r\n    }).then(response=>{\r\n      //console.log('response');\r\n      //console.log(response);\r\n      const data = response._bodyInit;\r\n      //console.log(`Status & Response ID-> ${JSON.stringify(data)}`);\r\n    }).catch(error =>{\r\n      //console.log('error');\r\n      //console.log(error);\r\n    });*/\r\n    \r\n  }\r\n  render() {\r\n    return (null);\r\n  }/**/\r\n  /*render() {\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          alignItems: 'center',\r\n          justifyContent: 'space-around',\r\n        }}>\r\n        \r\n        <Button\r\n          title={'Press to Send Notification'}\r\n          onPress={() => this.sendPushNotification()}\r\n        />\r\n      </View>\r\n    );\r\n  }*/\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  token_notificacao: state.AppReducer.token_notificacao,\r\n  notification: state.AppReducer.notification\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ modificaTokenNotificacao, modificaNotificacao }, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\r\n","import { AppLoading } from 'expo';\r\nimport { Asset } from 'expo-asset';\r\nimport * as Font from 'expo-font';\r\nimport React, { useState, Component } from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport reducers from './src/reducers';\r\n\r\nimport AppNavigator from './navigation/AppNavigator';\r\nimport MyNotifications from './src/components/Notifications';\r\nimport { createStackNavigator, createAppContainer } from 'react-navigation';\r\nimport NavigationService from './NavigationService';\r\n\r\nexport default function App(props) {  \r\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\r\n\r\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={loadResourcesAsync}\r\n        onError={handleLoadingError}\r\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\r\n      />\r\n    );\r\n  } else {\r\n    \r\n    return (\r\n      <Provider store={createStore(reducers, {}, applyMiddleware(ReduxThunk))} >\r\n        <View style={styles.container}>\r\n          {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\r\n         \r\n            <AppNavigator \r\n              ref={navigatorRef => {\r\n                NavigationService.setTopLevelNavigator(navigatorRef);\r\n              }} />\r\n             {\r\n              Platform.OS === 'ios' || Platform.OS === 'android' ?  (<MyNotifications />): (<View></View>)\r\n             } \r\n            \r\n          \r\n          \r\n        </View>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nasync function loadResourcesAsync() {\r\n  await Promise.all([\r\n    Asset.loadAsync([\r\n      require('./assets/images/robot-dev.png'),\r\n      require('./assets/images/robot-prod.png'),\r\n    ]),\r\n    Font.loadAsync({\r\n      // This is the font that we are using for our tab bar\r\n      ...Ionicons.font,\r\n      // We include SpaceMono because we use it in HomeScreen.js. Feel free to\r\n      // remove this if you are not using it in your app\r\n      'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\r\n    }),\r\n  ]);\r\n}\r\n\r\nfunction handleLoadingError(error) {\r\n  // In this case, you might want to report the error to your error reporting\r\n  // service, for example Sentry\r\n  console.warn(error);\r\n}\r\n\r\nfunction handleFinishLoading(setLoadingComplete) {\r\n  setLoadingComplete(true);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n});\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/shopping-bag.48bc0b58.png\";","module.exports = __webpack_public_path__ + \"static/media/PngItem_5107354.d0d8748b.png\";","module.exports = __webpack_public_path__ + \"static/media/empty-bag.25ccb8dc.png\";","module.exports = __webpack_public_path__ + \"static/media/robot-dev.ad32b40a.png\";","module.exports = __webpack_public_path__ + \"static/media/robot-prod.a24587e3.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}